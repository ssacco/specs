<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="scalar"
	 xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
  <title>Scalar Functions</title>

  <section>
    <title>Introduction To Scalar Functions</title>

    <section>
      <title>Domain And Range Errors</title>

      <para>VSIPL does not specify the behavior for domain and range errors
      for scalar functions. The result is implementation dependent. As such,
      domain and range error reporting via the ANSI C <type>errno</type>
      mechanism is implementation dependent,</para>
    </section>

    <section>
      <title>Notes To Implementors</title>

      <para>Where the prototype specification of a functions states:</para>

      <programlisting>vsip_function_name_f</programlisting>

      <para>A compliant implementation is required to implement at least one
      floating point data type (<type>float</type>, <type>double</type>, and
      <type>long double</type>). It is up to the implementation which floating
      point types it supports.</para>

      <para>Similarly,</para>

      <programlisting>vsip_function_name_i</programlisting>

      <para>requires at least one integer data type (<type>short int</type>,
      <type>int</type>, <type>long int</type>, <type>unsigned short
      int</type>, <type>unsigned int</type>, <type>unsigned long int</type>.
      [<type>long long int</type>, <type>unsigned long long
      int</type>]<footnote>
          <para><type>long long int</type> is not an ANSI type, but is
          acceptable as a VSIPL precision suffix of _ie64, _if64, _il64 (or
          _ie128, _if128, _il128 or whatever is appropriate).</para>
        </footnote>).</para>

      <para>The following tables indicate how the VSIPL scalar functions
      correspond with the current ANSI C standard, as well as the proposed
      ANSI C9x draft. While draft standards are fickle things, subject to many
      changes, most of the current C compilers already support all of the C9x
      real scalar functions that are cited in the table.</para>

      <para>The error handling requirements for VSIPL scalar functions are non
      specified. Thus it would be acceptable to implement scalar functions
      with defines.</para>

      <programlisting>#define vsip_acos_d acos
#ifdef HAVE_C9X_MATH_FLOAT
#define vsip_acos_f acosf
#else
#define vsip_acos_f (float)acos
#endif</programlisting>

      <para>Better still, if your system has an ANSI C compiler that supports
      an inline extension:</para>

      <programlisting>inline double vsip_acos_d(double x){return acos(x);};
inline double vsip_acos_f(float x);
{
#ifdef HAVE_MATH_FLOAT
return acosf(x);
#else
return (float)acos((double)x);
#endif
}</programlisting>

      <para>This eliminates confusion with debugging caused by the function
      name substitution.</para>
    </section>

    <section>
      <title>Real Scalar Functions</title>

      <informaltable>
        <tgroup cols="5">
          <thead>
            <row>
              <entry>VSIPL</entry>

              <entry>ANSI C double</entry>

              <entry>ANSI C9x float</entry>

              <entry>ANSI C9x double</entry>

              <entry>ANSI C9x long double</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>vsip_acos_<replaceable>p</replaceable></entry>

              <entry>acos</entry>

              <entry>acosf</entry>

              <entry>acos</entry>

              <entry>acosl</entry>
            </row>

            <row>
              <entry>vsip_asin_<replaceable>p</replaceable></entry>

              <entry>asin</entry>

              <entry>asinf</entry>

              <entry>asin</entry>

              <entry>asinl</entry>
            </row>

            <row>
              <entry>vsip_atan_<replaceable>p</replaceable></entry>

              <entry>atan</entry>

              <entry>atanf</entry>

              <entry>atan</entry>

              <entry>atanl</entry>
            </row>

            <row>
              <entry>vsip_atan2_<replaceable>p</replaceable></entry>

              <entry>atan2</entry>

              <entry>atansf</entry>

              <entry>atan2</entry>

              <entry>atan2l</entry>
            </row>

            <row>
              <entry>vsip_cos_<replaceable>p</replaceable></entry>

              <entry>cos</entry>

              <entry>cosf</entry>

              <entry>cos</entry>

              <entry>cosl</entry>
            </row>

            <row>
              <entry>vsip_sin_<replaceable>p</replaceable></entry>

              <entry>sin</entry>

              <entry>sinf</entry>

              <entry>sin</entry>

              <entry>sinl</entry>
            </row>

            <row>
              <entry>vsip_tan_<replaceable>p</replaceable></entry>

              <entry>tan</entry>

              <entry>tanf</entry>

              <entry>tan</entry>

              <entry>tanl</entry>
            </row>

            <row>
              <entry>vsip_cosh_<replaceable>p</replaceable></entry>

              <entry>cosh</entry>

              <entry>coshf</entry>

              <entry>cosh</entry>

              <entry>coshl</entry>
            </row>

            <row>
              <entry>vsip_sinh_<replaceable>p</replaceable></entry>

              <entry>sinh</entry>

              <entry>sinhf</entry>

              <entry>sinh</entry>

              <entry>sinhl</entry>
            </row>

            <row>
              <entry>vsip_tanh_<replaceable>p</replaceable></entry>

              <entry>tanh</entry>

              <entry>tanhf</entry>

              <entry>tanh</entry>

              <entry>tanhl</entry>
            </row>

            <row>
              <entry>vsip_exp_<replaceable>p</replaceable></entry>

              <entry>exp</entry>

              <entry>expf</entry>

              <entry>exp</entry>

              <entry>expl</entry>
            </row>

            <row>
              <entry>vsip_exp10_<replaceable>p</replaceable></entry>

              <entry/>

              <entry/>

              <entry/>

              <entry/>
            </row>

            <row>
              <entry>vsip_log_<replaceable>p</replaceable></entry>

              <entry>log</entry>

              <entry>logf</entry>

              <entry>log</entry>

              <entry>logl</entry>
            </row>

            <row>
              <entry>vsip_log10_<replaceable>p</replaceable></entry>

              <entry>log10</entry>

              <entry>log10f</entry>

              <entry>log10</entry>

              <entry>log10l</entry>
            </row>

            <row>
              <entry>vsip_pow_<replaceable>p</replaceable></entry>

              <entry>pow</entry>

              <entry>powf</entry>

              <entry>pow</entry>

              <entry>powl</entry>
            </row>

            <row>
              <entry>vsip_rsqrt_<replaceable>p</replaceable></entry>

              <entry/>

              <entry/>

              <entry/>

              <entry/>
            </row>

            <row>
              <entry>vsip_sqrt_<replaceable>p</replaceable></entry>

              <entry>sqrt</entry>

              <entry>sqrtf</entry>

              <entry>sqrt</entry>

              <entry>sqrtl</entry>
            </row>

            <row>
              <entry>vsip_hypot_<replaceable>p</replaceable></entry>

              <entry/>

              <entry>hypotf</entry>

              <entry>hypot</entry>

              <entry>hypotl</entry>
            </row>

            <row>
              <entry>vsip_mag_<replaceable>p</replaceable></entry>

              <entry>fabs</entry>

              <entry>fabsf</entry>

              <entry>fabs</entry>

              <entry>fabsl</entry>
            </row>

            <row>
              <entry>vsip_ceil_<replaceable>p</replaceable></entry>

              <entry>ceil</entry>

              <entry>ceilf</entry>

              <entry>ceil</entry>

              <entry>ceill</entry>
            </row>

            <row>
              <entry>vsip_floor_<replaceable>p</replaceable></entry>

              <entry>floor</entry>

              <entry>floorf</entry>

              <entry>floor</entry>

              <entry>floorl</entry>
            </row>

            <row>
              <entry>vsip_fmod_<replaceable>p</replaceable></entry>

              <entry>modf</entry>

              <entry>modff</entry>

              <entry>modf</entry>

              <entry>modfl</entry>
            </row>

            <row>
              <entry>vsip_max_<replaceable>p</replaceable></entry>

              <entry/>

              <entry>fmaxf</entry>

              <entry>fmax</entry>

              <entry>fmaxl</entry>
            </row>

            <row>
              <entry>vsip_min_<replaceable>p</replaceable></entry>

              <entry/>

              <entry>fminf</entry>

              <entry>fmin</entry>

              <entry>fminl</entry>
            </row>
          </tbody>
        </tgroup>
      </informaltable>

      <para>ANSI C9x plans to extend C with a complex type. While it is too
      early to be certain, we expect <type>vsip_cscalar_d</type>
      (<type>vsip_cscalar_f</type>) to be compatible with complex double
      (complex float).</para>
    </section>

    <section>
      <title>Complex Scalar Functions</title>

      <informaltable>
        <tgroup cols="4">
          <thead>
            <row>
              <entry>VSIPL</entry>

              <entry>ANSI C9x float</entry>

              <entry>ANSI C9x double</entry>

              <entry>ANSI C9x long double</entry>
            </row>
          </thead>

          <tbody>
            <row>
              <entry>vsip_arg_<replaceable>p</replaceable></entry>

              <entry>cargf()</entry>

              <entry>carg()</entry>

              <entry>cargl()</entry>
            </row>

            <row>
              <entry>vsip_cadd_<replaceable>p</replaceable></entry>

              <entry>()+()</entry>

              <entry>()+()</entry>

              <entry>()+()</entry>
            </row>

            <row>
              <entry>vsip_conj_<replaceable>p</replaceable></entry>

              <entry>conjf()</entry>

              <entry>conj()</entry>

              <entry>conjl()</entry>
            </row>

            <row>
              <entry>vsip_cdiv_<replaceable>p</replaceable></entry>

              <entry>()/()</entry>

              <entry>()/()</entry>

              <entry>()/()</entry>
            </row>

            <row>
              <entry>vsip_cexp_<replaceable>p</replaceable></entry>

              <entry>cexpf()</entry>

              <entry>cexp()</entry>

              <entry>cexpl()</entry>
            </row>

            <row>
              <entry>vsip_cjmul_<replaceable>p</replaceable></entry>

              <entry>()*conjf()</entry>

              <entry>()*conj()</entry>

              <entry>()*conjl()</entry>
            </row>

            <row>
              <entry>vsip_clog_<replaceable>p</replaceable></entry>

              <entry>clogf()</entry>

              <entry>clog()</entry>

              <entry>clogl()</entry>
            </row>

            <row>
              <entry>vsip_cmag_<replaceable>p</replaceable></entry>

              <entry>cabsf()</entry>

              <entry>cabs()</entry>

              <entry>cabsl()</entry>
            </row>

            <row>
              <entry>vsip_cmagsq_<replaceable>p</replaceable></entry>

              <entry/>

              <entry/>

              <entry/>
            </row>

            <row>
              <entry>vsip_cmplx_<replaceable>p</replaceable></entry>

              <entry/>

              <entry/>

              <entry/>
            </row>

            <row>
              <entry>vsip_cmul_<replaceable>p</replaceable></entry>

              <entry>()*()</entry>

              <entry>()*()</entry>

              <entry>()*()</entry>
            </row>

            <row>
              <entry>vsip_cneg_<replaceable>p</replaceable></entry>

              <entry>-()</entry>

              <entry>-()</entry>

              <entry>-()</entry>
            </row>

            <row>
              <entry>vsip_crecip_<replaceable>p</replaceable></entry>

              <entry>1.0/()</entry>

              <entry>1.0/()</entry>

              <entry>1.0/()</entry>
            </row>

            <row>
              <entry>vsip_csub_<replaceable>p</replaceable></entry>

              <entry>()-()</entry>

              <entry>()-()</entry>

              <entry>()-()</entry>
            </row>

            <row>
              <entry>vsip_csqrt_<replaceable>p</replaceable></entry>

              <entry>csqrtf()</entry>

              <entry>csqrt()</entry>

              <entry>csqrtl()</entry>
            </row>

            <row>
              <entry>vsip_imag_<replaceable>p</replaceable></entry>

              <entry>cimagf()</entry>

              <entry>cimag()</entry>

              <entry>cimagl()</entry>
            </row>

            <row>
              <entry>vsip_polar_<replaceable>p</replaceable></entry>

              <entry/>

              <entry/>

              <entry/>
            </row>

            <row>
              <entry>vsip_real_<replaceable>p</replaceable></entry>

              <entry>crealf()</entry>

              <entry>creal()</entry>

              <entry>creall()</entry>
            </row>

            <row>
              <entry>vsip_rect_<replaceable>p</replaceable></entry>

              <entry/>

              <entry/>

              <entry/>
            </row>
          </tbody>
        </tgroup>
      </informaltable>
    </section>
  </section>

  <section>
    <title>Real Scalar Functions</title>

    <para>The VSIPL real scalar functions are provided for two
    purposes.</para>

    <orderedlist>
      <listitem>
        <para>VSIPL requires extensive error checking in development mode.
        However, the requirements for error detection and handling for scalar
        functions has not been defined at this time. The VSIPL real scalar
        functions provide a mechanism to implement such error detection and
        handling requirements, if and when they are specified.</para>
      </listitem>

      <listitem>
        <para>ANSI C only defines the functions in the standard C Math library
        for double. VSIPL defines the real scalar functions for all the
        floating types the implementation supports (_f reserves the name space
        for float, double, and long double).</para>
      </listitem>
    </orderedlist>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>vsip_acos_<replaceable>p</replaceable></entry>

            <entry>Scalar Arccosine</entry>
          </row>

          <row>
            <entry>vsip_asin_<replaceable>p</replaceable></entry>

            <entry>Scalar Arcsine</entry>
          </row>

          <row>
            <entry>vsip_atan_<replaceable>p</replaceable></entry>

            <entry>Scalar Arctangent</entry>
          </row>

          <row>
            <entry>vsip_atan2_<replaceable>p</replaceable></entry>

            <entry>Scalar Arctangent of Two Arguments</entry>
          </row>

          <row>
            <entry>vsip_ceil_<replaceable>p</replaceable></entry>

            <entry>Ceiling</entry>
          </row>

          <row>
            <entry>vsip_cos_<replaceable>p</replaceable></entry>

            <entry>Scalar Cosine</entry>
          </row>

          <row>
            <entry>vsip_cosh_<replaceable>p</replaceable></entry>

            <entry>Scalar Hyperbolic Cosine</entry>
          </row>

          <row>
            <entry>vsip_exp_<replaceable>p</replaceable></entry>

            <entry>Scalar Exponential</entry>
          </row>

          <row>
            <entry>vsip_exp10_<replaceable>p</replaceable></entry>

            <entry>Scalar Exponential Base 10</entry>
          </row>

          <row>
            <entry>vsip_floor_<replaceable>p</replaceable></entry>

            <entry>Floor</entry>
          </row>

          <row>
            <entry>vsip_fmod_<replaceable>p</replaceable></entry>

            <entry>Modulo</entry>
          </row>

          <row>
            <entry>vsip_hypot_<replaceable>p</replaceable></entry>

            <entry>Scalar Hypotenuse</entry>
          </row>

          <row>
            <entry>vsip_log_<replaceable>p</replaceable></entry>

            <entry>Scalar Log</entry>
          </row>

          <row>
            <entry>vsip_log10_<replaceable>p</replaceable></entry>

            <entry>Scalar Log Base 10</entry>
          </row>

          <row>
            <entry>vsip_mag_<replaceable>p</replaceable></entry>

            <entry>Scalar Magnitude (Abs)</entry>
          </row>

          <row>
            <entry>vsip_max_<replaceable>p</replaceable></entry>

            <entry>Scalar Maximum</entry>
          </row>

          <row>
            <entry>vsip_min_<replaceable>p</replaceable></entry>

            <entry>Scalar Minimum</entry>
          </row>

          <row>
            <entry>vsip_pow_<replaceable>p</replaceable></entry>

            <entry>Scalar Power</entry>
          </row>

          <row>
            <entry>vsip_rsqrt_<replaceable>p</replaceable></entry>

            <entry>Scalar Reciprocal Square Root</entry>
          </row>

          <row>
            <entry>vsip_sin_<replaceable>p</replaceable></entry>

            <entry>Scalar Sine</entry>
          </row>

          <row>
            <entry>vsip_sinh_<replaceable>p</replaceable></entry>

            <entry>Scalar Hyperbolic Sine</entry>
          </row>

          <row>
            <entry>vsip_sqrt_<replaceable>p</replaceable></entry>

            <entry>Scalar Square Root</entry>
          </row>

          <row>
            <entry>vsip_tan_<replaceable>p</replaceable></entry>

            <entry>Scalar Tangent</entry>
          </row>

          <row>
            <entry>vsip_tanh_<replaceable>p</replaceable></entry>

            <entry>Scalar Hyperbolic Tangent</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="acos">
      <title>vsip_acos_<replaceable>p</replaceable></title>

      <para>Computes the principal radian value [0, π] of the arc cosine of a
      scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>cos</m:mi>

                        <m:mrow>
                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:msup>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_acos_f(vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The arc-cosine</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Input outside the range [-1, 1] is a domain error. Results
            of inputs outside this range are implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="asin"><function>vsip_asin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan"><function>vsip_atan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cos"><function>vsip_cos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="sin"><function>vsip_sin_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tan"><function>vsip_tan_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="asin">
      <title>vsip_asin_<replaceable>p</replaceable></title>

      <para>Computes the principal radian value <inlineequation>
          <m:math display="inline">
            <m:mrow>
              <m:mfenced close="]" open="[">
                <m:mrow>
                  <m:mrow>
                    <m:mo>-</m:mo>

                    <m:mi>π</m:mi>
                  </m:mrow>

                  <m:mo>/</m:mo>

                  <m:mn>2</m:mn>
                </m:mrow>

                <m:mrow>
                  <m:mi>π</m:mi>

                  <m:mo>/</m:mo>

                  <m:mn>2</m:mn>
                </m:mrow>
              </m:mfenced>
            </m:mrow>
          </m:math>
        </inlineequation> of the arc sine of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>sin</m:mi>

                        <m:mrow>
                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:msup>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_asin_f(vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The arc-arcsine</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Input outside the range <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mfenced close="]" open="[">
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mn>1</m:mn>
                    </m:mfenced>
                  </m:mrow>
                </m:math>
              </inlineequation> is a domain error. Results of inputs outside
            this range are implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="acos"><function>vsip_acos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan"><function>vsip_atan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cos"><function>vsip_cos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="sin"><function>vsip_sin_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tan"><function>vsip_tan_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="atan">
      <title>vsip_atan_<replaceable>p</replaceable></title>

      <para>Computes the principal radian value <inlineequation>
          <m:math display="inline">
            <m:mrow>
              <m:mfenced close="]" open="[">
                <m:mrow>
                  <m:mrow>
                    <m:mo>-</m:mo>

                    <m:mi>π</m:mi>
                  </m:mrow>

                  <m:mo>/</m:mo>

                  <m:mn>2</m:mn>
                </m:mrow>

                <m:mrow>
                  <m:mi>π</m:mi>

                  <m:mo>/</m:mo>

                  <m:mn>2</m:mn>
                </m:mrow>
              </m:mfenced>
            </m:mrow>
          </m:math>
        </inlineequation> of the Arctangent of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>tan</m:mi>

                        <m:mrow>
                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:msup>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_atan_f(vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The arc-tangent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="acos"><function>vsip_acos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="asin"><function>vsip_asin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cos"><function>vsip_cos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="sin"><function>vsip_sin_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tan"><function>vsip_tan_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="atan2">
      <title>vsip_atan2_<replaceable>p</replaceable></title>

      <para>Computes the four quadrant radian value <inlineequation>
          <m:math display="inline">
            <m:mrow>
              <m:mfenced close="]" open="[">
                <m:mi>π</m:mi>

                <m:mi>π</m:mi>
              </m:mfenced>
            </m:mrow>
          </m:math>
        </inlineequation> of the arc tangent of the ratio of two
      scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>tan</m:mi>

                        <m:mrow>
                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:msup>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mi>a</m:mi>

                        <m:mo>/</m:mo>

                        <m:mi>b</m:mi>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The rules for calculating
            <function>vsip_atan2_<replaceable>p</replaceable></function> are
            the same as for the ANSI C math function
            <function>atan2</function>. The following table may be used to
            calculate <function>atan2</function>, although other methods may
            also be used.</para>

            <informaltable>
              <tgroup cols="2">
                <thead>
                  <row>
                    <entry align="center">If</entry>

                    <entry align="center">Then</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>&gt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />

                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>≠</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>a</m:mi>

                                <m:mi>b</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mrow>
                              <m:msup>
                                <m:mi>cos</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mrow>
                                <m:mi>b</m:mi>

                                <m:mo>/</m:mo>

                                <m:msqrt>
                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>a</m:mi>

                                      <m:mi>2</m:mi>
                                    </m:msup>

                                    <m:mo>+</m:mo>

                                    <m:msup>
                                      <m:mi>b</m:mi>

                                      <m:mi>2</m:mi>
                                    </m:msup>
                                  </m:mrow>
                                </m:msqrt>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />

                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>a</m:mi>

                                <m:mi>b</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mrow>
                              <m:msup>
                                <m:mi>cos</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mi>b</m:mi>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:msqrt>
                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>a</m:mi>

                                      <m:mi>2</m:mi>
                                    </m:msup>

                                    <m:mo>+</m:mo>

                                    <m:msup>
                                      <m:mi>b</m:mi>

                                      <m:mi>2</m:mi>
                                    </m:msup>
                                  </m:mrow>
                                </m:msqrt>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>π</m:mi>
                            </m:mrow>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />
                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>&gt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>a</m:mi>

                                <m:mi>b</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mrow>
                              <m:msup>
                                <m:mi>cos</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mrow>
                                <m:mi>b</m:mi>

                                <m:mo>/</m:mo>

                                <m:msqrt>
                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>a</m:mi>

                                      <m:mi>2</m:mi>
                                    </m:msup>

                                    <m:mo>+</m:mo>

                                    <m:msup>
                                      <m:mi>b</m:mi>

                                      <m:mi>2</m:mi>
                                    </m:msup>
                                  </m:mrow>
                                </m:msqrt>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>&gt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />
                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>=</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>a</m:mi>

                                <m:mi>0</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mfrac bevelled="true">
                              <m:mi>π</m:mi>

                              <m:mn>2</m:mn>
                            </m:mfrac>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />
                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>=</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>a</m:mi>

                                <m:mi>0</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mrow>
                              <m:mo>-</m:mo>
                            </m:mrow>

                            <m:mfrac bevelled="true">
                              <m:mi>π</m:mi>

                              <m:mn>2</m:mn>
                            </m:mfrac>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>=</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />
                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>&gt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>0</m:mi>

                                <m:mi>b</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mrow>
                              <m:mn>0</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>=</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />
                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>0</m:mi>

                                <m:mi>b</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mrow>
                              <m:mi>π</m:mi>
                            </m:mrow>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>a</m:mi>

                            <m:mo>=</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>

                          <m:mtext>;</m:mtext>
			  <m:mspace width='.5em' />
                          <m:mrow>
                            <m:mi>b</m:mi>

                            <m:mo>=</m:mo>

                            <m:mi>0</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:msup>
                                <m:mi>tan</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>0</m:mi>

                                <m:mi>0</m:mi>
                              </m:mfrac>
                            </m:mrow>

                            <m:mo>≡</m:mo>

                            <m:mtext>Undefined or NaN</m:mtext>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_atan2_f(vsip_scalar_f a, vsip_scalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Numerator</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Denominator</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The arc tangent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The domain of
            <code>vsip_atan2_<replaceable>p</replaceable>(x, y)</code> is not
            valid for both x and y zero, and the result is implementation
            dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="acos"><function>vsip_acos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="asin"><function>vsip_asin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan"><function>vsip_atan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cos"><function>vsip_cos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="sin"><function>vsip_sin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="tan"><function>vsip_tan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="hypot"><function>vsip_hypot_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="arg"><function>vsip_arg_<replaceable>p</replaceable></function></link></para>

            <para>The function
            <function>vsip_hypot_<replaceable>p</replaceable></function> is
            related to
            <function>vsip_atan2_<replaceable>p</replaceable></function> in
            the same way as rectangular to polar conversion is related through
            the magnitude and the argument. Another related function is
            <function>vsip_arg_<replaceable>p</replaceable></function>.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="ceil">
      <title>vsip_ceil_<replaceable>p</replaceable></title>

      <para>Computes the ceiling of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>⌈</m:mo>

                      <m:mi>x</m:mi>

                      <m:mo>⌉</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Returns the smallest integral value greater than or equal to
            the argument.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_ceil_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Return the ceiling.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="floor"><function>vsip_floor_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="fmod"><function>vsip_fmod_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cos">
      <title>vsip_cos_<replaceable>p</replaceable></title>

      <para>Computes the cosine of a scalar angle in radians.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>cos</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_cos_f(vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Angle in radians</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the cosine.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Input arguments are expressed in radians.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="acos"><function>vsip_acos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="asin"><function>vsip_asin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan"><function>vsip_atan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="sin"><function>vsip_sin_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tan"><function>vsip_tan_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cosh">
      <title>vsip_cosh_<replaceable>p</replaceable></title>

      <para>Computes the hyperbolic cosine of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>cosh</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_cosh_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the cosh.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The maximum domain without overflow is implementation
            dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Input arguments are expressed in radians.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="sinh"><function>vsip_sinh_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tanh"><function>vsip_tanh_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="exp">
      <title>vsip_exp_<replaceable>p</replaceable></title>

      <para>Computes the exponential of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mi>x</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_exp_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the exponent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Overflow will occur if the argument is greater than the loge
            of the maximum representable number. If this occurs, the result is
            implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Input arguments are expressed in radians.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="exp10"><function>vsip_exp10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log"><function>vsip_log_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log10"><function>vsip_log10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="pow"><function>vsip_<replaceable>p</replaceable>ow_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="exp10">
      <title>vsip_exp10_<replaceable>p</replaceable></title>

      <para>Computes the base 10 exponential of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:msup>
                      <m:mi>10</m:mi>

                      <m:mi>x</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_exp10_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the exponent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Overflow will occur if the argument is greater than the
            log10 of the maximum representable number. If this occurs, the
            result is implementation dependent.</para>

            <para>Underflow will occur if the argument is less than the
            negative of the log10 of the maximum representable number. If this
            occurs, the result is implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="exp"><function>vsip_exp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log"><function>vsip_log_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log10"><function>vsip_log10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="pow"><function>vsip_<replaceable>p</replaceable>ow_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="floor">
      <title>vsip_floor_<replaceable>p</replaceable></title>

      <para>Computes the floor of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mi>x</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_floor_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the floor.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="ceil"><function>vsip_ceil_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="fmod"><function>vsip_fmod_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="fmod">
      <title>vsip_fmod_<replaceable>p</replaceable></title>

      <para>Computes the remainder of the quotient (modulo) of two
      scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>x</m:mi>

                      <m:mo>-</m:mo>

                      <m:mrow>
                        <m:mi>n</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mi>y</m:mi>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_fmod_f(vsip_scalar_f x, vsip_scalar_f y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the remainder.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>If y is zero, whether a domain error occurs or the function
            returns zero is implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="floor"><function>vsip_floor_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="ceil"><function>vsip_ceil_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="hypot">
      <title>vsip_hypot_<replaceable>p</replaceable></title>

      <para>Computes the square root of the sum of the squares (hypotenuse) of
      the two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:msup>
                          <m:mi>a</m:mi>

                          <m:mi>2</m:mi>
                        </m:msup>

                        <m:mo>+</m:mo>

                        <m:msup>
                          <m:mi>b</m:mi>

                          <m:mi>2</m:mi>
                        </m:msup>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_hypot_f(vsip_scalar_f a, vsip_scalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the hypotenuse.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Intermediate overflows will not occur.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="sqrt"><function>vsip_sqrt_<replaceable>p</replaceable></function></link>,
            <link
            linkend="rsqrt"><function>vsip_rsqrt_<replaceable>p</replaceable></function></link>,
            <link
            linkend="hypot"><function>vsip_hypot_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>

            <para>This function is related to atan2 (in the Elementary Math
            section), in the same way as rectangular to polar conversion is
            related through the magnitude and the argument.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="log">
      <title>vsip_log_<replaceable>p</replaceable></title>

      <para>Computes the natural logarithm of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mi>log</m:mi>

                        <m:mi>e</m:mi>
                      </m:msub>

                      <m:mo>⁡</m:mo>

                      <m:mi>x</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_log_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the natural logarithm.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Arguments less than or equal to zero are not in the domain
            of log and the result is implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Intermediate overflows will not occur.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="exp"><function>vsip_exp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="exp10"><function>vsip_exp10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log10"><function>vsip_log10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="pow"><function>vsip_<replaceable>p</replaceable>ow_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="log10">
      <title>vsip_log10_<replaceable>p</replaceable></title>

      <para>Computes the base 10 logarithm of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mi>log</m:mi>

                        <m:mi>10</m:mi>
                      </m:msub>

                      <m:mo>⁡</m:mo>

                      <m:mi>x</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_log10_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the base 10 logarithm.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Arguments less than or equal to zero are not in the domain
            of log and the result is implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="exp"><function>vsip_exp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="exp10"><function>vsip_exp10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log"><function>vsip_log_<replaceable>p</replaceable></function></link>,
            <link
            linkend="pow"><function>vsip_<replaceable>p</replaceable>ow_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="mag">
      <title>vsip_mag_<replaceable>p</replaceable></title>

      <para>Computes the magnitude (absolute value) of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mi>a</m:mi>

                      <m:mo>|</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_mag_f(vsip_scalar_f a);
vsip_scalar_i vsip_mag_i(visp_scalar_i a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the magnitude.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="max">
      <title>vsip_max_<replaceable>p</replaceable></title>

      <para>Computes the maximum of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mo>max</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mrow>
                        <m:mi>a</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>b</m:mi>
                      </m:mrow>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_max_f(vsip_scalar_f a, vsip_scalar_f b);
vsip_scalar_i vsip_max_i(visp_scalar_i a, vsip_scalar_i b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the maximum value.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="min"><function>vsip_min_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="min">
      <title>vsip_min_<replaceable>p</replaceable></title>

      <para>Computes the minimum of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mo>min</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mrow>
                        <m:mi>a</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>b</m:mi>
                      </m:mrow>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_min_f(vsip_scalar_f a, vsip_scalar_f b);
vsip_scalar_i vsip_min_i(visp_scalar_i a, vsip_scalar_i b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the minimum value.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="max"><function>vsip_max_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="pow">
      <title>vsip_pow_<replaceable>p</replaceable></title>

      <para>Computes the power function of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:msup>
                      <m:mi>x</m:mi>

                      <m:mi>y</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_pow_f(vsip_scalar_f x, vsip_scalar_f y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the power function.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="exp"><function>vsip_exp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="exp10"><function>vsip_exp10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log"><function>vsip_log_<replaceable>p</replaceable></function></link>,
            <link
            linkend="log10"><function>vsip_log10_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="rsqrt">
      <title>vsip_rsqrt_<replaceable>p</replaceable></title>

      <para>Computes the reciprocal square root of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>1</m:mi>

                      <m:msqrt>
                        <m:mi>a</m:mi>
                      </m:msqrt>
                    </m:mfrac>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_rsqrt_f(vsip_scalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the reciprocal square root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>For reciprocal square root calculation the argument must be
            greater than zero to be within the domain of the function. Results
            for cases where the argument is less than or equal zero is
            implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="sqrt"><function>vsip_sqrt_<replaceable>p</replaceable></function></link>,
            <link
            linkend="hypot"><function>vsip_hypot_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="sin">
      <title>vsip_sin_<replaceable>p</replaceable></title>

      <para>Computes the sine of a scalar angle in radians.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>sin</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_sin_f(vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Angle in radians</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the sine.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Input arguments are expressed in radians.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="acos"><function>vsip_acos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="asin"><function>vsip_asin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan"><function>vsip_atan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cos"><function>vsip_cos_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tan"><function>vsip_tan_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="sinh">
      <title>vsip_sinh_<replaceable>p</replaceable></title>

      <para>Computes the hyperbolic sine of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>sinh</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mi>x</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_sinh_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Angle in radians</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the hyperbolic sine.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The maximum domain without overflow is implementation
            dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cosh"><function>vsip_cosh_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="tanh"><function>vsip_tanh_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section>
      <title xml:id="sqrt">vsip_sqrt_<replaceable>p</replaceable></title>

      <para>Computes the square root of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:msqrt>
                      <m:mi>a</m:mi>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_sqrt_f(vsip_scalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the square root.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>For the square root calculation, the argument must be
            greater than or equal to zero to be within the domain of the
            function. Results for cases where the argument is less than zero
            is implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="rsqrt"><function>vsip_rsqrt_<replaceable>p</replaceable></function></link>,
            <link
            linkend="hypot"><function>vsip_hypot_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="tan">
      <title>vsip_tan_<replaceable>p</replaceable></title>

      <para>Computes the tangent of a scalar angle in radians.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>tan</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_tan_f(vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Angle in radians</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the tangent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>For arguments <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>(</m:mo>

                    <m:mrow>
                      <m:mi>n</m:mi>

                      <m:mo>+</m:mo>

                      <m:mrow>
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:mi>2</m:mi>
                        </m:mfrac>

                        <m:mo>⁣</m:mo>

                        <m:mi>π</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>)</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation>, the tangent function has a singularity. The
            result of these argument values are implementation
            dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="acos"><function>vsip_acos_<replaceable>p</replaceable></function></link>,
            <link
            linkend="asin"><function>vsip_asin_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan"><function>vsip_atan_<replaceable>p</replaceable></function></link>,
            <link
            linkend="atan2"><function>vsip_atan2_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cos"><function>vsip_cos_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="sin"><function>vsip_sin_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="tanh">
      <title>vsip_tanh_<replaceable>p</replaceable></title>

      <para>Computes the hyperbolic tangent of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>tanh</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mi>θ</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_tanh_f(vsip_scalar_f x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the hyperbolic tangent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The maximum domain without overflow is implementation
            dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cosh"><function>vsip_cosh_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="sinh"><function>vsip_sinh_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Complex Scalar Functions</title>

    <para>Since ANSI C does not currently support a “complex” data type, a
    minimum set of complex scalar function is needed to support complex
    functions.</para>

    <para>Many of these functions are very simple and may be implemented as
    macros for C compilers that do not support inline functions or for C
    compilers that generate more efficient code from macro forms.</para>

    <para>Macros and functions are not interchangeable. The prototypes in this
    manual are defined as functions to avoid the potential ambiguities of
    macro forms. If a function is implemented as a macro, the documentation
    should specify such and state any consequent restrictions.</para>

    <para>In order to support both macro and function implementations, many
    have a form similar to the complex scalar addition:<programlisting>void vsip_CADD_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);</programlisting></para>

    <para>A macro only version could have been specified as:<programlisting>vsip_CADD_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f r);</programlisting>because
    the macro handles the argument “r” through text replacement.</para>

    <para>By using the first form, both the macro and function form work
    equally well and both macro forms generate equivalent code.</para>

    <para>The notation for function foo:</para>

    <para><inlineequation>
        <m:math display="inline">
          <m:mrow>
            <m:mi>r</m:mi>

            <m:mo>←</m:mo>

            <m:mrow>
              <m:mi>foo</m:mi>

              <m:mo>⁡</m:mo>

              <m:mfenced>
                <m:mi>x</m:mi>
              </m:mfenced>
            </m:mrow>
          </m:mrow>
        </m:math>
      </inlineequation></para>

    <para>The “r” denotes the return value of the function for both the
    “Return By Argument Reference” and the “Return By Return Value”
    forms.</para>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>vsip_arg_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Argument</entry>
          </row>

          <row>
            <entry>vsip_cadd_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Add</entry>
          </row>

          <row>
            <entry>vsip_cdiv_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Divide</entry>
          </row>

          <row>
            <entry>vsip_cexp_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Exponential</entry>
          </row>

          <row>
            <entry>vsip_cjmul_<replaceable>p</replaceable></entry>

            <entry>Complex Conjugate Scalar Multiply</entry>
          </row>

          <row>
            <entry>vsip_clog_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Log</entry>
          </row>

          <row>
            <entry>vsip_cmag_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Magnitude</entry>
          </row>

          <row>
            <entry>vsip_cmagsq_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Magnitude Squared</entry>
          </row>

          <row>
            <entry>vsip_cmplx_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar</entry>
          </row>

          <row>
            <entry>vsip_cmul_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Multiply</entry>
          </row>

          <row>
            <entry>vsip_cneg_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Negate</entry>
          </row>

          <row>
            <entry>vsip_conj_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Conjugate</entry>
          </row>

          <row>
            <entry>vsip_crecip_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Reciprocal</entry>
          </row>

          <row>
            <entry>vsip_csqrt_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Square Root</entry>
          </row>

          <row>
            <entry>vsip_csub_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Subtract</entry>
          </row>

          <row>
            <entry>vsip_imag_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Imaginary</entry>
          </row>

          <row>
            <entry>vsip_polar_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Polar</entry>
          </row>

          <row>
            <entry>vsip_real_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Real</entry>
          </row>

          <row>
            <entry>vsip_rect_<replaceable>p</replaceable></entry>

            <entry>Complex Scalar Rectangular</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="arg">
      <title>vsip_arg_<replaceable>p</replaceable></title>

      <para>Returns the argument in radians [-π, π] of a complex
      scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>tan</m:mi>

                        <m:mrow>
                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:msup>

                      <m:mo>⁡</m:mo>

                      <m:mfrac>
                        <m:mrow>
                          <m:mi>Im</m:mi>

                          <m:mo>⁡</m:mo>

                          <m:mrow>
                            <m:mo>{</m:mo>

                            <m:mi>a</m:mi>

                            <m:mo>}</m:mo>
                          </m:mrow>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>Re</m:mi>

                          <m:mo>⁡</m:mo>

                          <m:mrow>
                            <m:mo>{</m:mo>

                            <m:mi>a</m:mi>

                            <m:mo>}</m:mo>
                          </m:mrow>
                        </m:mrow>
                      </m:mfrac>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_f vsip_arg_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns real scalar - in radians.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>Re</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mi>Im</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi>0</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mo>|</m:mo>

                        <m:mi>Re</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>

                        <m:mo>|</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mrow>
                        <m:mi>Im</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>
                      </m:mrow>

                      <m:mo>|</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi mathvariant="normal">∞</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para>This function may be implemented as a macro and may have
            restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>This function is based on
            vsip_atan2_<replaceable>p</replaceable>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para>vsip_atan2_<replaceable>p</replaceable>, and
            vsip_polar_<replaceable>p</replaceable></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cadd">
      <title>vsip_cadd_<replaceable>p</replaceable></title>

      <para>Computes the complex sum of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>a</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>b</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CADD_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);
void vsip_RCADD_f(vsip_scalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cadd_f(vsip_cscalar_f a, vsip_cscalar_f b);
vsip_cscalar_f vsip_rcadd_f(vsip_scalar_f a, vsip_cscalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Augend - real/complex scalar</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Addend - complex scalar</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output sum - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Return complex sum.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference forms may be implemented as
            macros and may have restrictions on their usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cdiv">
      <title>vsip_cdiv_<replaceable>p</replaceable></title>

      <para>Computes the complex quotient of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>a</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>b</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CRDIV_f(vsip_cscalar_f a, vsip_scalar_f b, vsip_cscalar_f *r);
void vsip_CDIV_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_crdiv_f(vsip_cscalar_f a, vsip_scalar_f b);
vsip_cscalar_f vsip_cdiv_f(vsip_cscalar_f a, vsip_cscalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Numerator - complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Divisor - real/complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output quotient - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar - quotient.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference forms may be implemented as
            macros and may have restrictions on their usage. The result of
            dividing by zero is implementation dependent.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The return by argument reference forms may be implemented as
            macros and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cexp">
      <title>vsip_cexp_<replaceable>p</replaceable></title>

      <para>Computes the complex exponential of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>e</m:mi>

                        <m:mi>a</m:mi>
                      </m:msup>

                      <m:mo>=</m:mo>

                      <m:mrow>
                        <m:mrow>
                          <m:mo>(</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mi>cos</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mi>ω</m:mi>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mrow>
                              <m:mi>j</m:mi>

                              <m:mo>⁢</m:mo>

                              <m:mrow>
                                <m:mi>sin</m:mi>

                                <m:mo>⁡</m:mo>

                                <m:mi>ω</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>

                          <m:mo>)</m:mo>
                        </m:mrow>

                        <m:mo>⁢</m:mo>

                        <m:msup>
                          <m:mi>e</m:mi>

                          <m:mi>σ</m:mi>
                        </m:msup>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where:<inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Re</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mi>a</m:mi>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>=</m:mo>

                  <m:mi>σ</m:mi>

                  <m:mtext>,</m:mtext>

                  <m:mrow>
                    <m:mi>Im</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mi>a</m:mi>

                      <m:mo>}</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi>ω</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>And <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mi>1</m:mi>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CEXP_f(vsip_cscalar_f a, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cexp_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output exponential - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar – complex scalar exponential.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mrow>
                        <m:mi>Re</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>
                      </m:mrow>

                      <m:mo>|</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi mathvariant="normal">∞</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cjmul">
      <title>vsip_cjmul_<replaceable>p</replaceable></title>

      <para>Computes the product a complex scalar with the conjugate of a
      second complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>a</m:mi>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mi>b</m:mi>

                        <m:mi>*</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where "*" denotes complex conjugate.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CJMUL_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cjmul_f(vsip_cscalar_f a, vsip_cscalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Multiplicand - complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Conjugate multiplier - complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output product - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar - conjugate product.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="clog">
      <title>vsip_clog_<replaceable>p</replaceable></title>

      <para>Computes the complex natural logarithm of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:msub>
                          <m:mi>log</m:mi>

                          <m:mi>e</m:mi>
                        </m:msub>

                        <m:mo>⁡</m:mo>

                        <m:mi>a</m:mi>
                      </m:mrow>

                      <m:mo>=</m:mo>

                      <m:mrow>
                        <m:mrow>
                          <m:msub>
                            <m:mi>log</m:mi>

                            <m:mi>e</m:mi>
                          </m:msub>

                          <m:mo>⁡</m:mo>

                          <m:mrow>
                            <m:mo>|</m:mo>

                            <m:mi>a</m:mi>

                            <m:mo>|</m:mo>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mi>j</m:mi>

                          <m:mo>⁢</m:mo>

                          <m:mrow>
                            <m:mi>arg</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mfenced>
                              <m:mi>a</m:mi>
                            </m:mfenced>
                          </m:mrow>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mi>1</m:mi>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CLOG_f(vsip_cscalar_f a, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_clog_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output natural log - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar - natural log of a complex
            scalar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>Re</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mi>Im</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi>0</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mrow>
                        <m:mi>Re</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>
                      </m:mrow>

                      <m:mo>|</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mrow>
                        <m:mi>Im</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>
                      </m:mrow>

                      <m:mo>|</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi mathvariant="normal">∞</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cmag">
      <title>vsip_cmag_<replaceable>p</replaceable></title>

      <para>Computes the magnitude of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>|</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>|</m:mo>
                      </m:mrow>

                      <m:mo>=</m:mo>

                      <m:msqrt>
                        <m:mrow>
                          <m:mi>a</m:mi>

                          <m:mo>⁢</m:mo>

                          <m:msup>
                            <m:mi>a</m:mi>

                            <m:mi>*</m:mi>
                          </m:msup>
                        </m:mrow>
                      </m:msqrt>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where "*" denotes complex conjugate.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cmag_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns real scalar - magnitude.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>This function may be implemented as a macro and may have
            restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Implementation with intermediate overflow is allowed but
            must be documented.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cmagsq">
      <title>vsip_cmagsq_<replaceable>p</replaceable></title>

      <para>Computes the magnitude squared of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mrow>
                          <m:mo>|</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>|</m:mo>
                        </m:mrow>

                        <m:mi>2</m:mi>
                      </m:msup>

                      <m:mo>=</m:mo>

                      <m:mrow>
                        <m:mi>a</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:msup>
                          <m:mi>a</m:mi>

                          <m:mi>*</m:mi>
                        </m:msup>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where "*" denotes complex conjugate.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Return Value:</para>

            <synopsis>vsip_scalar_f vsip_cmagsq_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns real magnitude squared.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>This function may be implemented as a macro and may have
            restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cmplx">
      <title>vsip_cmplx_<replaceable>p</replaceable></title>

      <para>Form a complex scalar from two real scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>a</m:mi>

                      <m:mo>+</m:mo>

                      <m:mrow>
                        <m:mi>j</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mi>b</m:mi>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>;</m:mtext>

                  <m:mrow>
                    <m:mi>a</m:mi>

                    <m:mo>,</m:mo>

                    <m:mi>b</m:mi>
                  </m:mrow>

                  <m:mo>∈</m:mo>

                  <m:mi mathvariant="normal">ℝ</m:mi>
                </m:math>
              </inlineequation></para>

            <para>Where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mi>1</m:mi>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CMPLX_f(vsip_scalar_f a, vsip_scalar_f b, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cmplx_f(vsip_scalar_f a, vsip_scalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Real part - real scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Imaginary part - real scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Return complex scalar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="polar"><function>vsip_polar_<replaceable>p</replaceable></function></link>,
            <link
            linkend="real"><function>vsip_real_<replaceable>p</replaceable></function></link>,
            <link
            linkend="imag"><function>vsip_imag_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="rect"><function>vsip_rect_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cmul">
      <title>vsip_cmul_<replaceable>p</replaceable></title>

      <para>Computes the complex product of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>a</m:mi>

                      <m:mo>⁢</m:mo>

                      <m:mi>b</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CMUL_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);
void vsip_RCMUL_f(vsip_scalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cmul_f(vsip_cscalar_f a, vsip_cscalar_f b);
vsip_cscalar_f vsip_rcmul_f(vsip_scalar_f a, vsip_cscalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Multiplicant - real / complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Multiplier - complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output product - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Return complex scalar - product.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference forms may be implemented as
            macros and may have restrictions on their usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,<link
            linkend="cexp"><function>
            vsip_cexp_<replaceable>p</replaceable></function></link>, <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="cneg">
      <title>vsip_cneg_<replaceable>p</replaceable></title>

      <para>Computes the negation of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mi>a</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CNEG_f(vsip_cscalar_f a, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_cneg_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns negated complex scalar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="conj">
      <title>vsip_conj_<replaceable>p</replaceable></title>

      <para>Computes the complex conjugate of a scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msup>
                        <m:mi>a</m:mi>

                        <m:mi>*</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where "*" denotes complex conjugate.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CONJ_f(vsip_cscalar_f a, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_conj_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output conjugate - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar - conjugate.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="crecip">
      <title>vsip_crecip_<replaceable>p</replaceable></title>

      <para>Computes the reciprocal of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mfrac>
                        <m:mi>1</m:mi>

                        <m:mi>a</m:mi>
                      </m:mfrac>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CRECIP_f(vsip_cscalar_f a, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_crecip_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output reciprocal - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar - reciprocal.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="csqrt">
      <title>vsip_csqrt_<replaceable>p</replaceable></title>

      <para>Computes the square root of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Let <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>θ</m:mi>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mi>arctan</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mfrac>
                          <m:mrow>
                            <m:mi>Im</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mrow>
                              <m:mo>{</m:mo>

                              <m:mi>a</m:mi>

                              <m:mo>}</m:mo>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mi>Re</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mrow>
                              <m:mo>{</m:mo>

                              <m:mi>a</m:mi>

                              <m:mo>}</m:mo>
                            </m:mrow>
                          </m:mrow>
                        </m:mfrac>

                        <m:mo>)</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msqrt>
                        <m:mrow>
                          <m:mo>|</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>|</m:mo>
                        </m:mrow>
                      </m:msqrt>

                      <m:mo>⁢</m:mo>

                      <m:mrow>
                        <m:mo>[</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>cos</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mfrac>
                              <m:mi>θ</m:mi>

                              <m:mi>2</m:mi>
                            </m:mfrac>
                          </m:mrow>

                          <m:mo>+</m:mo>

                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>sin</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfrac>
                                <m:mi>θ</m:mi>

                                <m:mi>2</m:mi>
                              </m:mfrac>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>]</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mi>1</m:mi>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CSQRT_f(vsip_cscalar_f a, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_csqrt_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output square root - complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns square root of complex scalar.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csub"><function>vsip_csub_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="csub">
      <title>vsip_csub_<replaceable>p</replaceable></title>

      <para>Computes the complex difference of two scalars.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>a</m:mi>

                      <m:mo>-</m:mo>

                      <m:mi>b</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_CSUB_f(vsip_cscalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r,);
void vsip_RCSUB_f(vsip_scalar_f a, vsip_cscalar_f b, vsip_cscalar_f *r,);
void vsip_CRSUB_f(vsip_cscalar_f a, vsip_scalar_f b, vsip_cscalar_f *r,);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_cscalar_f vsip_csub_f(vsip_cscalar_f a, vsip_cscalar_f b);
vsip_cscalar_f vsip_rcsub_f(vsip_scalar_f a, vsip_cscalar_f b);
vsip_cscalar_f vsip_crsub_f(vsip_cscalar_f a, vsip_scalar_f b);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Minuend - real/complex scalar argument</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>b</term>

                <listitem>
                  <para>Subtrahend - real/complex scalar</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output difference – complex scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar – difference.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference forms may be implemented as
            macros and may have restrictions on their usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cadd"><function>vsip_cadd_<replaceable>p</replaceable></function></link>,
            <link
            linkend="conj"><function>vsip_conj_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cdiv"><function>vsip_cdiv_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cexp"><function>vsip_cexp_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cjmul"><function>vsip_cjmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="clog"><function>vsip_clog_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmag"><function>vsip_cmag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmagsq"><function>vsip_cmagsq_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cmul"><function>vsip_cmul_<replaceable>p</replaceable></function></link>,
            <link
            linkend="cneg"><function>vsip_cneg_<replaceable>p</replaceable></function></link>,
            <link
            linkend="crecip"><function>vsip_crecip_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="csqrt"><function>vsip_csqrt_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="imag">
      <title>vsip_imag_<replaceable>p</replaceable></title>

      <para>Extract the imaginary part of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>Im</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Return Value:</para>

            <synopsis>vsip_scalar_f vsip_imag_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a real scalar containing the imaginary part of the
            complex scalar input.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>This function may be implemented as a macro and may have
            restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="polar"><function>vsip_polar_<replaceable>p</replaceable></function></link>,
            <link
            linkend="real"><function>vsip_real_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="rect"><function>vsip_rect_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="polar">
      <title>vsip_polar_<replaceable>p</replaceable></title>

      <para>Convert a complex scalar from rectangular to polar form. The polar
      data consists of a real scalar containing the radius and a corresponding
      real scalar containing the argument (angle) of the complex
      scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>ρ</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mi>a</m:mi>

                      <m:mo>|</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>θ</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>arctan</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mfenced>
                        <m:mfrac>
                          <m:mrow>
                            <m:mi>Im</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mrow>
                              <m:mo>{</m:mo>

                              <m:mi>a</m:mi>

                              <m:mo>}</m:mo>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mi>Re</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mrow>
                              <m:mo>{</m:mo>

                              <m:mi>a</m:mi>

                              <m:mo>}</m:mo>
                            </m:mrow>
                          </m:mrow>
                        </m:mfrac>
                      </m:mfenced>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_polar_f(vsip_cscalar_f a, vsip_scalar_f *radius, vsip_scalar_f *theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument (rectangular form)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>radius</term>

                <listitem>
                  <para>Pointer to output radius - real scalar</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Pointer to output angle - real scalar</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>Re</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mi>Im</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi>0</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mo>|</m:mo>

                        <m:mi>Re</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>

                        <m:mo>|</m:mo>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>|</m:mo>

                      <m:mrow>
                        <m:mi>Im</m:mi>

                        <m:mo>⁡</m:mo>

                        <m:mrow>
                          <m:mo>{</m:mo>

                          <m:mi>a</m:mi>

                          <m:mo>}</m:mo>
                        </m:mrow>
                      </m:mrow>

                      <m:mo>|</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mi mathvariant="normal">∞</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, invalid argument</para>

            <para>This function may be implemented as a macro and may have
            restrictions on it usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>In VSIPL, complex numbers are always in rectangular
            (Cartesian) format. The polar form is represented by two real
            scalars.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="imag"><function>vsip_imag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="real"><function>vsip_real_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="rect"><function>vsip_rect_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="real">
      <title>vsip_real_<replaceable>p</replaceable></title>

      <para>Extract the real part of a complex scalar.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>r</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>Re</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mrow>
                        <m:mo>{</m:mo>

                        <m:mi>a</m:mi>

                        <m:mo>}</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Return Value:</para>

            <synopsis>vsip_scalar_f vsip_real_f(vsip_cscalar_f a);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>a</term>

                <listitem>
                  <para>Complex scalar argument</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a real scalar containing the real part of the
            complex scalar input.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>This function may be implemented as a macro and may have
            restrictions on its usage.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="imag"><function>vsip_imag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="polar"><function>vsip_polar_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="rect"><function>vsip_rect_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="rect">
      <title>vsip_rect_<replaceable>p</replaceable></title>

      <para>Convert a pair of real scalars from complex polar to complex
      rectangular form.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>ρ</m:mi>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>radius</m:mi>

                      <m:mo>⁢</m:mo>

                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>cos</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mi>θ</m:mi>
                          </m:mrow>

                          <m:mo>+</m:mo>

                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>sin</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mi>θ</m:mi>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mi>1</m:mi>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_RECT_f(vsip_scalar_f radius, vsip_scalar_f theta, vsip_cscalar_f *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>void vsip_cscalar_f vsip_rect_f(vsip_scalar_f radius, vsip_scalar_f theta);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>radius</term>

                <listitem>
                  <para>Radius – real scalar</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>theta</term>

                <listitem>
                  <para>Angle – real scalar</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output – complex scalar in rectangular
                  form</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns complex scalar in rectangular form.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The return by argument reference form may be implemented as
            a macro and may have restrictions on its usage.</para>

            <para>In VSIPL, complex numbers are always in rectangular
            (Cartesian) format. The polar form is represented by two real
            scalars.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="cmplx"><function>vsip_cmplx_<replaceable>p</replaceable></function></link>,
            <link
            linkend="imag"><function>vsip_imag_<replaceable>p</replaceable></function></link>,
            <link
            linkend="polar"><function>vsip_polar_<replaceable>p</replaceable></function></link>,
            and <link
            linkend="real"><function>vsip_real_<replaceable>p</replaceable></function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Index Scalar Functions</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry>vsip_matindex</entry>

            <entry>Matrix Index</entry>
          </row>

          <row>
            <entry>vsip_mcolindex</entry>

            <entry>Matrix Column Index</entry>
          </row>

          <row>
            <entry>vsip_mrowindex</entry>

            <entry>Matrix Row Index</entry>
          </row>

          <row>
            <entry>vsip_tenindex</entry>

            <entry>Tensor Index</entry>
          </row>

          <row>
            <entry>vsip_txindex</entry>

            <entry>Tensor x Index</entry>
          </row>

          <row>
            <entry>vsip_tyindex</entry>

            <entry>Tensor y Index</entry>
          </row>

          <row>
            <entry>vsip_tzindex</entry>

            <entry>Tensor z Index</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="matindex">
      <title>vsip_matindex</title>

      <para>Form a matrix index from two vector indices.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>row</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>col</m:mi>
                      </m:mrow>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mi>row</m:mi>

                      <m:mo>,</m:mo>

                      <m:mi>col</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_MATINDEX(vsip_scalar_vi row, vsip_scalar_vi col, vsip_scalar_mi *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_scalar_mi vsip_matindex(vsip_scalar_vi row, vsip_scalar_vi col);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>row</term>

                <listitem>
                  <para>Row - vector index</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>col</term>

                <listitem>
                  <para>Column - vector index</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output - matrix index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the matrix index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Note to implementors: since VSIPL does not specify what the
            base integer type is; the arguments must be of type
            vsip_scalar_vi, which in an unsigned integer type sufficient to
            index the largest supported vector.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="mcolindex"><function>vsip_mcolindex</function></link>,
            and <link
            linkend="mrowindex"><function>vsip_mrowindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="mcolindex">
      <title>vsip_mcolindex</title>

      <para>Returns the column vector index from a matrix index.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mi>col</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>row</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>col</m:mi>
                      </m:mrow>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_vi vsip_mcolindex(vsip_scalar_mi index);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>index</term>

                <listitem>
                  <para>Matrix index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the column vector index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="matindex"><function>vsip_matindex</function></link>, and
            <link
            linkend="mrowindex"><function>vsip_mrowindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="mrowindex">
      <title>vsip_mrowindex</title>

      <para>Returns the row vector index from a matrix index.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mi>row</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>row</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>col</m:mi>
                      </m:mrow>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_vi vsip_mrowindex(vsip_scalar_mi index);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>index</term>

                <listitem>
                  <para>Matrix index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the row vector index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="matindex"><function>vsip_matindex</function></link>, and
            <link
            linkend="mcolindex"><function>vsip_mcolindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="tenindex">
      <title>vsip_tenindex</title>

      <para>Form a tensor index from three vector indices.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>z</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>y</m:mi>
                      </m:mrow>

                      <m:mo>,</m:mo>

                      <m:mi>x</m:mi>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mi>z</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>y</m:mi>
                      </m:mrow>

                      <m:mo>,</m:mo>

                      <m:mi>x</m:mi>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Return By Argument Reference:</para>

            <synopsis>void vsip_TENINDEX(vsip_scalar_vi z, vsip_scalar_vi y, vsip_scalar_vi x, 
                   vsip_scalar_ti *r);</synopsis>

            <para>Return By Return Value:</para>

            <synopsis>vsip_scalar_ti vsip_tenindex(vsip_scalar_vi z, vsip_scalar_vi y, vsip_scalar_vi x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>z</term>

                <listitem>
                  <para>z - vector index</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>y - vector index</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>x - vector index</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>r</term>

                <listitem>
                  <para>Pointer to output - tensor index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the tensor index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="tenindex"><function>vsip_tenindex</function></link>,
            <link linkend="txindex"><function>vsip_txindex</function></link>,
            <link linkend="tyindex"><function>vsip_tyindex</function></link>,
            and <link
            linkend="tzindex"><function>vsip_tzindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="txindex">
      <title>vsip_txindex</title>

      <para>Returns the x index from a tensor index.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mi>x</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>z</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>y</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>x</m:mi>
                      </m:mrow>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_vi vsip_txindex(vsip_scalar_ti index);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>index</term>

                <listitem>
                  <para>Tensor index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the tensor x index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="tenindex"><function>vsip_tenindex</function></link>,
            <link linkend="tyindex"><function>vsip_tyindex</function></link>,
            and <link
            linkend="tzindex"><function>vsip_tzindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="tyindex">
      <title>vsip_tyindex</title>

      <para>Returns the y index from a tensor index.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mi>y</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>z</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>y</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>x</m:mi>
                      </m:mrow>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_vi vsip_tyindex(vsip_scalar_ti index);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>index</term>

                <listitem>
                  <para>Tensor index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the tensor y index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="tenindex"><function>vsip_tenindex</function></link>,
            <link linkend="txindex"><function>vsip_txindex</function></link>,
            and <link
            linkend="tzindex"><function>vsip_tzindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="tzindex">
      <title>vsip_tzindex</title>

      <para>Returns the z index from a tensor index.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mi>z</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:mrow>
                        <m:mi>z</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>y</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>x</m:mi>
                      </m:mrow>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_scalar_vi vsip_tzindex(vsip_scalar_ti index);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>index</term>

                <listitem>
                  <para>Tensor index</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns the tensor z index.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><link
            linkend="tenindex"><function>vsip_tenindex</function></link>,
            <link linkend="txindex"><function>vsip_txindex</function></link>,
            and <link
            linkend="tyindex"><function>vsip_tyindex</function></link></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>
</chapter>
