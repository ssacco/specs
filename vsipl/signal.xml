<?xml version="1.0" encoding="UTF-8"?>
<chapter version="5.0" xml:id="signal"
	 xmlns="http://docbook.org/ns/docbook"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:m="http://www.w3.org/1998/Math/MathML">
  <title>Signal Processing Functions</title>

  <section>
    <title>Introduction</title>

    <para>This clause provides specifications for the FFT, Window,
    Convolution/Correlation, Filter and Miscellaneous routines for the VSIPL
    library.</para>

    <section>
      <title>FFT Routines</title>

      <section>
        <title>Introduction</title>

        <para>All FFT routines compute a forward or inverse operation with a
        user provided scaling. 1D Fourier transform operations are supported
        for all values of N. The basic implementation requirement is for an
        <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>O</m:mi>

                <m:mo>⁡</m:mo>

                <m:mfenced>
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>⁢</m:mo>

                    <m:mrow>
                      <m:mi>log</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mfenced>
                        <m:mi>N</m:mi>
                      </m:mfenced>
                    </m:mrow>
                  </m:mrow>
                </m:mfenced>
              </m:mrow>
            </m:math>
          </inlineequation> fast algorithm for the cases <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>N</m:mi>

                <m:mo>=</m:mo>

                <m:msup>
                  <m:mn>2</m:mn>

                  <m:mi>n</m:mi>
                </m:msup>
              </m:mrow>
            </m:math>
          </inlineequation> or <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>N</m:mi>

                <m:mo>=</m:mo>

                <m:mrow>
                  <m:mn>3</m:mn>

                  <m:mo>⁢</m:mo>

                  <m:msup>
                    <m:mn>2</m:mn>

                    <m:mi>n</m:mi>
                  </m:msup>
                </m:mrow>
              </m:mrow>
            </m:math>
          </inlineequation>, where n is a nonnegative integer. Some
        implementations may provide fast algorithms for other combinations of
        small prime factors and may even handle the general case of large
        prime factors or prime sizes. When an implementation does not provide
        a fast algorithm, a discrete Fourier transform of <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>O</m:mi>

                <m:mo>⁡</m:mo>

                <m:mfenced>
                  <m:msup>
                    <m:mi>N</m:mi>

                    <m:mn>2</m:mn>
                  </m:msup>
                </m:mfenced>
              </m:mrow>
            </m:math>
          </inlineequation> or faster will be performed.</para>

        <para>2D FFT operations are supported for all values of M and N.
        However, the basic implementation requirement is for an
        <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>O</m:mi>

                <m:mo>⁡</m:mo>

                <m:mfenced>
                  <m:mrow>
                    <m:mrow>
                      <m:mi>M</m:mi>

                      <m:mo>⁢</m:mo>

                      <m:mi>N</m:mi>
                    </m:mrow>

                    <m:mo>⁢</m:mo>

                    <m:mrow>
                      <m:mi>log</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mfenced>
                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>⁢</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mfenced>
                    </m:mrow>
                  </m:mrow>
                </m:mfenced>
              </m:mrow>
            </m:math>
          </inlineequation> fast algorithm for the cases of <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>M</m:mi>

                <m:mo>=</m:mo>

                <m:msup>
                  <m:mn>2</m:mn>

                  <m:mi>m</m:mi>
                </m:msup>
              </m:mrow>
            </m:math>
          </inlineequation> or <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>M</m:mi>

                <m:mo>=</m:mo>

                <m:mrow>
                  <m:mn>3</m:mn>

                  <m:mo>⁢</m:mo>

                  <m:msup>
                    <m:mn>2</m:mn>

                    <m:mi>m</m:mi>
                  </m:msup>
                </m:mrow>
              </m:mrow>
            </m:math>
          </inlineequation> and <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>N</m:mi>

                <m:mo>=</m:mo>

                <m:msup>
                  <m:mn>2</m:mn>

                  <m:mi>n</m:mi>
                </m:msup>
              </m:mrow>
            </m:math>
          </inlineequation> or <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>N</m:mi>

                <m:mo>=</m:mo>

                <m:mrow>
                  <m:mn>3</m:mn>

                  <m:mo>⁢</m:mo>

                  <m:msup>
                    <m:mn>2</m:mn>

                    <m:mi>n</m:mi>
                  </m:msup>
                </m:mrow>
              </m:mrow>
            </m:math>
          </inlineequation>, where m and n are nonnegative integers. Some
        implementations may provide fast algorithms for other combinations of
        small prime factors and may even handle the general case of large
        prime factors or prime sizes. When an implementation does not provide
        a fast algorithm, a DFT of <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>O</m:mi>

                <m:mo>⁡</m:mo>

                <m:mfenced>
                  <m:mrow>
                    <m:mrow>
                      <m:msup>
                        <m:mi>M</m:mi>

                        <m:mn>2</m:mn>
                      </m:msup>

                      <m:mo>⁢</m:mo>

                      <m:mi>N</m:mi>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mrow>
                      <m:mi>M</m:mi>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mi>N</m:mi>

                        <m:mn>2</m:mn>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:mfenced>
              </m:mrow>
            </m:math>
          </inlineequation> or faster will be performed.</para>

        <para>3D FFT operations are supported for all values of M, N, and P.
        However, the basic implementation requirement is for an
        <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>O</m:mi>

                <m:mo>⁡</m:mo>

                <m:mfenced>
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>⁢</m:mo>

                      <m:mi>P</m:mi>
                    </m:mrow>

                    <m:mo>⁢</m:mo>

                    <m:mrow>
                      <m:mi>log</m:mi>

                      <m:mo>⁡</m:mo>

                      <m:mfenced>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>M</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>⁢</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mfenced>
                    </m:mrow>
                  </m:mrow>
                </m:mfenced>
              </m:mrow>
            </m:math>
          </inlineequation> fast algorithm for the cases of <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>M</m:mi>

                <m:mo>=</m:mo>

                <m:msup>
                  <m:mn>2</m:mn>

                  <m:mi>m</m:mi>
                </m:msup>
              </m:mrow>
            </m:math>
          </inlineequation> or <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>M</m:mi>

                <m:mo>=</m:mo>

                <m:mrow>
                  <m:mn>3</m:mn>

                  <m:mo>⁢</m:mo>

                  <m:msup>
                    <m:mn>2</m:mn>

                    <m:mi>m</m:mi>
                  </m:msup>
                </m:mrow>
              </m:mrow>
            </m:math>
          </inlineequation>, <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>N</m:mi>

                <m:mo>=</m:mo>

                <m:msup>
                  <m:mn>2</m:mn>

                  <m:mi>n</m:mi>
                </m:msup>
              </m:mrow>
            </m:math>
          </inlineequation> or <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>N</m:mi>

                <m:mo>=</m:mo>

                <m:mrow>
                  <m:mn>3</m:mn>

                  <m:mo>⁢</m:mo>

                  <m:msup>
                    <m:mn>2</m:mn>

                    <m:mi>n</m:mi>
                  </m:msup>
                </m:mrow>
              </m:mrow>
            </m:math>
          </inlineequation> and <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>P</m:mi>

                <m:mo>=</m:mo>

                <m:msup>
                  <m:mn>2</m:mn>

                  <m:mi>p</m:mi>
                </m:msup>
              </m:mrow>
            </m:math>
          </inlineequation> or <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>P</m:mi>

                <m:mo>=</m:mo>

                <m:mrow>
                  <m:mn>3</m:mn>

                  <m:mo>⁢</m:mo>

                  <m:msup>
                    <m:mn>2</m:mn>

                    <m:mi>p</m:mi>
                  </m:msup>
                </m:mrow>
              </m:mrow>
            </m:math>
          </inlineequation>, where m, n, and p are nonnegative integers. Some
        implementations may provide fast algorithms for other combinations of
        small prime factors and may even handle the general case of large
        prime factors or prime sizes. When an implementation does not provide
        a fast algorithm, a DFT of <inlineequation>
            <m:math display="inline">
              <m:mrow>
                <m:mi>O</m:mi>

                <m:mo>⁡</m:mo>

                <m:mfenced>
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:msup>
                            <m:mi>M</m:mi>

                            <m:mn>2</m:mn>
                          </m:msup>

                          <m:mo>⁢</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>⁢</m:mo>

                        <m:mi>P</m:mi>
                      </m:mrow>

                      <m:mo>+</m:mo>

                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>⁢</m:mo>

                          <m:msup>
                            <m:mi>N</m:mi>

                            <m:mn>2</m:mn>
                          </m:msup>
                        </m:mrow>

                        <m:mo>⁢</m:mo>

                        <m:mi>P</m:mi>
                      </m:mrow>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mi>P</m:mi>

                        <m:mn>2</m:mn>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:mfenced>
              </m:mrow>
            </m:math>
          </inlineequation> or faster will be performed.</para>
      </section>

      <section>
        <title>1D FFT</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_ccfftop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfftop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfftip_create_f </function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfftip_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_crfftop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_crfftop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_rcfftop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_rcfftop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfftop_f</function></entry>

                <entry>complex-to-complex out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_ccfftip_f</function></entry>

                <entry>complex-to-complex in-place</entry>
              </row>

              <row>
                <entry><function>vsip_crfftop_f</function></entry>

                <entry>complex-to-real out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_rcfftop_f</function></entry>

                <entry>real-to-complex out-of-place</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>Multiple 1D FFT</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_ccfftmop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfftm_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfftmip_create_f </function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfftm_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_crfftmop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_crfftm_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_rcfftmop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_rcfftm_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfftmop_f</function></entry>

                <entry>complex-to-complex out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_ccfftmip_f</function></entry>

                <entry>complex-to-complex in-place</entry>
              </row>

              <row>
                <entry><function>vsip_crfftmop_f</function></entry>

                <entry>complex-to-real out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_rcfftmop_f</function></entry>

                <entry>real-to-complex out-of-place</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>2D FFT</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_ccfft2dop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfft3dop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfft2dip_create_f </function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfft3dip_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_crfft2dop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_crfft3dop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_rcfft2dop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_rcfft3dop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfft2dop_f</function></entry>

                <entry>complex-to-complex out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_ccfft2dip_f</function></entry>

                <entry>complex-to-complex in-place</entry>
              </row>

              <row>
                <entry><function>vsip_crfft2dop_f</function></entry>

                <entry>complex-to-real out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_rcfft2dop_f</function></entry>

                <entry>real-to-complex out-of-place</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>3D FFT</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_ccfft3dop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfft2dop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfft3dip_create_f </function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_ccfft2dip_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_crfft3dop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_crfft2dop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_rcfft3dop_create_f</function></entry>

                <entry>initialize FFT object for the routine
                <function>vsip_rcfft2dop_f</function></entry>
              </row>

              <row>
                <entry><function>vsip_ccfft3dop_f</function></entry>

                <entry>complex-to-complex out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_ccfft3dip_f</function></entry>

                <entry>complex-to-complex in-place</entry>
              </row>

              <row>
                <entry><function>vsip_crfft3dop_f</function></entry>

                <entry>complex-to-real out-of-place</entry>
              </row>

              <row>
                <entry><function>vsip_rcfft3dop_f</function></entry>

                <entry>real-to-complex out-of-place</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>FFT Object Utility Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_fft_destroy_f</function></entry>

                <entry>destroy the FFT object</entry>
              </row>

              <row>
                <entry><function>vsip_fft_getattr_f </function></entry>

                <entry><function>get the attributes of the FFT
                object</function></entry>
              </row>

              <row>
                <entry><function>vsip_fft_setwindow_f</function></entry>

                <entry><function>window the FFT input as part of the FFT
                calculation</function></entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>Summary of VSIPL FFT Routines</title>

        <para>The following table lists the functionality supported by the FFT
        routines</para>

        <table>
          <title>Computational Routines</title>

          <tgroup cols="4">
            <thead>
              <row>
                <entry align="center">1D</entry>

                <entry align="center">Multi 1D</entry>

                <entry align="center">2D</entry>

                <entry align="center">3D</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><para><function>vsip_ccfftop_f</function></para><para><function>vsip_ccfftip_f</function></para></entry>

                <entry><para><function>vsip_ccfftmop_f</function></para><para><function>vsip_ccfftmip_f</function></para></entry>

                <entry><para><function>vsip_ccfft2dop_f</function></para><para><function>vsip_ccfft2dip_f</function></para></entry>

                <entry><para><function>vsip_ccfft3dop_f</function></para><para><function>vsip_ccfft3dip_f</function></para></entry>
              </row>

              <row>
                <entry><para><function>vsip_crfftop_f</function></para></entry>

                <entry><para><function>vsip_crfftmop_f</function></para></entry>

                <entry><para><function>vsip_crfft2dop_f</function></para></entry>

                <entry><para><function>vsip_crfft3dop_f</function></para></entry>
              </row>

              <row>
                <entry><para><function>vsip_rcfftop_f</function></para></entry>

                <entry><para><function>vsip_rcfftmop_f</function></para></entry>

                <entry><para><function>vsip_rcfft2dop_f</function></para></entry>

                <entry><para><function>vsip_rcfft3dop_f</function></para></entry>
              </row>
            </tbody>
          </tgroup>
        </table>

        <table role="smaller">
          <title>FFT Object Initialization Routines</title>

          <tgroup cols="4">
            <thead>
              <row>
                <entry align="center">1D</entry>

                <entry align="center">Multi 1D</entry>

                <entry align="center">2D</entry>

                <entry align="center">3D</entry>
              </row>
            </thead>

            <tbody>
              <row>
                <entry><para><function>vsip_ccfftop_create_f</function></para><para><function>vsip_ccfftip_create_f</function></para></entry>

                <entry><para><function>vsip_ccfftmop_create_f</function></para><para><function>vsip_ccfftmip_create_f</function></para></entry>

                <entry><para><function>vsip_ccfft2dop_create_f</function></para><para><function>vsip_ccfft2dip_create_f</function></para></entry>

                <entry><para><function>vsip_ccfft3dop_create_f</function></para><para><function>vsip_ccfft3dip_create_f</function></para></entry>
              </row>

              <row>
                <entry><para><function>vsip_crfftop_create_f</function></para></entry>

                <entry><para><function>vsip_crfftmop_create_f</function></para></entry>

                <entry><para><function>vsip_crfft2dop_create_f</function></para></entry>

                <entry><para><function>vsip_crfft3dop_create_f</function></para></entry>
              </row>

              <row>
                <entry><para><function>vsip_rcfftop_create_f</function></para></entry>

                <entry><para><function>vsip_rcfftmop_create_f</function></para></entry>

                <entry><para><function>vsip_rcfft2dop_create_f</function></para></entry>

                <entry><para><function>vsip_rcfft3dop_create_f</function></para></entry>
              </row>
            </tbody>
          </tgroup>
        </table>
      </section>

      <section>
        <title>References</title>

        <bibliolist>
          <bibliomixed>Charles Van Loan, Computational Frameworks for the Fast
          Fourier Transform, Society for Industrial and Applied Mathematics,
          1992.</bibliomixed>

          <bibliomixed>Winthrop W. Smith and Joanne M. Smith, Handbook of
          Real-Time Fast Fourier Transforms, IEEE Press, 1995.</bibliomixed>
        </bibliolist>
      </section>
    </section>

    <section>
      <title>Window Routines</title>

      <section>
        <title>Introduction</title>

        <para>VSIPL provides only a minimum set of common window functions.
        All window routines create a block of the requested window length,
        create and bind a real vector of unit stride, zero offset, and window
        length to the block, and return the vector initialized to the window
        weights. For other windows the user can bind a block to a user array
        of pre-computed weights and admit the data to VSIPL, or can compute a
        set of appropriate weights using VSIPL functionality.</para>
      </section>

      <section>
        <title>Window Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_vcreate_hanning_f</function></entry>

                <entry>create a Hanning window vector</entry>
              </row>

              <row>
                <entry><function>vsip_vcreate_blackman_f</function></entry>

                <entry>create a Blackman window vector</entry>
              </row>

              <row>
                <entry><function>vsip_vcreate_kaiser_f</function></entry>

                <entry>create a Kaiser window vector</entry>
              </row>

              <row>
                <entry><function>vsip_vcreate_cheby_f</function></entry>

                <entry>create a Dolph-Chebyshev window vector</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>References</title>

        <bibliolist>
          <bibliomixed>Alan V. Oppenheim, Ronald W. Schaefer, Discrete-Time
          Signal Processing, Prentice-Hall, Inc., 1989</bibliomixed>

          <bibliomixed>Edited by the IEEE ASSP Society, Programs for Digital
          Signal Processing, IEEE Press, 1979.</bibliomixed>

          <bibliomixed>Ronald Diderich, Calculating Chebyshev Coefficients via
          the Discrete Fourier Transform, Proceedings of the IEEE, pg. 1395,
          October 1974.</bibliomixed>

          <bibliomixed>Albert H. Nuttall, Generation of Dolph-Chebyshev
          Weights via a Fast Fourier Transform, Proceedings of the IEEE, pg.
          1396, October 1974.</bibliomixed>
        </bibliolist>
      </section>
    </section>

    <section>
      <title>Filter Routines</title>

      <section>
        <title>Introduction</title>

        <para/>
      </section>

      <section>
        <title>Filter Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_<replaceable>d</replaceable>fir_create_<replaceable>f</replaceable></function></entry>

                <entry>Create Decimated FIR Filter</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>firflt_<replaceable>f</replaceable></function></entry>

                <entry>Decimated FIR Filter</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>fir_getattr_<replaceable>f</replaceable></function></entry>

                <entry>Get FIR Filter Attributes</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>fir_destroy_<replaceable>f</replaceable></function></entry>

                <entry>Destroy FIR Filter</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>fir_reset_<replaceable>f</replaceable></function></entry>

                <entry>Reset FIR filter object to initial state</entry>
              </row>

              <row>
                <entry><function>vsip_iir_create_<replaceable>f</replaceable></function></entry>

                <entry>Create IIR Filter</entry>
              </row>

              <row>
                <entry><function>vsip_iirflt_<replaceable>f</replaceable></function></entry>

                <entry>IIR Filter</entry>
              </row>

              <row>
                <entry><function>vsip_iir_getattr_<replaceable>f</replaceable></function></entry>

                <entry>Get IIR Filter Attributes</entry>
              </row>

              <row>
                <entry><function>vsip_iir_destroy_<replaceable>f</replaceable></function></entry>

                <entry>Destroy IIR Filter</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>References</title>

        <bibliolist>
          <bibliomixed>Alan V. Oppenheim, Ronald W. Schaefer, Discrete-Time
          Signal Processing, Prentice-Hall, Inc., 1989.</bibliomixed>
        </bibliolist>
      </section>
    </section>

    <section>
      <title>Convolution/Correlation Routines</title>

      <section>
        <title>Introduction</title>

        <para/>
      </section>

      <section>
        <title>1D Convolution Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_<replaceable>d</replaceable>conv1d_create_<replaceable>f</replaceable></function></entry>

                <entry>create 1D filter convolution object</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>convolve1d_<replaceable>f</replaceable></function></entry>

                <entry>compute 1D convolution</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>conv1d_destroy_<replaceable>f</replaceable></function></entry>

                <entry>destroy a 1D convolution object</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>conv1d_getattr_<replaceable>f</replaceable></function></entry>

                <entry>get 1D convolution object attributes</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>2D Convolution Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_<replaceable>d</replaceable>conv2d_create_<replaceable>f</replaceable></function></entry>

                <entry>create 2D filter convolution object</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>convolve2d_<replaceable>f</replaceable></function></entry>

                <entry>compute 2D convolution</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>conv2d_destroy_<replaceable>f</replaceable></function></entry>

                <entry>destroy a 2D convolution object</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>d</replaceable>conv2d_getattr_<replaceable>f</replaceable></function></entry>

                <entry>get 2D convolution object attributes</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>1D Correlation Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_corr1d_create_<replaceable>f</replaceable></function></entry>

                <entry>create 1D correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_ccorr1d_create_<replaceable>f</replaceable></function></entry>

                <entry>create 1D complex correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_correlate1d_<replaceable>f</replaceable></function></entry>

                <entry>compute 1D correlation</entry>
              </row>

              <row>
                <entry><function>vsip_ccorrelate1d_<replaceable>f</replaceable></function></entry>

                <entry>compute 1D complex correlation</entry>
              </row>

              <row>
                <entry><function>vsip_corr1d_destroy_<replaceable>f</replaceable></function></entry>

                <entry>destroy a 1D correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_ccorr1d_destroy_<replaceable>f</replaceable></function></entry>

                <entry>destroy a 1D complex correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_corr1d_getattr_<replaceable>f</replaceable></function></entry>

                <entry>get 1D correlation object attributes</entry>
              </row>

              <row>
                <entry><function>vsip_ccorr1d_getattr_<replaceable>f</replaceable></function></entry>

                <entry>get 1D complex correlation object attributes</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>2D Correlation Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_corr2d_create_<replaceable>f</replaceable></function></entry>

                <entry>create 2D correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_ccorr2d_create_<replaceable>f</replaceable></function></entry>

                <entry>create 2D complex correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_correlate2d_<replaceable>f</replaceable></function></entry>

                <entry>compute 2D correlation</entry>
              </row>

              <row>
                <entry><function>vsip_ccorrelate2d_<replaceable>f</replaceable></function></entry>

                <entry>compute 2D complex correlation</entry>
              </row>

              <row>
                <entry><function>vsip_corr2d_destroy_<replaceable>f</replaceable></function></entry>

                <entry>destroy a 2D correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_ccorr2d_destroy_<replaceable>f</replaceable></function></entry>

                <entry>destroy a 2D complex correlation object</entry>
              </row>

              <row>
                <entry><function>vsip_corr2d_getattr_<replaceable>f</replaceable></function></entry>

                <entry>get 2D correlation object attributes</entry>
              </row>

              <row>
                <entry><function>vsip_ccorr2d_getattr_<replaceable>f</replaceable></function></entry>

                <entry>get 2D complex correlation object attributes</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>References</title>

        <bibliolist>
          <bibliomixed>Alan V. Oppenheim, Ronald W. Schaefer, Discrete-Time
          Signal Processing, Prentice-Hall, Inc., 1989.</bibliomixed>
        </bibliolist>
      </section>
    </section>

    <section>
      <title>Miscellaneous Routines</title>

      <section>
        <title>Introduction</title>

        <para/>
      </section>

      <section>
        <title>Miscellaneous Routines</title>

        <informaltable>
          <tgroup cols="2">
            <tbody>
              <row>
                <entry><function>vsip_histo_<replaceable>f</replaceable></function></entry>

                <entry>Compute the histogram of a vector (matrix)</entry>
              </row>

              <row>
                <entry><function>vsip_<replaceable>ds</replaceable>freqswap_<replaceable>f</replaceable></function></entry>

                <entry>Frequency swap (map zero frequency to center)</entry>
              </row>
            </tbody>
          </tgroup>
        </informaltable>
      </section>

      <section>
        <title>References</title>

        <para/>
      </section>
    </section>
  </section>

  <section>
    <title>FFT Functions</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry><function>vsip_ccfftx_<replaceable>f</replaceable></function></entry>

            <entry>FFT Complex to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_crfftop_<replaceable>f</replaceable></function></entry>

            <entry>FFT Complex to Real</entry>
          </row>

          <row>
            <entry><function>vsip_rcfftop_<replaceable>f</replaceable></function></entry>

            <entry>FFT Real to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_dfftx_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 1D FFT Object</entry>
          </row>

          <row>
            <entry><function>vsip_ccfftmx_<replaceable>f</replaceable></function></entry>

            <entry>FFT Multiple Complex to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_crfftmop_<replaceable>f</replaceable></function></entry>

            <entry>FFT Multiple Complex to Real</entry>
          </row>

          <row>
            <entry><function>vsip_rcfftmop_<replaceable>f</replaceable></function></entry>

            <entry>FFT Multiple Real to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_fft_setwindow_<replaceable>f</replaceable></function></entry>

            <entry>Set a FFT Window</entry>
          </row>

          <row>
            <entry><function>vsip_dfftmx_create_<replaceable>f</replaceable></function></entry>

            <entry>Create Multiple FFT Object</entry>
          </row>

          <row>
            <entry><function>vsip_ccfft2dx_<replaceable>f</replaceable></function></entry>

            <entry>2D FFT Complex to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_crfft2dop_<replaceable>f</replaceable></function></entry>

            <entry>2D FFT Complex to Real</entry>
          </row>

          <row>
            <entry><function>vsip_rcfft2dop_<replaceable>f</replaceable></function></entry>

            <entry>2D FFT Real to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_fftm_setwindow_<replaceable>f</replaceable></function></entry>

            <entry>Set a Multiple FFT Window</entry>
          </row>

          <row>
            <entry><function>vsip_dfft2dx_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 2D FFT Object</entry>
          </row>

          <row>
            <entry><function>vsip_ccfft3dx_<replaceable>f</replaceable></function></entry>

            <entry>3D FFT Complex to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_crfft3dop_<replaceable>f</replaceable></function></entry>

            <entry>3D FFT Complex to Real</entry>
          </row>

          <row>
            <entry><function>vsip_rcfft3dop_<replaceable>f</replaceable></function></entry>

            <entry>3D FFT Real to Complex</entry>
          </row>

          <row>
            <entry><function>vsip_dfft3dx_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 3D FFT Object</entry>
          </row>

          <row>
            <entry><function>vsip_fftn_destroy_<replaceable>f</replaceable></function></entry>

            <entry>Destroy FFT Object</entry>
          </row>

          <row>
            <entry><function>vsip_fftn_getattr_<replaceable>f</replaceable></function></entry>

            <entry>FFT Get Attributes</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="ccfftx">
      <title>vsip_ccfft<replaceable>x</replaceable>_<replaceable>f</replaceable></title>

      <para>Apply a complex-to-complex Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-complex Fast Fourier Transform (FFT)
            of the complex vector <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>x</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex vector
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>N</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Out-of-place:</para>

            <synopsis>void vsip_ccfftop_<replaceable>f</replaceable>(const vsip_fft_f *fft, 
                    const vsip_cvview_f *x, const vsip_cvview_f *y);</synopsis>

            <para>In-place:</para>

            <synopsis>void vsip_ccfftip_<replaceable>f</replaceable>(const vsip_fft_f *fft, const vsip_cvview_f *xy);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 1D FFT object, created by
                  <function>vsip_ccfftx_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>View of input complex vector of length N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>View of output complex vector of length N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>xy</term>

                <listitem>
                  <para>View of input/output complex vector of length N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-complex FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_ccfftop_<replaceable>f</replaceable></function>
                requires an out-of-place FFT object,
                <function>vsip_ccfftip_<replaceable>f</replaceable></function>
                requires an in-place FFT object.</para>
              </listitem>

              <listitem>
                <para>The input and output must be complex vector views of
                length N, where N is obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place FFT, the input and output vector
                views must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para>In-place complex-to-complex FFT</para>

            <programlisting><xi:include href="examples/ccfftx.c" parse="text"/></programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="crfftop">
      <title>vsip_crfftop_<replaceable>f</replaceable></title>

      <para>Apply a complex-to-real Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-real (inverse) Fast Fourier Transform
            (FFT) of the complex vector <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>x</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the real vector
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>N</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_crfftop_<replaceable>f</replaceable>(const vsip_fft_f *fft,
                    const vsip_cvview_f *x, const vsip_vview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 1D FFT object, created by
                  <function>vsip_crfftop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>View of input complex vector of length N/2 +1 where
                  the value indexed as 0 contains the DC (0 frequency) value
                  and the value indexed as N/2 contains the folding frequency
                  (one half the sample rate) value.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>View of output real vector of length N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Only unit stride views are supported.</para>

            <para>The length, N, must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-real out-of-place
                FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a complex vector view of length N/2
                +1, where N is obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The output must be a real vector view of length N, where
                N is obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place FFT, the input and output vector
                views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output vector views must be unit
                stride.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Generally, the FFT transforms a complex sequence into a
            complex sequence. However, in certain applications we may know the
            output sequence is real. Often, this is the case because the
            complex input sequence was the transform of a real sequence. In
            this case, you can save about half of the computational
            work.</para>

            <para>For the output sequence, y, to be a real sequence, the
            following identity on the input sequence, x, must be true:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>x</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:msubsup>
                        <m:mi>x</m:mi>

                        <m:mi>N-n</m:mi>

                        <m:mi>*</m:mi>
                      </m:msubsup>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>N</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>n</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>The input values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>n</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> for <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>n</m:mi>

                    <m:mo>&gt;</m:mo>

                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> need not be supplied; they can be inferred
            from the first half of the input.</para>

            <para>Thus, in the complex-to-real routine,
            <function>vsip_crfftx_<replaceable>f</replaceable></function>, x
            is a complex vector of length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>N</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mi>+1</m:mi>
                </m:math>
              </inlineequation> and y is a real vector of length N. Even
            though only <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>N</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mi>+1</m:mi>
                </m:math>
              </inlineequation> input complex values are supplied, the size of
            the transform is still N in this case, because implicitly you are
            using the FFT formula for a sequence of length N.</para>

            <para>The first value of the input vector, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>o</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> must be a real number that is, it must have
            zero imaginary part. The first value corresponds to the zero (DC)
            frequency component of the data. Since we restrict N to be an even
            number then the last value of the input vector, <inlineequation>
                <m:math>
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mfrac bevelled="true">
                      <m:mi>N</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>
                  </m:msub>
                </m:math>
              </inlineequation>, must also be real. The last value corresponds
            to one half the Nyquist rate (or sample rate). This value is
            sometimes called the folding frequency The routine
            <function>vsip_crfftop_<replaceable>f</replaceable></function>
            assumes that these values are real; if you specify a nonzero
            imaginary part, it is ignored.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <programlisting><xi:include href="examples/crfftop.c" parse="text"/></programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            <function>vsip_rcfftop_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="rcfftop">
      <title>vsip_rcfftop_<replaceable>f</replaceable></title>

      <para>Apply a real-to-complex Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a real-to-complex (forward) Fast Fourier Transform
            (FFT) of the real vector <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>x</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex vector
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>(See Notes/References for more details.)</para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>N</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_rcfftop_<replaceable>f</replaceable>(const vsip_fft_f *fft, 
                    const vsip_vview_f *x, const vsip_cvview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 1D FFT object, created by
                  <function>vsip_rcfftop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>View of input real vector of length N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>View of output complex vector of length N/2+1. The
                  first value placed in the output vector is the DC frequency
                  value, and the last value is the folding frequency value
                  equal to one half the sample rate of the input
                  vector.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Only unit stride views are supported.</para>

            <para>The length, N, must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a real-to-complex out-of-place
                FFT object.</para>
              </listitem>

              <listitem>
                <para>N even, where N is obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a real vector view of even length
                N.</para>
              </listitem>

              <listitem>
                <para>The output must be a complex vector view of length (N/2)
                + 1.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place FFT, the input and output vector
                views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output vector views must be unit
                stride.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The mathematical definition of the Fourier transform takes a
            sequence N complex values and transforms it to another sequence of
            N complex values. A complex-to-complex FFT routine, such as
            <function>vsip_ccfft<replaceable>x</replaceable>_<replaceable>f</replaceable></function>,
            will take N complex input values, and produce N complex output
            values.</para>

            <para>The purpose of a separate real-to-complex FFT routine is
            efficiency. Since the input data are real, you can make use of
            this fact to save almost half of the computational work. The
            theory of Fourier transforms tells us that for real input data,
            you have to compute only the first <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mrow>
                        <m:mi>N</m:mi>

                        <m:mo>/</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation> complex output values, because the remaining
            values can be computed from the first half of the values by the
            simple formula:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:msubsup>
                      <m:mi>y</m:mi>

                      <m:mi>N-k</m:mi>

                      <m:mn>*</m:mn>
                    </m:msubsup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>k</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>For real input data, the first output value, y0, will always
            be a real number; therefore, the imaginary part will be exactly
            zero. The first output value is sometimes called the DC component
            of the FFT and corresponds to zero frequency. Since we restrict N
            to be an even number, yN/2, will also be real and thus, have zero
            imaginary part. The last value is called the folding frequency and
            is equal to one half the sample rate of the input data.</para>

            <para>Thus, in the real-to-complex routine,
            <function>vsip_rcfftop_<replaceable>f</replaceable></function>, x
            is a real array of even length N and y is a complex array of
            length N/2 +1.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <programlisting><xi:include href="examples/rcfftop.c" parse="text"/></programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            <function>vsip_crfftop_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfftx">
      <title>vsip_<replaceable>d</replaceable>fft<replaceable>x_create</replaceable>_<replaceable>f</replaceable></title>

      <para>Create a 1D FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a 1D FFT object. The FFT object encapsulates the
            information on what type of FFT is to be computed and may at the
            implementor’s discretion partially pre-compute or optimize the FFT
            based on this information.</para>

            <para>The FFT object is used to compute a complex to complex, real
            to complex, or complex-to-real Fast Fourier Transform (FFT) of
            vector <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>x</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> , which stores the results in the vector
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> .</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>N</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_fft_<replaceable>f</replaceable> *
vsip_<replaceable>d</replaceable>fft<replaceable>x</replaceable>_create_<replaceable>f</replaceable>(vsip_length N, vsip_scalar_<replaceable>f</replaceable> scale, vsip_fft_dir dir, 
                    vsip_length ntimes, vsip_alg_hint hint);</synopsis>

            <para>Where:</para>

            <para><variablelist>
                <varlistentry>
                  <term>d</term>

                  <listitem>
                    <para>is one of {cc, cr, rc} which corresponds to:</para>

                    <para>complex-to-complex, complex-to-real, and
                    real-to-complex</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>x</term>

                  <listitem>
                    <para>is one of {op, ip} which corresponds to:</para>

                    <para>out-of-place, and in-place</para>
                  </listitem>
                </varlistentry>
              </variablelist></para>

            <synopsis>vsip_fft_f *
vsip_ccfftip_create_f(vsip_length N, vsip_scalar_f scale, vsip_fft_dir dir, 
                      vsip_length ntimes, vsip_alg_hint hint);
vsip_fft_f *
vsip_ccfftop_create_f(vsip_length N, vsip_scalar_f scale, vsip_fft_dir dir,
                      vsip_length ntimes, vsip_alg_hint hint);
vsip_fft_f *
vsip_rcfftop_create_f(vsip_length N, vsip_scalar_f scale,
                      vsip_length ntimes, vsip_alg_hint hint);
vsip_fft_f *
vsip_crfftop_create_f(vsip_length N, vsip_scalar_f scale,
                      vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of FFT</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>scale</term>

                <listitem>
                  <para>Real scale factor, typical values of scale are 1,
                  <inlineequation>
                      <m:math display="inline">
                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:math>
                    </inlineequation> , and <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>N</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>dir</term>

                <listitem>
                  <para>Forward or Inverse FFT (note the argument is only for
                  complex-to- complex)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate how many times the FFT object will be
                  invoked. A value of zero is treated as semi-infinite.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine filtering approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The return value is a pointer to a 1D FFT object, or null if
            it fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>For complex-to-real and real-to-complex FFTs, N must be
            even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para><parameter>N</parameter>, the length of the FFT must be
                positive, non-zero. For complex-to-real and real-to- complex
                FFTs, N must be even.</para>
              </listitem>

              <listitem>
                <para><parameter>dir</parameter> must be a valid member of the
                <type>vsip_fft_dir</type> enumeration.</para>
              </listitem>

              <listitem>
                <para><parameter>hint</parameter> must be a valid member of
                the vsip_alg_hint enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>For the complex-to-complex Fourier transform, the transform
            direction must be specified. For the real-to-complex Fourier
            transform, it is an implied forward transform. For the complex-to-
            real Fourier transform, it is an implied inverse transform.</para>

            <para>FFT operations are supported for all values of N. However,
            the basic implementation requirement is for an O(N log N) fast
            algorithm for the cases <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>n</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>n</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, where n is a nonnegative integer. Some
            implementations may provide fast algorithms for other combinations
            of small prime factors and may even handle the general case of
            large prime factors or prime sizes. When an implementation does
            not provide a fast algorithm, a DFT of <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>O</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mfenced>
                      <m:msup>
                        <m:mi>N</m:mi>

                        <m:mn>2</m:mn>
                      </m:msup>
                    </m:mfenced>
                  </m:mrow>
                </m:math>
              </inlineequation> or faster will be performed.</para>

            <para>An implementation of this function may do nothing beyond
            save a copy of its calling parameters. It is suggested that this
            function be used to initialize (if necessary) a global twiddle
            table that all threads can read.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            FFT based on this information. If an FFT is to be called once or a
            few times, pre-computing may be not worthwhile.
            Pre-computing/optimization may include, but is not limited to,
            building a “twiddle table,” allocating a workspace, building an
            algorithmic plan, and building an optimal FFT. Ideally the
            implementation uses a-priori time and space information with
            ntimes to optimize the FFT object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints is:</para>

            <itemizedlist>
              <listitem>
                <para>Minimize total FFT execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the FFT total memory requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>

              <listitem>
                <para>Only one hint may be specified.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para>See examples in
            <function>vsip_ccfftx_<replaceable>f</replaceable></function>,
            <function>vsip_crfftx_<replaceable>f</replaceable></function>, and
            <function>vsip_rcfftx_<replaceable>f</replaceable></function>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft<replaceable>x</replaceable>_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="fft_setwindow">
      <title>vsip_fft_setwindow_<replaceable>f</replaceable></title>

      <para>Set a window (data taper) as part of the FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>The FFT object is created with a standard default boxcar
            window. This function will set a user defined window as part of
            the FFT object which will do the data windowing in conjunction
            with the FFT.</para>

            <para>The FFT object is used to compute a complex to complex, real
            to complex, or complex-to-real Fast Fourier Transform (FFT) of
            vector <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>x</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> , which stores the results in the vector
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> .</para>

            <para>When a window <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>t</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>t</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> is set then</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>t</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>N</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void *vsip_fft_setwindow_f(vsip_vview_f *t, vsip_fft_f *fft);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>t</term>

                <listitem>
                  <para>Vector of window values. This vector must be the same
                  length as the fft input data set when the FFT object was
                  created.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>The FFT object to modify with new window
                  values.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para><parameter>All objects must be valid.
                </parameter></para>
              </listitem>

              <listitem>
                <para>The window vector must be the proper length for the FFT
                object.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>When the FFT object is created the default window is
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>t</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> for all n.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="ccfftmx">
      <title>vsip_ccfftm<replaceable>x</replaceable>_<replaceable>f</replaceable></title>

      <para>Apply a multiple complex-to-complex Fast Fourier Transform
      (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-complex Fast Fourier Transform (FFT)
            of the complex matrix <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex matrix
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k,l</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para>By rows:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>l,k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>l,n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>k</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, 1, ..., M-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>or by columns:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k,l</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n,l</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, 1, ..., M-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>for</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>∈</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Out-of-place:</para>

            <synopsis>void vsip_ccfftmop_f(const vsip_fftm_f *fft, 
                     const vsip_cmview_f *X, const vsip_cmview_f *Y);</synopsis>

            <para>In-place:</para>

            <synopsis>void vsip_ccfftmip_f(const vsip_fftm_f *fft, const vsip_cmview_f *XY);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 1D FFT object, created by
                  <function>vsip_ccfftmx_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input complex matrix of size M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output complex matrix of size M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>XY</term>

                <listitem>
                  <para>View of input/output complex matrix of size M by
                  N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-complex multiple FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_ccfftmop_<replaceable>f</replaceable></function>
                requires an out-of-place multiple FFT object,
                <function>vsip_ccfftmip_<replaceable>f</replaceable></function>
                requires an in-place multiple FFT object.</para>
              </listitem>

              <listitem>
                <para>The input and output must be a complex matrix views of
                size M by N, where M and N are obtained from the FFT
                object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place FFT, the input and output matrix
                views must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para>In-place complex-to-complex FFT</para>

            <programlisting><xi:include href="examples/ccfftmx.c" parse="text"/></programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfftm<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="crfftmop">
      <title>vsip_crfftmop_<replaceable>f</replaceable></title>

      <para>Apply a multiple complex-to-real Fast Fourier Transform
      (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-real (inverse) Fast Fourier Transform
            (FFT) of the complex matrix <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the real matrix
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k,l</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para>By rows:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>l,k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>l,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>k</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1, and l = 0, 1, ..., M - 1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>or by columns:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k,l</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n,l</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1, and l = 0, 1, ..., M - 1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>∈</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_crfftmop_<replaceable>f</replaceable>(const vsip_fft_f *fft,
                     const vsip_cvview_f *X, const vsip_vview_f *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 1D FFT object, created by
                  <function>vsip_crfftmop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input complex matrix of size- M/2 +1 by N, or
                  M by N/2 +1</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output real matrix of size M by N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Only unit stride along the specified row or column FFT
            direction is supported. The output length of the individual FFTs
            must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-real multiple FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_crfftmop_<replaceable>f</replaceable></function>
                requires an out-of-place multiple FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a complex matrix view of length of
                size:</para>

                <itemizedlist>
                  <listitem>
                    <para>By Rows: M by N/2 +1, N even.</para>
                  </listitem>

                  <listitem>
                    <para>By Column: M/2 +1 by N, M even.</para>
                  </listitem>
                </itemizedlist>

                <para>where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The output must be a real matrix view of length of size
                M by N, where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For a multiple out-of-place FFT, the input and output
                matrix views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output matrix views must be unit-stride in
                the transform direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The mathematical definition of the Fourier transform takes a
            sequence N complex values and transforms it to another sequence of
            N complex values. A complex-to-complex FFT routine, such as
            <function>vsip_ccfftm_<replaceable>f</replaceable></function>,
            will take M (N) sets of N (M) complex input values, and produce N
            (M) complex output values.</para>

            <para>Fourier transforms of length N (M), for the output matrix,
            Y, to be a real vector, the following identity on the input
            matrix, X, must be true:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>x</m:mi>

                      <m:mi>l,k</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:msubsup>
                        <m:mi>x</m:mi>

                        <m:mi>l,M-k</m:mi>

                        <m:mi>*</m:mi>
                      </m:msubsup>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>M</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>k</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>M</m:mi>
                </m:math>
              </inlineequation></para>

            <para>or</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>x</m:mi>

                      <m:mi>k,l</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:msubsup>
                        <m:mi>x</m:mi>

                        <m:mi>M-k,l</m:mi>

                        <m:mi>*</m:mi>
                      </m:msubsup>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>N</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>k</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>And, in fact, the input values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>l,k</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> for <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>k</m:mi>

                    <m:mo>&gt;</m:mo>

                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>M</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>k,l</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> for <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>k</m:mi>

                    <m:mo>&gt;</m:mo>

                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>M</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation>) are unnecessary; they can be inferred from
            the first half of the input.</para>

            <para>Another implication is that <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>l,0</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>0,1</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>), must be a real number. Also since N (M) is
            an even number, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>l,N/2</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>M/2,l</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>) will be real. The routine
            <function>vsip_crfftmop_<replaceable>f</replaceable></function>
            assumes that these values are real. The imaginary part is
            ignored.</para>

            <para>Thus, X is a complex matrix view of size M/2 +1 by N, or M
            by N/2 +1.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfftm<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="rcfftmop">
      <title>vsip_rcfftmop_<replaceable>f</replaceable></title>

      <para>Apply a multiple real-to-complex out of place Fast Fourier
      Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a real-to-complex (forward) Fast Fourier Transform
            (FFT) of the real matrix <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex matrix
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k,l</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para>A series of 1D real vectors are stored in a matrix object in
            row major or column major order. Multiple 1D FFTs are then
            performed on the series along the unit stride (row or column)
            direction and the result is stored as a complex matrix.</para>

            <para>By rows:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>l,k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>l,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>k</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, 1, ..., M - 1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>or by columns:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>(See Notes/References for more details.)</para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>N</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_rcfftop_<replaceable>f</replaceable>(const vsip_fft_f *fft,
                    const vsip_vview_f *x, const vsip_cvview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 1D FFT object, created by
                  <function>vsip_rcfftmop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input real matrix of size M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output complex matrix of size M/2 +1 by N, or
                  M by N/2 +1</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Only unit stride along the specified row or column FFT
            direction is supported. (FFT direction is specified in the create
            function.)</para>

            <para>The input lengths of the individual FFTs must be
            even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a real-to-complex multiple FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_rcfftmop_<replaceable>f</replaceable></function>
                requires an out-of-place multiple FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a real matrix view of length of size M
                by N, where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The output must be a complex matrix view of length of
                size:</para>

                <itemizedlist>
                  <listitem>
                    <para>By Rows: M by N/2 +1, N even</para>
                  </listitem>

                  <listitem>
                    <para>By Column: M/2 +1 by N, M even</para>
                  </listitem>
                </itemizedlist>

                <para>where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For a multiple out-of-place FFT, the input and output
                matrix views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output matrix must be unit-stride in the
                transform direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The mathematical definition of the Fourier transform takes a
            sequence of N complex values and transforms it to another sequence
            of N complex values. A complex-to-complex FFT routine, such as
            <function>vsip_ccfftm_<replaceable>f</replaceable></function>,
            will take M (N) sets of N (M) complex input values, and produce N
            (M) complex output values.</para>

            <para>The reason for having a separate real-to-complex FFT routine
            is efficiency. Because the input data are real, you can make use
            of this fact to save almost half of the computational work. For
            real input data, you have to compute only the first
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mfrac bevelled="true">
                        <m:mi>N</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mfrac bevelled="true">
                        <m:mi>M</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>) complex output values, because the remaining
            values can be computed from the first half of the values by the
            simple formula:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>l,k</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:msubsup>
                      <m:mi>y</m:mi>

                      <m:mi>l,N-k</m:mi>

                      <m:mn>*</m:mn>
                    </m:msubsup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>M</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>k</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>M</m:mi>
                </m:math>
              </inlineequation></para>

            <para>or</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>k,l</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:msubsup>
                      <m:mi>y</m:mi>

                      <m:mi>N-k,l</m:mi>

                      <m:mn>*</m:mn>
                    </m:msubsup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>k</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>For real input data, the output value, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>l,0</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mn>0,l</m:mn>
                  </m:msub>
                </m:math>
              </inlineequation>) will always be a real number. Also, since
            N(M) is an even number, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>l,N/2</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>Y</m:mi>

                    <m:mi>m/2,l</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>) will be real.</para>

            <para>Thus, in the real-to-complex routine,
            <function>vsip_rcfftm<replaceable>x</replaceable>_<replaceable>f</replaceable></function>,
            X is a real matrix of size M by N, and Y ! is a complex matrix of
            size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mfrac bevelled="true">
                        <m:mi>M</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>by N, or M by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mfrac bevelled="true">
                        <m:mi>N</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fft<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfftmx">
      <title>vsip_<replaceable>d</replaceable>fftm<replaceable>x</replaceable>_create_<replaceable>f</replaceable></title>

      <para>Create a 1D multiple FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a 1D multiple FFT object. The FFT object
            encapsulates the information on what type of FFT is to be computed
            and may at the implementor’s discretion pre-compute or optimize
            the FFT based on this information.</para>

            <para>This FFT object is used to compute multiple complex to
            complex, real to complex, or complex- to-real Fast Fourier
            Transforms (FFTs) of matrix X = (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>m,n</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>), which stores the results in the matrix Y =
            (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>k,l</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>).</para>

            <para>The 1D data to be transformed is stored in a matrix object
            in row major or column major order. Multiple 1D FFTs are then
            performed along the specified row or column direction.</para>

            <para>By rows:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>i,k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>i,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>k</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, ..., M-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>or by columns:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k,l</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n,l</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, ..., N-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for P = M, N</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_fftm_f *
vsip_dfftmx_create_f(vsip_length M, vsip_length N, vsip_scalar_f scale,
                     vsip_fft_dir dir, vsip_major major, 
                     vsip_length ntimes, vsip_alg_hint hint);</synopsis>

            <para>Where:</para>

            <para><variablelist>
                <varlistentry>
                  <term>d</term>

                  <listitem>
                    <para>is one of {cc, cr, rc} which corresponds to:</para>

                    <para>complex-to-complex, complex-to-real, and
                    real-to-complex</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>x</term>

                  <listitem>
                    <para>is one of {op, ip} which corresponds to:</para>

                    <para>out-of-place, and in-place</para>
                  </listitem>
                </varlistentry>
              </variablelist></para>

            <synopsis>vsip_fftm_<replaceable>f</replaceable> *
vsip_ccfftmop_create_<replaceable>f</replaceable>(vsip_length M, vsip_length N, 
                       vsip_scalar_<replaceable>f</replaceable> scale, vsip_fft_dir dir, vsip_major major,
                       vsip_length ntimes, vsip_alg_hint hint);
vsip_fftm_<replaceable>f</replaceable> *
vsip_ccfftmip_create_<replaceable>f</replaceable>(vsip_length M, vsip_length N, 
                       vsip_scalar_<replaceable>f</replaceable> scale, vsip_fft_dir dir, vsip_major major, 
                       vsip_length ntimes, vsip_alg_hint hint);
vsip_fftm_<replaceable>f</replaceable> *
vsip_rcfftmop_create_<replaceable>f</replaceable>(vsip_length M, vsip_length N, 
                       vsip_scalar_<replaceable>f</replaceable> scale, vsip_major major,
                       vsip_length ntimes, vsip_alg_hint hint);
vsip_fftm_<replaceable>f</replaceable> *
vsip_crfftmop_create_<replaceable>f</replaceable>(vsip_length M, vsip_length N,
                       vsip_scalar_<replaceable>f</replaceable> scale, vsip_major major,
                       vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>M</term>

                <listitem>
                  <para>Length of column FFT or number of row ffts</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of row FFT or number of column ffts</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>scale</term>

                <listitem>
                  <para>Real scale factor, typical values of scale are 1,
                  <inlineequation>
                      <m:math display="inline">
                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:math>
                    </inlineequation>, <inlineequation>
                      <m:math display="inline">
                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:math>
                    </inlineequation> , <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>M</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation>, and <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>N</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>dir</term>

                <listitem>
                  <para>Forward or Inverse FFT (note the argument is only for
                  complex-to- complex)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>major</term>

                <listitem>
                  <para>Direction of multiple FFT</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate how many times the FFT object will be
                  invoked. A value of zero is treated as semi-infinite.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine filtering approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The return value is a pointer to a 1D FFT object, or null if
            it fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Real-to-complex and complex-to-real FFTs are restricted to
            unit stride along the specified, <parameter>major</parameter>, row
            or column FFT direction.</para>

            <para>The length in the unit stride direction of these functions
            must be even. Implementations may limit the maximum size, M and/or
            N.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>M, and N, must be greater than zero.</para>
              </listitem>

              <listitem>
                <para><parameter>dir</parameter> must be a valid member of the
                <type>vsip_fft_dir</type> enumeration.</para>
              </listitem>

              <listitem>
                <para><parameter>major</parameter> must be a valid member of
                the <type>vsip_major</type> enumeration.</para>
              </listitem>

              <listitem>
                <para><parameter>hint</parameter> must be a valid member of
                the <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>For the complex-to-complex Fourier transform, the transform
            direction must be specified. For the real-to-complex Fourier
            transform it is an implied forward transform. For the complex-to-
            real Fourier transform it is an implied inverse transform.</para>

            <para>FFT operations are supported for all values of N and M (up
            to implementation-dependent limits). However, the basic
            implementation requirement is for an O(N log N) fast algorithm for
            the cases <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>n</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>n</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, where n is a nonnegative integer. Some
            implementations may provide fast algorithms for other combinations
            of small prime factors and may even handle the general case of
            large prime factors or prime sizes. When an implementation does
            not provide a fast algorithm, a DFT of <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>O</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mfenced>
                      <m:msup>
                        <m:mi>N</m:mi>

                        <m:mn>2</m:mn>
                      </m:msup>
                    </m:mfenced>
                  </m:mrow>
                </m:math>
              </inlineequation> or faster will be performed.</para>

            <para>For many computer systems, multiple 1D FFTs can be computed
            more efficiently with a special algorithm than simply calling a 1D
            FFT multiple times. This is particularly true for small FFTs. This
            method is sometimes called stacked FFT or vector FFT.</para>

            <para>Performing a multiple 1D FFT on the data by rows and then by
            columns (or vice versa) is equivalent to performing a 2D FFT on
            the matrix, although it might be less efficient than the
            <function>vsip_<replaceable>d</replaceable>fft2d<replaceable>x</replaceable>_<replaceable>p</replaceable></function>.
            Note that this would require two multiple FFT objects, one by
            rows, and one by columns.</para>

            <para>FFTs performed along directions which have large strides
            between successive elements will have lower performance on many
            systems.</para>

            <para>An implementation of this function may do nothing beyond
            save a copy of its calling parameters. It is suggested that this
            function be used to initialize (if necessary) a global twiddle
            table that all threads can read.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            FFT based on this information. If an FFT is to be called once or a
            few times, pre-computing may be not worthwhile.
            Pre-computing/optimization may include, but is not limited to,
            building a “twiddle table,” allocating a workspace, building an
            algorithmic plan, and building an optimal FFT. Ideally the
            implementation uses a-priori time and space information with
            ntimes to optimize the FFT object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints is:</para>

            <itemizedlist>
              <listitem>
                <para>Minimize total FFT execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the FFT total memory requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>

              <listitem>
                <para>Only one hint may be specified.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fftm<replaceable>x</replaceable>_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="fftm_setwindow">
      <title>vsip_fftm_setwindow_<replaceable>f</replaceable></title>

      <para>Set a window (data taper) as part of the multiple FFT
      object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>The FFT object is created with a standard default boxcar
            window. This function will set a user defined window as part of
            the FFT object which will do the data windowing in conjunction
            with the FFT.</para>

            <para>The multiple FFT object is used to compute a complex to
            complex, real to complex, or complex-to-real Fast Fourier
            Transform (FFT) of vector <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> , which stores the results in the vector
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k,l</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> .</para>

            <para>When a window <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>t</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>t</m:mi>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> is set then</para>

            <para>By rows</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>l,k</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>t</m:mi>

                                  <m:mi>p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>l,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>k</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, ..., M-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>or by columns:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>k,l</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>t</m:mi>

                                  <m:mi>n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>n,l</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>k</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>k</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and l = 0, ..., N-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>=</m:mo>

                    <m:mi>N,M</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void *vsip_fftm_setwindow_f(vsip_vview_f *t, vsip_fftm_f *fft);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>t</term>

                <listitem>
                  <para>Vector of window values. This vector must be the same
                  length as the fft input data set when the multiple FFT
                  object was created.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>The multiple FFT object to modify with new window
                  values.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para><parameter>All objects must be valid.
                </parameter></para>
              </listitem>

              <listitem>
                <para>The window vector must be the proper length for the
                multiple FFT object.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>When the multiple FFT object is created the default window
            is <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>t</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> for all n.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="ccfft2dx">
      <title>vsip_ccfft2d<replaceable>x</replaceable>_<replaceable>f</replaceable></title>

      <para>Apply a complex-to-complex 2D Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-complex 2D Fast Fourier Transform
            (FFT) of the complex M by N matrix <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex matrix
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>u,v</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>p,q</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>p</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>q</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1; for v = 0, 1, ..., N-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>for</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>∈</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Out-of-place:</para>

            <synopsis>void vsip_ccfft2dop_<replaceable>f</replaceable>(const vsip_fft2d_<replaceable>f</replaceable> *fft, 
                      const vsip_cmview_<replaceable>f</replaceable> *X, const vsip_cmview_<replaceable>f</replaceable> *Y);</synopsis>

            <para>In-place:</para>

            <synopsis>void vsip_ccfft2dip_<replaceable>f</replaceable>(const vsip_fft2d_<replaceable>f</replaceable> *fft, const vsip_cmview_<replaceable>f</replaceable> *XY);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 2D FFT object, created by
                  <function>vsip_ccfft2d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input complex matrix of size M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output complex matrix of size M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>XY</term>

                <listitem>
                  <para>View of input/output complex matrix of size M by
                  N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-complex 2D FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_ccfft2dop_<replaceable>f</replaceable></function>
                requires an out-of-place 2D FFT object,
                <function>vsip_ccfft2dip_<replaceable>f</replaceable></function>
                requires an in-place multiple FFT object.</para>
              </listitem>

              <listitem>
                <para>The input and output must be complex matrix views of
                size M by N, where M and N are obtained from the FFT
                object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place 2D FFT, the input and output matrix
                views must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft2d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="crfft2dop">
      <title>vsip_crfft2dop_<replaceable>f</replaceable></title>

      <para>Apply a complex-to-real 2D Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-real (inverse) 2D Fast Fourier
            Transform (FFT) of the complex matrix <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the real matrix
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>u,v</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>p,q</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>p</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>q</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1, and v = 0, 1, ..., N - 1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>∈</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>,</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>}</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The 2D data to be transformed is stored in a matrix object
            in row major or column major order.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_crfft2dop_<replaceable>f</replaceable>(const vsip_fft2d_f *fft,
                      const vsip_cmview_f *X, const vsip_mview_f *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 2D FFT object, created by
                  <function>vsip_crfft2dop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input complex matrix of size</para>

                  <itemizedlist>
                    <listitem>
                      <para>Unit Column Stride: M by <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mi>1</m:mi>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>

                    <listitem>
                      <para>Unit Row Stride: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mi>1</m:mi>
                            </m:mrow>
                          </m:math>
                        </inlineequation> by N</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output real matrix of size M by N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Unit stride is required along one of the stride
            directions.</para>

            <para>The length in the unit stride direction of the real matrix
            must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-real 2D FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_crfft2dop_<replaceable>f</replaceable></function>
                requires an out-of-place 2D FFT object,
                <function>vsip_crfft2dip_<replaceable>f</replaceable></function>
                requires an in-place 2D FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a complex matrix view of length of
                size:</para>

                <itemizedlist>
                  <listitem>
                    <para>By Rows: M by N/2 +1, N even.</para>
                  </listitem>

                  <listitem>
                    <para>By Column: M/2 +1 by N, M even.</para>
                  </listitem>
                </itemizedlist>

                <para>where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The output must be a real matrix view of size M by N,
                where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place 2D FFT, the input and output matrix
                views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output matrix views must be unit-stride in
                either the row or column axis direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Knowing the output is real, this routines takes the
            complex-to-complex FFT in the non-unit stride dimension, followed
            by the complex-to-real FFT in the unit-stride dimension.</para>

            <para>In order for the output to be real, the input must have the
            two-dimensional conjugate symmetry:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>x</m:mi>

                      <m:mi>m,n</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:msubsup>
                        <m:mi>x</m:mi>

                        <m:mi>M-m,N-n</m:mi>

                        <m:mi>*</m:mi>
                      </m:msubsup>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac bevelled="true">
                      <m:mi>N</m:mi>

                      <m:mi>2</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>n</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>And, in fact, the input values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>m,n</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> for <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>n</m:mi>

                    <m:mo>&gt;</m:mo>

                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> need are not necessary; they can be inferred
            from the first half of the input.</para>

            <para>Thus, in the complex-to-real routine, X is a complex matrix
            of size M by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mfrac bevelled="true">
                        <m:mi>N</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation> and Y is a real matrix of size M by N.
            Although only <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mfrac bevelled="true">
                        <m:mi>N</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mi>1</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation> input complex values are supplied, the size of
            the transform is still N in this case. Because, implicitly you are
            using the FFT formula for a sequence of length N.</para>

            <para>Another implication is that <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>l,0</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>0,1</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>), must be a real number. Also since N (M) is
            an even number, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>l,N/2</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>M/2,l</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>) will be real. The routine
            <function>vsip_crfftmop_<replaceable>f</replaceable></function>
            assumes that these values are real. The imaginary part is
            ignored.</para>

            <para>Thus, X is a complex matrix view of size M/2 +1 by N, or M
            by N/2 +1.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft2d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="rcfft2dop">
      <title>vsip_rcfft2dop_<replaceable>f</replaceable></title>

      <para>Apply a real-to-complex 2D Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a real-to-complex (forward) 2D Fast Fourier
            Transform (FFT) of the real M by N matrix <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex matrix
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>k,l</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>p,q</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>p</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>q</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and v = 0, 1, ..., N - 1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>for P = M, N</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The 2D data to be transformed is stored in a matrix object
            in row major or column major order.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_rcfft2dop_<replaceable>f</replaceable>(const vsip_fft2d_<replaceable>f</replaceable> *fft,
                      const vsip_mview_<replaceable>f</replaceable> *X, const vsip_cmview_<replaceable>f</replaceable> *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 2D FFT object, created by
                  <function>vsip_rcfft2dop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input real matrix of size M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output complex matrix of size</para>

                  <itemizedlist>
                    <listitem>
                      <para>Unit Column Stride: M by N/2 +1</para>
                    </listitem>

                    <listitem>
                      <para>Unit Row Stride: M/2 +1 by N</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Unit stride is required along one of the stride
            directions.</para>

            <para>The length in the unit stride direction for the real matrix
            must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a real-to-complex 2D FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_rcfft2dop_<replaceable>f</replaceable></function>
                requires an out-of-place 2D FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a real matrix view of length of size M
                by N, where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The output must be a complex matrix view of length of
                size:</para>

                <itemizedlist>
                  <listitem>
                    <para>By Rows: M by N/2 +1, N even</para>
                  </listitem>

                  <listitem>
                    <para>By Column: M/2 +1 by N, M even</para>
                  </listitem>
                </itemizedlist>

                <para>where M and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place 2D FFT, the input and output matrix
                views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output matrix must be unit-stride in
                either the row or column axis direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The mathematical definition of the Fourier transform takes a
            sequence of N complex values and transforms it to another sequence
            of N complex values. A complex-to-complex FFT routine, such as
            <function>vsip_ccfftip_<replaceable>f</replaceable></function>,
            will take N complex input values, and produce N complex output
            values.</para>

            <para>This routine computes a real-to-complex transform along the
            unit stride dimension, followed by the complex-to-complex
            transform in the other dimension. The reason for having a separate
            real-to-complex FFT routine is efficiency. Because the input data
            are real, you can make use of this fact to save almost half of the
            computational work The two-dimensional analog of the conjugate
            formula is as follows:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>u,v</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:msubsup>
                      <m:mi>y</m:mi>

                      <m:mi>M-u,N-v</m:mi>

                      <m:mn>*</m:mn>
                    </m:msubsup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>&lt;</m:mo>

                  <m:mi>v</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>Thus, you have to compute only (slightly more than) half of
            the output values, namely:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>u,v</m:mi>
                  </m:msub>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mi>0</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>u</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mrow>
                        <m:mi>N</m:mi>

                        <m:mo>/</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mo>⌋</m:mo>

                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>

                      <m:mtext>and</m:mtext>
                    </m:mrow>
                  </m:mrow>

                  <m:mi>0</m:mi>

                  <m:mo>≤</m:mo>

                  <m:mi>v</m:mi>

                  <m:mo>&lt;</m:mo>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>For real input data, the output value, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>l,0</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mn>0,l</m:mn>
                  </m:msub>
                </m:math>
              </inlineequation>) will always be a real number. Also, since
            N(M) is an even number, <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>l,N/2</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>Y</m:mi>

                    <m:mi>m/2,l</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>) will be real.</para>

            <para>Thus, in the real-to-complex routine,
            <function>vsip_rcfft2d<replaceable>x</replaceable>_<replaceable>f</replaceable></function>,
            X is a real matrix of size M by N, and Y is a complex matrix of
            size M/2 + 1 by N, or M by N/2 + 1.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fft<replaceable>2dx</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfft2dx_create">
      <title>vsip_<replaceable>d</replaceable>fft2d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></title>

      <para>Create a 2D FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a 2D FFT object. The FFT object encapsulates the
            information on what type of FFT is to be computed and may at the
            implementor’s discretion pre-compute or optimize the FFT based on
            this information.</para>

            <para>This 2D FFT object is used to compute complex to complex,
            real to complex, or complex- to-real Fast Fourier Transforms
            (FFTs) of matrix X = (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>m,n</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>), which stores the results in the matrix Y =
            (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>u,v</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>).</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>u,v</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>u</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>v</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and v = 0, ..., N-1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>P</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for P = M, N</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_fft2d_f *
vsip_dfft2dx_create_f(vsip_length M, vsip_length N,
                      vsip_scalar_f scale, vsip_fft_dir dir, 
                      vsip_length ntimes, vsip_alg_hint hint);</synopsis>

            <para>Where:</para>

            <para><variablelist>
                <varlistentry>
                  <term>d</term>

                  <listitem>
                    <para>is one of {cc, cr, rc} which corresponds to:</para>

                    <para>complex-to-complex, complex-to-real, and
                    real-to-complex</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>x</term>

                  <listitem>
                    <para>is one of {op, ip} which corresponds to:</para>

                    <para>out-of-place, and in-place</para>
                  </listitem>
                </varlistentry>
              </variablelist></para>

            <synopsis>vsip_fft2d_f *
vsip_ccfft2dop_create_f(vsip_length M, vsip_length N,
                        vsip_scalar_f scale, vsip_fft_dir dir,
                        vsip_length ntimes, vsip_alg_hint hint);
vsip_fft2d_f *
vsip_ccfft2dip_create_f(vsip_length M, vsip_length N,
                        vsip_scalar_f scale, vsip_fft_dir dir,
                        vsip_length ntimes, vsip_alg_hint hint);
vsip_fft2d_f *
vsip_rcfft2dop_create_f(vsip_length M, vsip_length N,
                        vsip_scalar_f scale, 
                        vsip_length ntimes, vsip_alg_hint hint);
vsip_fft2d_f *
vsip_crfft2dop_create_f(vsip_length M, vsip_length N,
                        vsip_scalar_f scale,
                        vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>M</term>

                <listitem>
                  <para>FFT size is M by N.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>FFT size is M by N.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>scale</term>

                <listitem>
                  <para>Real scale factor, typical values of scale are 1,
                  <inlineequation>
                      <m:math display="inline">
                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:math>
                    </inlineequation>, <inlineequation>
                      <m:math display="inline">
                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>/</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>
                      </m:math>
                    </inlineequation> , <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>M</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation>, <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>N</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation>, and <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>M*N</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>dir</term>

                <listitem>
                  <para>Forward or Inverse FFT (note the argument is only for
                  complex-to- complex)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>major</term>

                <listitem>
                  <para>Direction of multiple FFT</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate how many times the FFT object will be
                  invoked. A value of zero is treated as semi-infinite.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine filtering approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The return value is a pointer to a 2D FFT object, or null if
            it fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Real-to-complex and complex-to-real FFTs are restricted to
            unit stride along the specified, <parameter>major</parameter>, row
            or column FFT direction.</para>

            <para>The length in the unit stride direction of these functions
            must be even. Implementations may limit the maximum size, M and/or
            N.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>M, and N, must be greater than zero.</para>
              </listitem>

              <listitem>
                <para><parameter>dir</parameter> must be a valid member of the
                <type>vsip_fft_dir</type> enumeration.</para>
              </listitem>

              <listitem>
                <para><parameter>hint</parameter> must be a valid member of
                the <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>For the complex-to-complex Fourier transform, the transform
            direction must be specified. For the real-to-complex Fourier
            transform it is an implied forward transform. For the complex-to-
            real Fourier transform it is an implied inverse transform.</para>

            <para>2D FFT operations are supported for all values of N and M.
            However, the basic implementation requirement is for an O(M*N
            log(M*N)) fast algorithm for the cases <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>m</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>m</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>n</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>n</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, where m and n are nonnegative integers. Some
            implementations may provide fast algorithms for other combinations
            of small prime factors and may even handle the general case of
            large prime factors or prime sizes. When an implementation does
            not provide a fast algorithm, a DFT of <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>O</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mfenced>
                      <m:mrow>
                        <m:mi>N</m:mi>

                        <m:mo/>

                        <m:msup>
                          <m:mi>M</m:mi>

                          <m:mi>2</m:mi>
                        </m:msup>

                        <m:mo>+</m:mo>

                        <m:mi>M</m:mi>

                        <m:mo/>

                        <m:msup>
                          <m:mi>N</m:mi>

                          <m:mi>2</m:mi>
                        </m:msup>
                      </m:mrow>
                    </m:mfenced>
                  </m:mrow>
                </m:math>
              </inlineequation> or faster will be performed.</para>

            <para>An implementation of this function may do nothing beyond
            save a copy of its calling parameters. It is suggested that this
            function be used to initialize (if necessary) a global twiddle
            table that all threads can read.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            FFT based on this information. This may include, but is not
            limited to, building a “twiddle table,” allocating a workspace,
            building an algorithmic plan, and building an optimal FFT. Ideally
            the implementation uses a-priori time and space information with
            ntimes to optimize the FFT object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints is:</para>

            <itemizedlist>
              <listitem>
                <para>Minimize total FFT execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the FFT total memory requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </itemizedlist>

            <para>Only one hint may be specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fft2d<replaceable>x</replaceable>_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="ccfft3dx">
      <title>vsip_ccfft3d<replaceable>x</replaceable>_<replaceable>f</replaceable></title>

      <para>Apply a complex-to-complex 3D Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-complex 3D Fast Fourier Transform
            (FFT) of the complex P by M by N tensor <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>p,m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex tensor
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>u,v,w</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>u,v,w</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>u</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>v</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>w</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mspace depth="1ex" height="1ex" width="5em"/>

                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1; for v = 0, 1, ..., N-1; for w = 0, ...,
                              P-1;</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>K</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>K</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>for</m:mtext>

                  <m:mrow>
                    <m:mi>K</m:mi>

                    <m:mo>=M, N, P</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Out-of-place:</para>

            <synopsis>void vsip_ccfft3dop_<replaceable>f</replaceable>(const vsip_fft3d_<replaceable>f</replaceable> *fft,
                      const vsip_ctview_<replaceable>f</replaceable> *X, const vsip_ctview_<replaceable>f</replaceable> *Y);</synopsis>

            <para>In-place:</para>

            <synopsis>void vsip_ccfft3dip_<replaceable>f</replaceable>(const vsip_fft3d_<replaceable>f</replaceable> *fft, const vsip_ctview_<replaceable>f</replaceable> *XY);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 3D FFT object, created by
                  <function>vsip_ccfft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input complex tensor of size P by M by
                  N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output complex tensor of size P by M by
                  N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>XY</term>

                <listitem>
                  <para>View of input/output complex tensor of size P by M by
                  N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-complex 3D FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_ccfft3dop_<replaceable>f</replaceable></function>
                requires an out-of-place 3D FFT object,
                <function>vsip_ccfft3dip_<replaceable>f</replaceable></function>
                requires an in-place 3D FFT object.</para>
              </listitem>

              <listitem>
                <para>The input and output must be complex tensor views of
                size P by M by N, where P, M, and N are obtained from the FFT
                object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place 3D FFT, the input and output tensor
                views must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="crfft3dop">
      <title>vsip_crfft3dop_<replaceable>f</replaceable></title>

      <para>Apply a complex-to-real 3D Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a complex-to-real (inverse) 3D Fast Fourier
            Transform (FFT) of the complex tensor <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>p,m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the P by M by N
            real tensor <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>u,v,w</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>u,v,w</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>u</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>v</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>w</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mspace depth="1ex" height="1ex" width="5em"/>

                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1, and v = 0, 1, ..., N - 1; for w = 0, ...,
                              P-1;</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>K</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>K</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mi>K</m:mi>

                    <m:mo>=</m:mo>

                    <m:mi>M, N, P</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The 3D data to be transformed is stored in a tensor object
            in Y major, X major, or Z major order.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_crfft3dop_<replaceable>f</replaceable>(const vsip_fft3d_<replaceable>f</replaceable> *fft, 
                      const vsip_ctview_<replaceable>f</replaceable> *X, const vsip_tview_<replaceable>f</replaceable> *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 3D FFT object, created by
                  <function>vsip_crfft3dop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input complex tensor of size</para>

                  <itemizedlist>
                    <listitem>
                      <para>Unit X Stride: P by M by <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mi>1</m:mi>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>

                    <listitem>
                      <para>Unit Y Stride: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>P by ⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mi>1</m:mi>
                            </m:mrow>
                          </m:math>
                        </inlineequation> by N</para>
                    </listitem>

                    <listitem>
                      <para>Unit Z Stride: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>P</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mi>1</m:mi>
                            </m:mrow>
                          </m:math>
                        </inlineequation> by M by N</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output real tensor of size P by M by N</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Unit stride is required along one of the stride
            directions.</para>

            <para>The length in the unit stride direction of the real tensor
            must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a complex-to-real 3D FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_crfft3dop_<replaceable>f</replaceable></function>
                requires an out-of-place 3D FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a complex tensor view of length of
                size:</para>

                <itemizedlist>
                  <listitem>
                    <para>P by M by N/2 +1, N even.</para>
                  </listitem>

                  <listitem>
                    <para>or P by M/2 + 1 by N, M even.</para>
                  </listitem>

                  <listitem>
                    <para>or P/2 + 1 by M by N, P even.</para>
                  </listitem>
                </itemizedlist>

                <para>where P, M, and N are obtained from the FFT
                object.</para>
              </listitem>

              <listitem>
                <para>The output must be a real tensor view of size P by M by
                N, where P, M, and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place 3D FFT, the input and output tensor
                views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output tensor views must be unit-stride in
                either the Z, Y, or X axis direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Knowing the output is real, this routines takes the
            complex-to-complex FFT in the non-unit stride dimensions, followed
            by the complex-to-real FFT in the unit stride dimension.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="rcfft3dop">
      <title>vsip_rcfft3dop_<replaceable>f</replaceable></title>

      <para>Apply a real-to-complex 3D Fast Fourier Transform (FFT)</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes a real-to-complex (forward) 3D Fast Fourier
            Transform (FFT) of the real P by M by N tensor <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>p,m,n</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and stores the results in the complex tensor
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>Y</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>y</m:mi>

                        <m:mi>u,v,w</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>u,v,w</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>p=0</m:mi>

                                <m:mi>P-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n,p</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>u</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>v</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>P</m:mi>

                                  <m:mrow>
                                    <m:mi>p</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>w</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mspace depth="1ex" height="1ex" width="5em"/>

                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1 and v = 0, 1, ..., N - 1; for w = 0, ...,
                              P-1;</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>K</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>K</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>for K = M, N, P</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The 3D data to be transformed is stored in a tensor object
            in X major, Y major, or Z major order.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_rcfft3dop_<replaceable>f</replaceable>(const vsip_fft3d_<replaceable>f</replaceable> *fft,
                      const vsip_tview_<replaceable>f</replaceable> *X, const vsip_ctview_<replaceable>f</replaceable> *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to a 3D FFT object, created by
                  <function>vsip_rcfft3dop_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of input real tensor of size P by M by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of output complex tensor of size</para>

                  <itemizedlist>
                    <listitem>
                      <para>Unit X Stride: P by M by N/2 +1</para>
                    </listitem>

                    <listitem>
                      <para>Unit Y Stride: P by M/2 +1 by N</para>
                    </listitem>

                    <listitem>
                      <para>Unit Z Stride: P/2 + 1 by M by N</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Unit stride is required along one of the stride
            directions.</para>

            <para>The length in the unit stride direction for the real tensor
            must be even.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The FFT object must be a real-to-complex 3D FFT
                object.</para>
              </listitem>

              <listitem>
                <para><function>vsip_rcfft3dop_<replaceable>f</replaceable></function>
                requires an out-of-place 3D FFT object.</para>
              </listitem>

              <listitem>
                <para>The input must be a real tensor view of size P by M by
                N, where P, M, and N are obtained from the FFT object.</para>
              </listitem>

              <listitem>
                <para>The output must be a complex tensor view of size:</para>

                <itemizedlist>
                  <listitem>
                    <para>P by M by N/2 +1, N even</para>
                  </listitem>

                  <listitem>
                    <para>or P by M/2 +1 by N, M even</para>
                  </listitem>

                  <listitem>
                    <para>or P/2 + 1 by M by N, P even</para>
                  </listitem>
                </itemizedlist>

                <para>where P, M, and N are obtained from the FFT
                object.</para>
              </listitem>

              <listitem>
                <para>For an out-of-place 3D FFT, the input and output tensor
                views must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input and output tensors must be unit-stride in
                either the Z, X, or Y axis.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Knowing the input is real, this routines takes the
            real-to-complex FFT in the unit stride dimension, followed by the
            complex-to-complex FFT in the remaining dimensions.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fft<replaceable>3dx</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfft3dx_create">
      <title>vsip_<replaceable>d</replaceable>fft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></title>

      <para>Create a 3D FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a 3D FFT object. The FFT object encapsulates the
            information on what type of FFT is to be computed and may at the
            implementor’s discretion pre-compute or optimize the FFT based on
            this information.</para>

            <para>This 3D FFT object is used to compute complex to complex,
            real to complex, or complex- to-real Fast Fourier Transforms
            (FFTs) of tensor X = (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>x</m:mi>

                    <m:mi>p,m,n</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>), which stores the results in the tensor Y =
            (<inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>u,v,w</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation>).</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>y</m:mi>

                            <m:mi>u,v</m:mi>
                          </m:msub>

                          <m:maligngroup/>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mi>scale</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>m=0</m:mi>

                                <m:mi>M-1</m:mi>
                              </m:munderover>

                              <m:munderover>
                                <m:mo>∑</m:mo>

                                <m:mi>n=0</m:mi>

                                <m:mi>N-1</m:mi>
                              </m:munderover>

                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mi>m,n</m:mi>
                                </m:msub>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>M</m:mi>

                                  <m:mrow>
                                    <m:mi>m</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>u</m:mi>
                                  </m:mrow>
                                </m:msubsup>

                                <m:mo>⁢</m:mo>

                                <m:msubsup>
                                  <m:mi>W</m:mi>

                                  <m:mi>N</m:mi>

                                  <m:mrow>
                                    <m:mi>v</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>
                                </m:msubsup>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mspace depth="1ex" height="1ex" width="5em"/>

                        <m:mrow>
                          <m:mtext>for</m:mtext>

                          <m:mspace depth="0.5ex" height="0.5ex" width="1ex"/>

                          <m:mrow>
                            <m:mi>u</m:mi>

                            <m:mo>=</m:mo>

                            <m:mn>0</m:mn>

                            <m:mo>,</m:mo>

                            <m:mn>1</m:mn>

                            <m:mo>,</m:mo>

                            <m:mi>...</m:mi>

                            <m:mo>,</m:mo>

                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1; for v = 0, ..., N-1; for w = 0, ...,
                              P-1;</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>W</m:mi>

                      <m:mi>K</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:msup>
                      <m:mi>e</m:mi>

                      <m:mrow>
                        <m:mi>sign</m:mi>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>j</m:mi>

                            <m:mo/>

                            <m:mn>2</m:mn>

                            <m:mo/>

                            <m:mi>π</m:mi>
                          </m:mrow>

                          <m:mo>/</m:mo>

                          <m:mi>K</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>, for K = M, N,P</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>j</m:mi>

                    <m:mo>≡</m:mo>

                    <m:msqrt>
                      <m:mrow>
                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:msqrt>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>sign</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for a forward transform or</m:mtext>

                    <m:mrow>
                      <m:mo>+</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>

                    <m:mtext>for an inverse transform</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_fft3d_<replaceable>f</replaceable> *vsip_dfft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable>(vsip_length P, vsip_length M, vsip_length N,
                                    vsip_scalar_<replaceable>f</replaceable> scale, vsip_fft_dir dir,
                                    vsip_length ntimes, vsip_alg_hint hint);</synopsis>

            <para>Where:</para>

            <para><variablelist>
                <varlistentry>
                  <term>d</term>

                  <listitem>
                    <para>is one of {cc, cr, rc} which corresponds to:</para>

                    <para>complex-to-complex, complex-to-real, and
                    real-to-complex</para>
                  </listitem>
                </varlistentry>

                <varlistentry>
                  <term>x</term>

                  <listitem>
                    <para>is one of {op, ip} which corresponds to:</para>

                    <para>out-of-place, and in-place</para>
                  </listitem>
                </varlistentry>
              </variablelist></para>

            <synopsis>vsip_fft3d_<replaceable>f</replaceable> *vsip_ccfft3dop_create_<replaceable>f</replaceable>(vsip_length P, vsip_length M, vsip_length N,
                                      vsip_scalar_<replaceable>f</replaceable> scale, vsip_fft_dir dir,
                                      vsip_length ntimes, vsip_alg_hint hint);
vsip_fft3d_<replaceable>f</replaceable> *vsip_ccfft3dip_create_<replaceable>f</replaceable>(vsip_length P, vsip_length M, vsip_length N,
                                      vsip_scalar_<replaceable>f</replaceable> scale, vsip_fft_dir dir,
                                      vsip_length ntimes, vsip_alg_hint hint);
vsip_fft3d_<replaceable>f</replaceable> *vsip_rcfft3dop_create_<replaceable>f</replaceable>(vsip_length P, vsip_length M, vsip_length N,
                                      vsip_scalar_<replaceable>f</replaceable> scale,
                                      vsip_length ntimes, vsip_alg_hint hint);
vsip_fft3d_<replaceable>f</replaceable> *vsip_crfft3dop_create_<replaceable>f</replaceable>(vsip_length P, vsip_length M, vsip_length N,
                                      vsip_scalar_<replaceable>f</replaceable> scale,
                                      vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>P</term>

                <listitem>
                  <para>FFT size is P by M by N.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>M</term>

                <listitem>
                  <para>FFT size is P by M by N.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>FFT size is P by M by N.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>scale</term>

                <listitem>
                  <para>Real scale factor, typical values of scale are 1, and
                  <inlineequation>
                      <m:math display="inline">
                        <m:mfrac bevelled="true">
                          <m:mi>1</m:mi>

                          <m:msqrt>
                            <m:mi>M*N*P</m:mi>
                          </m:msqrt>
                        </m:mfrac>
                      </m:math>
                    </inlineequation></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>dir</term>

                <listitem>
                  <para>Forward or Inverse FFT (note the argument is only for
                  complex-to- complex)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate how many times the FFT object will be
                  invoked. A value of zero is treated as semi-infinite.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine filtering approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The return value is a pointer to a 3D FFT object, or null if
            it fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Real-to-complex and complex-to-real FFTs are restricted to
            views with unit stride along one of the storage directions.</para>

            <para>Implementations may limit the maximum size, P, M, and
            N.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>P, M, and N, must be greater than zero.</para>
              </listitem>

              <listitem>
                <para><parameter>dir</parameter> must be a valid member of the
                <type>vsip_fft_dir</type> enumeration.</para>
              </listitem>

              <listitem>
                <para><parameter>hint</parameter> must be a valid member of
                the <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>For the complex-to-complex Fourier transform, the transform
            direction must be specified. For the real-to-complex Fourier
            transform it is an implied forward transform. For the complex-to-
            real Fourier transform it is an implied inverse transform.</para>

            <para>3D FFT operations are supported for all values of M, N, and
            P. However, the basic implementation requirement is for an
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>O</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mfenced>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>M</m:mi>

                            <m:mo>⁢</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>⁢</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mi>log</m:mi>

                          <m:mo>⁡</m:mo>

                          <m:mfenced>
                            <m:mrow>
                              <m:mrow>
                                <m:mi>M</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>N</m:mi>
                              </m:mrow>

                              <m:mo>⁢</m:mo>

                              <m:mi>P</m:mi>
                            </m:mrow>
                          </m:mfenced>
                        </m:mrow>
                      </m:mrow>
                    </m:mfenced>
                  </m:mrow>
                </m:math>
              </inlineequation> fast algorithm for the cases <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>m</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>m</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>n</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>n</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, and <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mn>2</m:mn>

                      <m:mi>p</m:mi>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> or <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mn>3</m:mn>

                      <m:mo>⁢</m:mo>

                      <m:msup>
                        <m:mn>2</m:mn>

                        <m:mi>p</m:mi>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, where m, n, and p are nonnegative integers.
            Some implementations may provide fast algorithms for other
            combinations of small prime factors and may even handle the
            general case of large prime factors or prime sizes. When an
            implementation does not provide a fast algorithm, a DFT of
            <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>O</m:mi>

                    <m:mo>⁡</m:mo>

                    <m:mfenced>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>⁢</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>

                            <m:mo>⁢</m:mo>

                            <m:msup>
                              <m:mi>P</m:mi>

                              <m:mn>2</m:mn>
                            </m:msup>
                          </m:mrow>

                          <m:mo>+</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mi>M</m:mi>

                              <m:mo>⁢</m:mo>

                              <m:msup>
                                <m:mi>N</m:mi>

                                <m:mn>2</m:mn>
                              </m:msup>
                            </m:mrow>

                            <m:mo>⁢</m:mo>

                            <m:mi>P</m:mi>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:msup>
                              <m:mi>M</m:mi>

                              <m:mn>2</m:mn>
                            </m:msup>

                            <m:mo>⁢</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>⁢</m:mo>

                          <m:mi>P</m:mi>
                        </m:mrow>
                      </m:mrow>
                    </m:mfenced>
                  </m:mrow>
                </m:math>
              </inlineequation> or faster will be performed.</para>

            <para>An implementation of this function may do nothing beyond
            save a copy of its calling parameters. It is suggested that this
            function be used to initialize (if necessary) a global twiddle
            table that all threads can read.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            FFT based on this information. This may include, but is not
            limited to, building a “twiddle table,” allocating a workspace,
            building an algorithmic plan, and building an optimal FFT. Ideally
            the implementation uses a-priori time and space information with
            ntimes to optimize the FFT object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints is:</para>

            <itemizedlist>
              <listitem>
                <para>Minimize total FFT execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the FFT total memory requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </itemizedlist>

            <para>Only one hint may be specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fft3d<replaceable>x</replaceable>_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="fftn_destroy">
      <title>vsip_<replaceable>d</replaceable>fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></title>

      <para>Destroy an FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys (free memory) an FFT object returning null on
            success, and non- null on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>int vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable>(vsip_fft<replaceable>n</replaceable>_<replaceable>f</replaceable> *fft);</synopsis>

            <para>Where <replaceable>n</replaceable> is one of { , m, 2d, 3d}
            which corresponds to 1D FFT, Multiple 1D FFTs, 2D FFT, and 3D FFT
            respectively.</para>

            <synopsis>int vsip_fft_destroy_<replaceable>f</replaceable>(vsip_fft_<replaceable>f</replaceable> *fft);
int vsip_fftm_destroy_<replaceable>f</replaceable>(vsip_fftm_<replaceable>f</replaceable> *fft);
int vsip_fft2d_destroy_<replaceable>f</replaceable>(vsip_fft2d_<replaceable>f</replaceable> *fft);
int vsip_fft3d_destroy_<replaceable>f</replaceable>(vsip_fft3d_<replaceable>f</replaceable> *fft);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to an FFT object, created by
                  <function>vsip_dfft<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
                  <function>vsip_dfftm<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
                  <function>vsip_dfft2d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
                  or
                  <function>vsip_dfft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The FFT object must be valid. An argument of null is not
                an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>

            <para>Note to Implementors: If the create of an FFT object
            creates/modifies shared information such as a twiddle table, then
            the shared object must maintain sufficient information to
            determine when it is possible to delete this shared
            information.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            <function>vsip_dfftm<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            <function>vsip_dfft2d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_dfft3d<replaceable>x</replaceable>_create_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="fftn_getattr">
      <title>vsip_fft<replaceable>n</replaceable>_getattr_<replaceable>f</replaceable></title>

      <para>Returns the attributes of an FFT object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attribute values of an FFT object in structure
            passed by reference.</para>

            <para>The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>input data size in elements of input type (N, M by N, or
                P by M by N)</para>
              </listitem>

              <listitem>
                <para>output data size in elements of output type (N, M by N,
                or P by M by N)</para>
              </listitem>

              <listitem>
                <para>FFT sign</para>
              </listitem>

              <listitem>
                <para>In-Place/Out-of-Place</para>
              </listitem>

              <listitem>
                <para>scale factor</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef enum { VSIP_FFT_FWD = -1, VSIP_FFT_INV= 1} vsip_fft_dir;
typedef enum { VSIP_FFT_IP = 0, VSIP_FFT_OP = 1} vsip_fft_place;
typedef enum { VSIP_ROW = 0, VSIP_COL = 1} vsip_major;

typedef struct 
{
  vsip_scalar_<replaceable>t</replaceable> input;
  vsip_scalar_<replaceable>t</replaceable> output;
  vsip_fft_place place;
  vsip_scalar_<replaceable>f</replaceable> scale;
  vsip_fft_dir dir;
} vsip_fft<replaceable>n</replaceable>_attr_<replaceable>f</replaceable>;

typedef struct 
{
  vsip_scalar_mi input;
  vsip_scalar_mi output;
  vsip_fft_place place;
  vsip_scalar_<replaceable>f</replaceable> scale;
  vsip_fft_dir dir;
  vsip_major major;
} vsip_fftm_attr_<replaceable>f</replaceable>;</synopsis>

            <para>Where:</para>

            <variablelist>
              <varlistentry>
                <term>n</term>

                <listitem>
                  <para>one of { , 2d, 3d} which corresponds to 1D FFT, 2D
                  FFT, and 3D FFT respectively</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>t</term>

                <listitem>
                  <para>one of { vi, mi, ti} which corresponds to 1D, 2D, and
                  3D</para>
                </listitem>
              </varlistentry>
            </variablelist>

            <synopsis>void vsip_fft_getattr_<replaceable>f</replaceable>(const vsip_fft_<replaceable>f</replaceable> *fft, vsip_fft_attr_<replaceable>f</replaceable> *attr);
void vsip_fftm_getattr_<replaceable>f</replaceable>(const vsip_fftm_<replaceable>f</replaceable> *fft, vsip_fftm_attr_<replaceable>f</replaceable> *attr);
void vsip_fft2d_getattr_<replaceable>f</replaceable>(const vsip_fft2d_<replaceable>f</replaceable> *fft, vsip_fft2d_attr_<replaceable>f</replaceable> *attr);
void vsip_fft3d_getattr_<replaceable>f</replaceable>(const vsip_fft3d_<replaceable>f</replaceable> *fft, vsip_fft3d_attr_<replaceable>f</replaceable> *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>fft</term>

                <listitem>
                  <para>Pointer to an FFT object, created by
                  <function>vsip_dfft<replaceable>n</replaceable><replaceable>x</replaceable>_create_<replaceable>f</replaceable></function></para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to attribute structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The FFT object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>There is no attribute that explicitly indicates
            complex-to-complex, real-to-complex, or complex- to-real FFTs.
            This may be inferred from examining the input and output view
            sizes.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfft<replaceable>n</replaceable><replaceable>x</replaceable>_create_<replaceable>f</replaceable></function>,
            and
            <function>vsip_fft<replaceable>n</replaceable>_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Convolution/Correlation Functions</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry><function>vsip_<replaceable>d</replaceable>conv1d_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 1D Convolution Object</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>conv1d_destroy_<replaceable>f</replaceable></function></entry>

            <entry>Destroy Conv1D Object</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>conv1d_getattr_<replaceable>f</replaceable></function></entry>

            <entry>Conv1D Get Attributes</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>convolve1d_<replaceable>f</replaceable></function></entry>

            <entry>1D Convolution</entry>
          </row>

          <row>
            <entry><function>vsip_conv2d_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 2D Convolution Object</entry>
          </row>

          <row>
            <entry><function>vsip_conv2d_destroy_<replaceable>f</replaceable></function></entry>

            <entry>Destroy Conv2d Object</entry>
          </row>

          <row>
            <entry><function>vsip_conv2d_getattr_<replaceable>f</replaceable></function></entry>

            <entry>Conv2d Get Attributes</entry>
          </row>

          <row>
            <entry><function>vsip_convolve2d_<replaceable>f</replaceable></function></entry>

            <entry>2D Convolution</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>corr1d_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 1D Correlation Object</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>corr1d_destroy_<replaceable>f</replaceable></function></entry>

            <entry>Destroy Corr1D Object</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>corr1d_getattr_<replaceable>f</replaceable></function></entry>

            <entry>Corr1D Get Attributes</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>correlate1d_<replaceable>f</replaceable></function></entry>

            <entry>1D Correlation</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>corr2d_create_<replaceable>f</replaceable></function></entry>

            <entry>Create 2D Correlation Object</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>corr2d_destroy_<replaceable>f</replaceable></function></entry>

            <entry>Destroy Corr2d Object</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>corr2d_getattr_<replaceable>f</replaceable></function></entry>

            <entry>Corr2d Get Attributes</entry>
          </row>

          <row>
            <entry><function>vsip_<replaceable>d</replaceable>correlate2d_<replaceable>f</replaceable></function></entry>

            <entry>2D Correlation</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="dconv1d_create">
      <title>vsip_<replaceable>d</replaceable>conv1d_create_<replaceable>f</replaceable></title>

      <para>Create a decimated 1D convolution filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a decimated convolution filter object and returns a
            pointer to the object. The user specifies the kernel (filter
            order, symmetry, and filter coefficients), the region of support,
            and the integral output decimation factor.</para>

            <para>A 1D convolution object is used to compute the convolution
            of a filter (kernel) vector h, of length M, with a data vector x,
            of length N, with an output decimation factor of D, producing the
            output vector, y.</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>2</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>+</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>-</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Case <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>D</m:mi>

                    <m:mo>=</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation>:</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,M+N-2</m:mtext>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>
                          </m:mrow>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,N-1</m:mtext>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>-</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,N-M</m:mtext>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The filter kernel can be even (conjugate) symmetric or
            non-symmetric. If it is (conjugate) symmetric, only the
            non-redundant values are specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_conv1d_f *vsip_conv1d_create_f(const vsip_vview_f *h, vsip_symmetry symm,
                                    vsip_length N, vsip_length D,
                                    vsip_support_region support,
                                    vsip_length ntimes, vsip_alg_hint hint);
vsip_rcconv1d_f *vsip_rcconv1d_create_f(const vsip_vview_f *h, vsip_symmetry symm,
                                        vsip_length N, vsip_length D,
                                        vsip_support_region support,
                                        vsip_length ntimes, vsip_alg_hint hint);
vsip_cconv1d_f *vsip_cconv1d_create_f(const vsip_cvview_f *h, vsip_symmetry symm,
                                      vsip_length N, vsip_length D,
                                      vsip_support_region support,
                                      vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>h</term>

                <listitem>
                  <para>Pointer to vector view object of filter
                  coefficients,</para>

                  <itemizedlist>
                    <listitem>
                      <para>non-symmetric: length M</para>
                    </listitem>

                    <listitem>
                      <para>symmetric: length <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌈</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mn>2</m:mn>
                            </m:mrow>

                            <m:mo>⌉</m:mo>
                          </m:math>
                        </inlineequation></para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>symm</term>

                <listitem>
                  <para>Filter symmetry, including length symmetry {even,
                  odd}</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of input vector view</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>D</term>

                <listitem>
                  <para>Decimation factor (&gt;= 1)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>support</term>

                <listitem>
                  <para>Output region of support (indicates which output
                  points are computed).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate of how many convolution will be applied. A
                  value of zero is treated as semi-infinite (a lot of
                  times).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine algorithm approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to a 1D convolution filter object, or null
            if the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The filter length must be equal to or smaller than the data
            length, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>N</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>kernel must be a pointer to a valid vector view
                object.</para>
              </listitem>

              <listitem>
                <para>symm must be a valid member of the
                <type>vsip_symmetry</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>N must be greater than or equal to M (see kernel
                above).</para>
              </listitem>

              <listitem>
                <para>D must be greater than zero.</para>
              </listitem>

              <listitem>
                <para>support must be a valid member of the
                <type>vsip_support_region</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>If all of the data are not available at one time, use the
            FIR filtering routines to filter the data in segments.</para>

            <para>The decimation factor, D, is normally one for non-lowpass
            filters.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            convolution based on this information. Ideally the implementation
            uses a-priori time and space information with ntimes to optimize
            the convolution object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints are:</para>

            <orderedlist>
              <listitem>
                <para>Minimize total convolution execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the convolution total memory
                requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </orderedlist>

            <para>Only one hint may be specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dconv1d_destroy">
      <title>vsip_<replaceable>d</replaceable>conv1d_destroy_<replaceable>f</replaceable></title>

      <para>Destroy a 1D convolution object and deallocate any associated
      memory.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys a 1D convolution object.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_length vsip_conv1d_destroy_f(vsip_conv1d_f *conv1d);
vsip_length vsip_rcconv1d_destroy_f(vsip_rcconv1d_f *conv1d);
vsip_length vsip_cconv1d_destroy_f(vsip_cconv1d_f *conv1d);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>conv1d</term>

                <listitem>
                  <para>Pointer to a 1D convolution object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 1D convolution object must be valid. An argument of
                null is not an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dconv1d_getattr">
      <title>vsip_<replaceable>d</replaceable>conv1d_getattr_<replaceable>f</replaceable></title>

      <para>Returns the attributes for a 1D convolution object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attributes for a 1D convolution object.</para>

            <para>The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>filter kernel length</para>
              </listitem>

              <listitem>
                <para>filter kernel symmetry</para>
              </listitem>

              <listitem>
                <para>required length of input data (vector view)</para>
              </listitem>

              <listitem>
                <para>required length of output data (vector view)</para>
              </listitem>

              <listitem>
                <para>region of support for output</para>
              </listitem>

              <listitem>
                <para>output decimation factor</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef enum 
{ 
  VSIP_NONSYM = 0, 
  VSIP_SYM_EVEN_LEN_ODD = 1, 
  VSIP_SYM_EVEN_LEN_EVEN = 2
} vsip_symmetry;
typedef enum 
{
  VSIP_SUPPORT_FULL = 0, 
  VSIP_SUPPORT_SAME = 1, 
  VSIP_SUPORT_MIN = 2
} vsip_support_region;

typedef struct 
{
  vsip_scalar_vi kernel_len;
  vsip_symmetry symm;
  vsip_scalar_vi data_len;
  vsip_support_region support,
  vsip_scalar_vi out_len;
  vsip_length decimation;
} vsip_conv1d_attr_f;

void vsip_conv1d_getattr_f(const vsip_conv1d_f *conv1d,
                           vsip_conv1d_attr_f *attr);
void vsip_rcconv1d_getattr_f(const vsip_rcconv1d_f *conv1d,
                             vsip_conv1d_attr_f *attr);
void vsip_cconv1d_getattr_f(const vsip_cconv1d_f *conv1d,
                            vsip_conv1d_attr_f *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>conv1d</term>

                <listitem>
                  <para>Pointer to a 1D convolution object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to a <type>vsip_conv1d_attr_f</type>
                  structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 1D convolution object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The length of the kernel is also known to as the “filter
            order.”</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dconvolve1d">
      <title>vsip_<replaceable>d</replaceable>convolve1d_<replaceable>f</replaceable></title>

      <para>Compute a decimated real one-dimensional (1D) convolution of two
      vectors.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Uses a 1D convolution object is to compute the convolution
            of a filter (kernel) vector h, of length M, with a data vector x,
            of length N, with an output decimation factor of D, producing the
            output vector, y.</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>2</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>+</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>-</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Case <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>D</m:mi>

                    <m:mo>=</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation>:</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,M+N-2</m:mtext>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>
                          </m:mrow>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,N-1</m:mtext>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>-</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>k</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,N-M</m:mtext>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_convolve1d_f(const vsip_conv1d_f *conv1d,
                       const vsip_vview_f *x, const vsip_vview_f *y);
void vsip_rcconvolve1d_f(const vsip_rcconv1d_f *conv1d,
                         const vsip_cvview_f *x, const vsip_cvview_f *y);
void vsip_cconvolve1d_f(const vsip_cconv1d_f *conv1d,
                        const vsip_cvview_f *x, const vsip_cvview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>conv1d</term>

                <listitem>
                  <para>Convolution filter object, (it includes the filter
                  kernel, h)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>View of real input data vector of length N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>View of real destination vector of length</para>

                  <itemizedlist>
                    <listitem>
                      <para>Full: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>+</m:mo>

                                      <m:mi>M</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>2</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>

                    <listitem>
                      <para>Same: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>

                    <listitem>
                      <para>Minimum: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>N</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mo>-</m:mo>

                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>M</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 1D convolution object must be valid.</para>
              </listitem>

              <listitem>
                <para>The x input vector view must be of length N (conformant
                with the 1D convolution object).</para>
              </listitem>

              <listitem>
                <para>The y output vector view must be of length</para>

                <itemizedlist>
                  <listitem>
                    <para>Full: <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>N</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mi>M</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>2</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>

                  <listitem>
                    <para>Same: <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>N</m:mi>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>

                  <listitem>
                    <para>Minimum: <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>N</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>M</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>
                </itemizedlist>

                <para>(conformant with the 1D convolution object).</para>
              </listitem>

              <listitem>
                <para>The input x, and the output y, must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The decimation factor, D, is normally one for non-lowpass
            filters.</para>

            <para>Note <function>vsip_rcconvolve1d_f</function> convolves a
            real kernel with a complex vector.</para>

            <para>If all of the data are not available at one time, use the
            FIR filtering routines to filter the data in segments.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dconv2d_create">
      <title>vsip_<replaceable>d</replaceable>conv2d_create_<replaceable>f</replaceable></title>

      <para>Create a decimated 2D convolution filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a decimated convolution filter object and returns a
            pointer to the object. The user specifies the kernel (filter
            order, symmetry, and filter coefficients), the region of support,
            and the integral output decimation factor.</para>

            <para>A 2D convolution object is used to compute the convolution
            of a real filter (kernel) matrix H, of size M by N, with a real
            data matrix X, of size P by Q, producing the output matrix Y. The
            filter must be smaller than or equal to the size of the
            data.</para>

            <para>Let <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>H</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>h</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>∈</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>,</m:mtext>

                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>∈</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>P</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>Q</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Full: Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>2</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>

                  <m:mtext>by</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>2</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u,</m:mi>

                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>P</m:mi>

                          <m:mo>+</m:mo>

                          <m:mi>M</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>Q</m:mi>

                          <m:mo>+</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>

                            <m:mo>-</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>-</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mo>,</m:mo>

                              <m:mrow>
                                <m:mi>j</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>v</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>P</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>Q</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mtext>,</m:mtext>

                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>j</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>D</m:mi>
                                  </m:mrow>

                                  <m:mo>+</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>P</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>Q</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>-</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Case <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>D</m:mi>

                    <m:mo>=</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation>:</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u,</m:mi>

                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>Q</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>N</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>P by Q</m:mi>
                          </m:mrow>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mo>,</m:mo>

                              <m:mrow>
                                <m:mi>j</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>v</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>Q</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>-</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1 by Q - N + 1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mtext>,</m:mtext>

                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>j</m:mi>
                                  </m:mrow>

                                  <m:mo>+</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mi>P</m:mi>

                  <m:mo>-</m:mo>

                  <m:mi>M</m:mi>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mi>Q</m:mi>

                  <m:mtext>-</m:mtext>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The filter kernel can be even (conjugate) symmetric or
            non-symmetric. If it is (conjugate) symmetric, only the
            non-redundant values are specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_conv2d_f *vsip_conv2d_create_f(const vsip_mview_f *H, vsip_symmetry symm,
                                    vsip_length P, vsip_length Q,
                                    vsip_length decimate, vsip_support_region support,
                                    vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>H</term>

                <listitem>
                  <para>Pointer to matrix view object of filter
                  coefficients,</para>

                  <itemizedlist>
                    <listitem>
                      <para>non-symmetric: length M by N</para>
                    </listitem>

                    <listitem>
                      <para>symmetric: length <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌈</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mn>2</m:mn>
                            </m:mrow>

                            <m:mo>⌉</m:mo>
                          </m:math>
                        </inlineequation> by <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌈</m:mo>

                                <m:mi>N</m:mi>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mn>2</m:mn>
                            </m:mrow>

                            <m:mo>⌉</m:mo>
                          </m:math>
                        </inlineequation></para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>symm</term>

                <listitem>
                  <para>Filter row and column symmetry, including length
                  symmetry {even, odd}. The symmetry applies to both
                  directions of the filter.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>P</term>

                <listitem>
                  <para>Number of rows in input data matrix, X</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Number of columns in input data matrix X</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>D</term>

                <listitem>
                  <para>Decimation factor (&gt;= 1)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>support</term>

                <listitem>
                  <para>Output region of support (indicates which output
                  points are computed).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate of how many convolution will be applied. A
                  value of zero is treated as semi-infinite (a lot of
                  times).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine algorithm approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to a 2D convolution filter object, or null
            if the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>This implementation requires that <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>P</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, and <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>Q</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation> (filter is smaller than the data).</para>

            <para>Memory major order must be the same for kernel, data, and
            output.</para>

            <para>The kernel, data, and output matrix views must be
            unit-stride in the major direction.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>H must be a pointer to a valid matrix view
                object.</para>
              </listitem>

              <listitem>
                <para>symm must be a valid member of the
                <type>vsip_symmetry</type> enumeration.</para>

                <itemizedlist>
                  <listitem>
                    <para><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>M</m:mi>

                            <m:mo>≤</m:mo>

                            <m:mi>P</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>

                  <listitem>
                    <para><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>≤</m:mo>

                            <m:mi>Q</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation> (see H above)</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>D must be greater than zero.</para>
              </listitem>

              <listitem>
                <para>support must be a valid member of the
                <type>vsip_support_region</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>Memory major order must be the same for kernel, data,
                and output.</para>
              </listitem>

              <listitem>
                <para>The kernel, data, and output matrix views must be
                unit-stride in the major direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Note: symmetry, support, and decimation attributes apply
            uniformly to all dimensions.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            2D convolution based on this information. Ideally the
            implementation uses a-priori time and space information with
            ntimes to optimize the 2D convolution object to meet the user’s
            hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints are:</para>

            <orderedlist>
              <listitem>
                <para>Minimize total convolution execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the convolution total memory
                requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </orderedlist>

            <para>Only one hint may be specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dconv2d_destroy">
      <title>vsip_<replaceable>d</replaceable>conv2d_destroy_<replaceable>f</replaceable></title>

      <para>Destroy a 2D convolution object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys a 2D convolution object.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_length vsip_conv2d_destroy_f(vsip_conv2d_f *conv1d);
vsip_length vsip_rcconv2d_destroy_f(vsip_rcconv2d_f *conv1d);
vsip_length vsip_cconv2d_destroy_f(vsip_cconv2d_f *conv1d);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>conv2d</term>

                <listitem>
                  <para>Pointer to a 2D convolution object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 2D convolution object must be valid. An argument of
                null is not an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dconv2d_getattr">
      <title>vsip_<replaceable>d</replaceable>conv2d_getattr_<replaceable>f</replaceable></title>

      <para>Returns the attributes for a 2D convolution object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attributes for a 2D convolution object.</para>

            <para>The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>filter kernel length</para>
              </listitem>

              <listitem>
                <para>filter kernel symmetry</para>
              </listitem>

              <listitem>
                <para>required size of input data (matrix view)</para>
              </listitem>

              <listitem>
                <para>required size of output data (matrix view)</para>
              </listitem>

              <listitem>
                <para>region of support for output</para>
              </listitem>

              <listitem>
                <para>output decimation factor</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef enum 
{ 
  VSIP_NONSYM = 0, 
  VSIP_SYM_EVEN_LEN_ODD = 1, 
  VSIP_SYM_EVEN_LEN_EVEN = 2
} vsip_symmetry;
typedef enum 
{
  VSIP_SUPPORT_FULL = 0, 
  VSIP_SUPPORT_SAME = 1, 
  VSIP_SUPORT_MIN = 2
} vsip_support_region;

typedef struct 
{
  vsip_scalar_mi kernel_len;
  vsip_symmetry symm;
  vsip_scalar_mi data_len;
  vsip_support_region support,
  vsip_scalar_mi out_len;
  vsip_length decimation;
} vsip_conv2d_attr_f;

void vsip_conv2d_getattr_f(const vsip_conv2d_f *conv2d,
                           vsip_conv2d_attr_f *attr);
void vsip_rcconv2d_getattr_f(const vsip_rcconv2d_f *conv2d,
                             vsip_conv2d_attr_f *attr);
void vsip_cconv2d_getattr_f(const vsip_cconv2d_f *conv2d,
                            vsip_conv2d_attr_f *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>conv2d</term>

                <listitem>
                  <para>Pointer to a 2D convolution object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to a <type>vsip_conv2d_attr_f</type>
                  structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 2D convolution object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The size of the kernel is also known to as the “filter
            order.”</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="convolve2d">
      <title>vsip_convolve2d_<replaceable>f</replaceable></title>

      <para>Compute a decimated real two-dimensional (2D) convolution of two
      matrices.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Uses a 2D convolution object to compute the convolution of a
            real filter (kernel) matrix H, size M by N, with a real data
            matrix X, size P by Q, producing the output matrix Y. The filter
            size must be less than or equal to the size of the data.</para>

            <para>Let <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>H</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>h</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>∈</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>

                  <m:mtext>,</m:mtext>

                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>∈</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>P</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>Q</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> denote the filter and data matrices.</para>

            <para>Full: Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>2</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>

                  <m:mtext>by</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>2</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u,</m:mi>

                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>P</m:mi>

                          <m:mo>+</m:mo>

                          <m:mi>M</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>Q</m:mi>

                          <m:mo>+</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>2</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>

                            <m:mo>-</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>-</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mo>,</m:mo>

                              <m:mrow>
                                <m:mi>j</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>v</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>P</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>Q</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌊</m:mo>
                        </m:mrow>

                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mtext>,</m:mtext>

                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>j</m:mi>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>D</m:mi>
                                  </m:mrow>

                                  <m:mo>+</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>P</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>M</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>Q</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>

                  <m:mtext>-</m:mtext>

                  <m:mrow>
                    <m:mo>⌊</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>

                      <m:mi>D</m:mi>
                    </m:mfrac>

                    <m:mo>⌋</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Case <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>D</m:mi>

                    <m:mo>=</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation>:</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>P</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u,</m:mi>

                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>Q</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>N</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>P by Q</m:mi>
                          </m:mrow>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mo>,</m:mo>

                              <m:mrow>
                                <m:mi>j</m:mi>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>v</m:mi>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>Q</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>-</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>+</m:mo>

                    <m:mn>1 by Q - N + 1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>i</m:mi>

                                <m:mo>+</m:mo>

                                <m:mo>(</m:mo>

                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mi>u</m:mi>

                              <m:mtext>,</m:mtext>

                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>j</m:mi>
                                  </m:mrow>

                                  <m:mo>+</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mi>v</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:msub>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mi>P</m:mi>

                  <m:mo>-</m:mo>

                  <m:mi>M</m:mi>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mi>Q</m:mi>

                  <m:mtext>-</m:mtext>

                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>i,j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>i</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>M</m:mi>
                            </m:mrow>

                            <m:mtext>and</m:mtext>

                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_convolve2d_f(const vsip_conv2d_f *conv2d, 
                       const vsip_mview_f *X, const vsip_mview_f *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>conv2d</term>

                <listitem>
                  <para>Convolution filter object, (it includes the filter
                  kernel, H)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of real input data matrix of size P by Q</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of real destination matrix of size</para>

                  <itemizedlist>
                    <listitem>
                      <para>Full: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>P</m:mi>

                                      <m:mo>+</m:mo>

                                      <m:mi>M</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>2</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation> by <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>Q</m:mi>

                                      <m:mo>+</m:mo>

                                      <m:mi>N</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>2</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>

                    <listitem>
                      <para>Same: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>P</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation> by <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>Q</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>

                    <listitem>
                      <para>Minimum: <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>P</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mo>-</m:mo>

                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>M</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation> by <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>Q</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mo>-</m:mo>

                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>⌊</m:mo>
                                  </m:mrow>

                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>N</m:mi>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>/</m:mo>

                                <m:mi>D</m:mi>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:math>
                        </inlineequation></para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Memory major order must be the same for kernel, data, and
            output.</para>

            <para>The kernel, data, and output matrix views are restricted to
            unit-stride in the major direction.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 2D convolution object must be valid.</para>
              </listitem>

              <listitem>
                <para>The X input matrix view must be of size: P by Q
                (conformant with the 2D convolution object).</para>
              </listitem>

              <listitem>
                <para>The Y output vector view must be of size:</para>

                <itemizedlist>
                  <listitem>
                    <para>Full: <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>P</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mi>M</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>2</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation> by <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>Q</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mi>N</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>2</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>

                  <listitem>
                    <para>Same: <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>P</m:mi>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation> by <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>Q</m:mi>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>

                  <listitem>
                    <para>Minimum: <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>P</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>M</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation> by <inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>Q</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mrow>
                                <m:mrow>
                                  <m:mo>⌊</m:mo>
                                </m:mrow>

                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>N</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>
                        </m:math>
                      </inlineequation></para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>The input X, and the output Y, must not overlap.</para>
              </listitem>

              <listitem>
                <para>The input X, and the output Y, and kernel H, must have
                the same memory major order (i.e. if row stride &lt; column
                stride for H, this must also hold for X, and Y).</para>
              </listitem>

              <listitem>
                <para>The kernel, data, and output matrix views are restricted
                to unit-stride in the major direction</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The decimation factor, D, is normally one for non-lowpass
            filters.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para>Codelet for a 3!3 Laplacian filter of a 480!640 image. Only
            the output values where the filter kernel does not extend beyond
            the image data are computed. The output is 378!638.</para>

            <para>The kernel for a Laplacian filter is:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>H</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>[</m:mo>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd style="bold">
                            <m:mi mathvariant="bold">.1667</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mi mathvariant="bold">.6667</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mi>1.667</m:mi>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi mathvariant="bold">.6667</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mi mathvariant="bold">-3.3333</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mi>.6667</m:mi>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>.1667</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mi>.6667</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mi>.1667</m:mi>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>

                      <m:mo>]</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Because the kernel is symmetric in both the row and column
            direction, only the <emphasis role="bold">bold</emphasis>
            coefficients need to be specified.</para>

            <programlisting>#define FOREVER 0
#define M 3
#define N 3
#define P 480
#define Q 640

float laplacian[M*N] = {.1667, 0.6667, .6667, -3.3333};
vsip_mview_f *flt_in = vsip_mcreate_f(P,Q,VSIP_MEM_NONE);
vsip_mview_f *flt_out = vsip_mcreate_f(P-M+1,Q-N+1,VSIP_MEM_NONE);
vsip_block_f *blk = vsip_blockbind_f(laplacian,M*N,VSIP_MEM_CONST);
vsip_mview_f *H = vsip_mbind_f(blk,0, M,N, N,1);
vsip_conv2d_f *filter;
vsip_blockadmit_f(blk,VSIP_TRUE);
filter = vsip_conv2d_create_f(H, VSIP_SYM_EVEN_LEN_ODD, P, Q, 1,
                              VSIP_SUPPORT_MIN, FOREVER,VSIP_ALG_TIME);
...
vsip_convolve2d_f(filter, flt_in, flt_out);
...
vsip_conv2d_destroy_f(filter);
vsip_mdestroy_f(H);
vsip_blockdestroy_f(blk);
vsip_mdestroy_f(flt_in);
vsip_mdestroy_f(flt_out);
...</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorr1d_create">
      <title>vsip_<replaceable>d</replaceable>corr1d_create_<replaceable>f</replaceable></title>

      <para>Create a 1D correlation object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a (cross-)correlation object and returns a pointer
            to the object. The user specifies the length of the reference
            vector r and the data vector x.</para>

            <para>A correlation object is used to compute the correlation of a
            reference vector r of length M, with a data vector x of length N,
            producing the output vector y.</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>k</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mi>M</m:mi>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mn>*</m:mn>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>*</m:mo>

                      <m:mo>{</m:mo>

                      <m:mtable columnalign="left">
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>0</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>+</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>N</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mi>N</m:mi>

                                  <m:mo>+</m:mo>

                                  <m:mi>M</m:mi>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>k</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>*</m:mo>

                      <m:mo>{</m:mo>

                      <m:mtable columnalign="left">
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>0</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>+</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>N</m:mn>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mi>N</m:mi>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>
                              </m:mrow>

                              <m:mi>k</m:mi>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mi>N</m:mi>

                  <m:mo>-</m:mo>

                  <m:mi>M</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>/</m:mo>

                      <m:mo>M</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mover>
                      <m:mi>y</m:mi>

                      <m:mo form="postfix">^</m:mo>
                    </m:mover>

                    <m:mi>j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are the biased correlation estimates while
            <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are unbiased estimates. (The unbiased
            estimates are scaled by the number of terms in the summation for
            each lag where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>〈</m:mo>

                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>j</m:mi>
                    </m:msub>

                    <m:mo>〉</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> is not defined to be zero.)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Real vectors</para>

            <synopsis>vsip_corr1d_<replaceable>f</replaceable> *vsip_corr1d_create_<replaceable>f</replaceable>(vsip_length M, vsip_length N,
                                    vsip_support_region support, 
                                    vsip_length ntimes, vsip_alg_hint hint);</synopsis>

            <para>Complex vectors</para>

            <synopsis>vsip_ccorr1d_<replaceable>f</replaceable> *vsip_ccorr1d_create_<replaceable>f</replaceable>(vsip_length M, vsip_length N,
                                      vsip_support_region support, 
                                      vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>M</term>

                <listitem>
                  <para>Length of input reference vector view, r</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of input data vector view, x</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>support</term>

                <listitem>
                  <para>Output region of support (indicates which output
                  points are computed).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate of how many convolution will be applied. A
                  value of zero is treated as semi-infinite (a lot of
                  times).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine algorithm approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to an 1D correlation object, or null if
            the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The reference length must be equal to or smaller than the
            data length, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>N</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>M must be greater than zero.</para>

                <para>N must be greater than zero and greater than or equal to
                M.</para>
              </listitem>

              <listitem>
                <para>symm must be a valid member of the
                <type>vsip_symmetry</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>support must be a valid member of the
                <type>vsip_support_region</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            correlation based on this information. Ideally, the implementation
            uses a-priori time and space information with ntimes to optimize
            the correlation object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints are:</para>

            <para><orderedlist>
                <listitem>
                  <para>Minimize total convolution execution time.</para>
                </listitem>

                <listitem>
                  <para>Minimize the convolution total memory
                  requirements.</para>
                </listitem>

                <listitem>
                  <para>Maximize numeric accuracy/stability (minimize numeric
                  noise).</para>
                </listitem>
              </orderedlist></para>

            <para>Only one hint may be specified.</para>

            <para>If all of the data are not available at one time, use the
            FIR filtering routines to filter the data in segments. Specify the
            FIR kernel as the reverse indexed clone of the reference
            data.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorr1d_destroy">
      <title>vsip_<replaceable>d</replaceable>corr1d_destroy_<replaceable>f</replaceable></title>

      <para>Destroy a 1D correlation object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys a 1D correlation object. Returns zero on
            failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Real vectors</para>

            <synopsis>int vsip_corr1d_destroy_<replaceable>f</replaceable>(vsip_corr1d_<replaceable>f</replaceable> *corr1d);</synopsis>

            <para>Complex vectors</para>

            <synopsis>int vsip_ccorr1d_destroy_<replaceable>f</replaceable>(vsip_ccorr1d_<replaceable>f</replaceable> *corr1d);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>corr1d</term>

                <listitem>
                  <para>Pointer to a 1D correlation object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 1D correlation object must be valid. An argument of
                null is not an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorr1d_getattr">
      <title>vsip_<replaceable>d</replaceable>corr1d_getattr_<replaceable>f</replaceable></title>

      <para>Returns the attributes for a 1D correlation object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attributes for a 1D (cross-) correlation
            object.</para>

            <para>The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>required length of reference data (vector view)</para>
              </listitem>

              <listitem>
                <para>required length of input data (vector view)</para>
              </listitem>

              <listitem>
                <para>output region of support</para>
              </listitem>

              <listitem>
                <para>required length of output data (vector view)</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef struct 
{
  vsip_scalar_vi ref_len;
  vsip_scalar_vi data_len;
  vsip_support_region support;
  vsip_scalar_vi lag_len;
} vsip_corr1d_attr_<replaceable>f</replaceable>;

typedef struct 
{
  vsip_scalar_vi ref_len;
  vsip_scalar_vi data_len;
  vsip_support_region support;
  vsip_scalar_vi lag_len;
} vsip_ccorr1d_attr_<replaceable>f</replaceable>;

void vsip_corr1d_getattr_f(const vsip_corr1d_f *corr1d, 
                           vsip_corr1d_attr_f *attr);
void vsip_ccorr1d_getattr_f(const vsip_ccorr1d_f *corr1d, 
                            vsip_ccorr1d_attr_f *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>corr1d</term>

                <listitem>
                  <para>Pointer to a 1D correlation object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to a
                  <type>vsip_dcorr1d_attr_<replaceable>f</replaceable></type>
                  structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 1D correlation object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorrelate1d">
      <title>vsip_<replaceable>d</replaceable>correlate_<replaceable>f</replaceable></title>

      <para>Compute a real one-dimensional (1D) correlation of two
      vectors.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes the (cross-) correlation of a reference vector r of
            length M, with a data vector x of length N, producing the output
            vector y.</para>

            <para>Full: Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>M</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>k</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mi>M</m:mi>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mn>*</m:mn>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>N</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>*</m:mo>

                      <m:mo>{</m:mo>

                      <m:mtable columnalign="left">
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>0</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>M</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>+</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>N</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mi>N</m:mi>

                                  <m:mo>+</m:mo>

                                  <m:mi>M</m:mi>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Length <inlineequation>
                <m:math display="inline">
                  <m:mi>N</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>k</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>*</m:mo>

                      <m:mo>{</m:mo>

                      <m:mtable columnalign="left">
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mi>n</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>0</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>/</m:mo>

                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>+</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>-</m:mo>

                                    <m:mi>n</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>for</m:mtext>

                            <m:mrow>
                              <m:mn>N</m:mn>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>n</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mi>N</m:mi>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>+</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>k</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>n</m:mi>

                                <m:mo>+</m:mo>
                              </m:mrow>

                              <m:mi>k</m:mi>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for n = 0, ...,</m:mtext>

                  <m:mi>N</m:mi>

                  <m:mo>-</m:mo>

                  <m:mi>M</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>n</m:mi>
                      </m:msub>

                      <m:mo>/</m:mo>

                      <m:mo>M</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mover>
                      <m:mi>y</m:mi>

                      <m:mo form="postfix">^</m:mo>
                    </m:mover>

                    <m:mi>j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are the biased correlation estimates while
            <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are unbiased estimates. (The unbiased
            estimates are scaled by the number of terms in the summation for
            each lag where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>〈</m:mo>

                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>j</m:mi>
                    </m:msub>

                    <m:mo>〉</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> is not defined to be zero.)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Real vectors</para>

            <synopsis>void vsip_correlate1d_f(const vsip_corr1d_f *corr1d, vsip_bias bias,
                        const vsip_vview_f *ref, 
                        const vsip_vview_f *x, const vsip_vview_f *y);</synopsis>

            <para>Complex vectors</para>

            <synopsis>void vsip_ccorrelate1d_f(const vsip_corr1d_f *corr1d, vsip_bias bias,
                         const vsip_cvview_f *ref, 
                         const vsip_cvview_f *x, const vsip_cvview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>corr1d</term>

                <listitem>
                  <para>Pointer to correlation object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>bias</term>

                <listitem>
                  <para>Select biased or unbiased correlation estimate</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ref</term>

                <listitem>
                  <para>View of real (complex) reference data vector of length
                  M</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>View of real (complex) input data vector of length
                  N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>View of real (complex) lag vector of length (N + M -
                  1), N, or (N - M + 1) (full, same, or minimum)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The reference length must be equal to or smaller than the
            data length, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>N</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 1D correlation object must be valid.</para>
              </listitem>

              <listitem>
                <para>bias must be a valid member of the
                <type>vsip_bias</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>The r reference input vector view must be of length M
                (conformant with the 1D correlation object).</para>
              </listitem>

              <listitem>
                <para>The x data input vector view must be of length N
                (conformant with the 1D correlation object).</para>
              </listitem>

              <listitem>
                <para>The y output vector view must be of length:
                <itemizedlist>
                    <listitem>
                      <para>Full: N + M - 1,</para>
                    </listitem>

                    <listitem>
                      <para>Same: N, or</para>
                    </listitem>

                    <listitem>
                      <para>Minimum: N - M +1</para>

                      <para>(conformant with the 1D correlation
                      object).</para>
                    </listitem>
                  </itemizedlist></para>
              </listitem>

              <listitem>
                <para>The output y cannot overlap either of the input vector
                views, r or x.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para>If all of the data are not available at one time, use the
            FIR filtering routines to filter the data in segments. Specify the
            FIR kernel as the reverse indexed clone of the reference
            data.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorr2d_create">
      <title>vsip_<replaceable>d</replaceable>corr2d_create_<replaceable>f</replaceable></title>

      <para>Create a 2D correlation object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a 2D correlation object and returns a pointer to the
            object. The user specifies the size of the reference matrix R and
            the data matrix X.</para>

            <para>Compute the correlation of a reference matrix R with a data
            matrix X, producing the output matrix Y. This implementation
            requires that <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>M</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>P</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, and <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>N</m:mi>

                    <m:mo>≤</m:mo>

                    <m:mi>Q</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation> (reference size is less than or equal to the
            data size).</para>

            <para>Let <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>R</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>r</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation>, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>P</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>Q</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> denote the reference and data matrices.</para>

            <para>Full: Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>u</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mi>M</m:mi>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>

                                <m:mo>,</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>v</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mi>j</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>

                            <m:mn>*</m:mn>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>

                    <m:mtext>, for j = 0, ... , Q + N - 2</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>i</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mn>1</m:mn>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mi>M</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>M</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mi>P</m:mi>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>P</m:mi>

                                                <m:mo>+</m:mo>

                                                <m:mi>M</m:mi>
                                              </m:mrow>

                                              <m:mo>-</m:mo>

                                              <m:mn>1</m:mn>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>i</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>P</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>P</m:mi>

                                          <m:mo>+</m:mo>

                                          <m:mi>M</m:mi>
                                        </m:mrow>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>j</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mn>1</m:mn>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>N</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mi>Q</m:mi>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>Q</m:mi>

                                                <m:mo>+</m:mo>

                                                <m:mi>N</m:mi>
                                              </m:mrow>

                                              <m:mo>-</m:mo>

                                              <m:mn>1</m:mn>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>j</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>Q</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>Q</m:mi>

                                          <m:mo>+</m:mo>

                                          <m:mi>N</m:mi>
                                        </m:mrow>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Size <inlineequation>
                <m:math display="inline">
                  <m:mi>P by Q</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>u</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>,</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mi>v</m:mi>

                                  <m:mo>+</m:mo>

                                  <m:mi>j</m:mi>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mrow>
                                  <m:mo>⌊</m:mo>

                                  <m:mfrac bevelled="true">
                                    <m:mi>N</m:mi>

                                    <m:mi>2</m:mi>
                                  </m:mfrac>

                                  <m:mo>⌋</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>

                  <m:mo>,</m:mo>

                  <m:mtext>for j = 0, ..., Q - 1</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>i</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mrow>
                                              <m:mo>⌈</m:mo>

                                              <m:mfrac bevelled="true">
                                                <m:mi>M</m:mi>

                                                <m:mi>2</m:mi>
                                              </m:mfrac>

                                              <m:mo>⌉</m:mo>
                                            </m:mrow>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>M</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>M</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>P - ⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>M</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>P</m:mi>

                                                <m:mo>-</m:mo>

                                                <m:mi>1</m:mi>
                                              </m:mrow>

                                              <m:mo>+</m:mo>

                                              <m:mrow>
                                                <m:mo>⌈</m:mo>

                                                <m:mfrac bevelled="true">
                                                  <m:mi>M</m:mi>

                                                  <m:mi>2</m:mi>
                                                </m:mfrac>

                                                <m:mo>⌉</m:mo>
                                              </m:mrow>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>i</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>P</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>P</m:mi>

                                          <m:mo>+</m:mo>

                                          <m:mi>M</m:mi>
                                        </m:mrow>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>j</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mrow>
                                              <m:mo>⌈</m:mo>

                                              <m:mfrac bevelled="true">
                                                <m:mi>N</m:mi>

                                                <m:mi>2</m:mi>
                                              </m:mfrac>

                                              <m:mo>⌉</m:mo>
                                            </m:mrow>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>N</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>Q - ⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>Q</m:mi>

                                                <m:mo>-</m:mo>

                                                <m:mi>1</m:mi>
                                              </m:mrow>

                                              <m:mo>+</m:mo>

                                              <m:mrow>
                                                <m:mo>⌈</m:mo>

                                                <m:mfrac bevelled="true">
                                                  <m:mi>N</m:mi>

                                                  <m:mi>2</m:mi>
                                                </m:mfrac>

                                                <m:mo>⌉</m:mo>
                                              </m:mrow>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>j</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mo>Q - ⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>Q</m:mi>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Size P - M + 1 by Q - N +
            1</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>u</m:mi>

                                <m:mo>+</m:mo>
                              </m:mrow>

                              <m:mi>i, v + j</m:mi>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mi>P</m:mi>

                  <m:mo>-</m:mo>

                  <m:mi>M, for j = 0, ..., Q - N</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>/</m:mo>

                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>⁢</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mn>0</m:mn>

                    <m:mo>≤</m:mo>

                    <m:mi>i</m:mi>

                    <m:mo>&lt;</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mi>P</m:mi>

                        <m:mo>-</m:mo>

                        <m:mi>M</m:mi>
                      </m:mrow>

                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>; for</m:mtext>

                  <m:mrow>
                    <m:mn>0</m:mn>

                    <m:mo>≤</m:mo>

                    <m:mi>j</m:mi>

                    <m:mo>&lt;</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mi>Q</m:mi>

                        <m:mo>-</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>i,j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>i</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>P</m:mi>

                              <m:mtext>and</m:mtext>

                              <m:mrow>
                                <m:mn>0</m:mn>

                                <m:mo>≤</m:mo>

                                <m:mi>j</m:mi>

                                <m:mo>&lt;</m:mo>

                                <m:mi>Q</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mover>
                      <m:mi>y</m:mi>

                      <m:mo form="postfix">^</m:mo>
                    </m:mover>

                    <m:mi>i,j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are the biased correlation estimates while
            <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>i,j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are unbiased estimates. (The unbiased
            estimates are scaled by the number of terms in the summation for
            each lag where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>〈</m:mo>

                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>〉</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> is not defined to be zero.)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Real vectors</para>

            <synopsis>vsip_corr2d_f *vsip_corr2d_create_f(vsip_length M, vsip_length N, 
                                    vsip_length P, vsip_length Q,
                                    vsip_support_region support, 
                                    vsip_length ntimes, vsip_alg_hint hint);</synopsis>

            <para>Complex vectors</para>

            <synopsis>vsip_ccorr2d_f *vsip_ccorr2d_create_f(vsip_length M, vsip_length N, 
                                      vsip_length P, vsip_length Q,
                                      vsip_support_region support, 
                                      vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>M</term>

                <listitem>
                  <para>Reference matrix view size is M rows by N
                  columns</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Reference matrix view size is M rows by N
                  columns</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>P</term>

                <listitem>
                  <para>Data matrix view size is P rows by Q columns</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Q</term>

                <listitem>
                  <para>Data matrix view size is P rows by Q columns</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>support</term>

                <listitem>
                  <para>Output region of support (indicates which output
                  points are computed).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate of how many correlation will be applied. A
                  value of zero is treated as semi-infinite (a lot of
                  times).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine filtering approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to an 2D correlation object, or null if
            the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>P must be greater than or equal to M</para>

                <para>Q must be greater than or equal to N (see H
                above).</para>
              </listitem>

              <listitem>
                <para>support must be a valid member of the
                <type>vsip_support_region</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>Note:, support attributes apply uniformly to all
            dimensions.</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            2D correlation based on this information. Ideally the
            implementation uses a-priori time and space information with
            ntimes to optimize the 2D correlation object to meet the user’s
            hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints are:</para>

            <orderedlist>
              <listitem>
                <para>Minimize total convolution execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the convolution total memory
                requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </orderedlist>

            <para>Only one hint may be specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorr2d_destroy">
      <title>vsip_<replaceable>d</replaceable>corr2d_destroy_<replaceable>f</replaceable></title>

      <para>Destroy a 2D correlation object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys a 2D correlation object. Returns zero on
            failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Real vectors</para>

            <synopsis>int vsip_corr2d_destroy_<replaceable>f</replaceable>(vsip_corr2d_<replaceable>f</replaceable> *corr1d);</synopsis>

            <para>Complex vectors</para>

            <synopsis>int vsip_ccorr2d_destroy_<replaceable>f</replaceable>(vsip_ccorr2d_<replaceable>f</replaceable> *corr1d);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>corr2d</term>

                <listitem>
                  <para>Pointer to a 2D correlation object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 2D correlation object must be valid. An argument of
                null is not an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorr2d_getattr">
      <title>vsip_<replaceable>d</replaceable>corr2d_getattr_<replaceable>f</replaceable></title>

      <para>Returns the attributes for a 2D correlation object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attributes for a 2D (cross-) correlation
            object.</para>

            <para>The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>required size of reference data (matrix view)</para>
              </listitem>

              <listitem>
                <para>required size of input data (matrix view)</para>
              </listitem>

              <listitem>
                <para>output region of support</para>
              </listitem>

              <listitem>
                <para>required size of output lags (matrix view)</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef struct 
{
  vsip_scalar_mi ref_size;
  vsip_scalar_mi data_size;
  vsip_support_region support;
  vsip_scalar_mi lag_size;
} vsip_corr2d_attr_<replaceable>f</replaceable>;

typedef struct 
{
  vsip_scalar_mi ref_size;
  vsip_scalar_mi data_size;
  vsip_support_region support;
  vsip_scalar_mi lag_size;
} vsip_ccorr1d_attr_<replaceable>f</replaceable>;

void vsip_corr2d_getattr_f(const vsip_corr2d_f *corr2d, 
                           vsip_corr2d_attr_f *attr);
void vsip_ccorr2d_getattr_f(const vsip_ccorr2d_f *corr2d, 
                            vsip_ccorr2d_attr_f *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>corr2d</term>

                <listitem>
                  <para>Pointer to a 2D correlation object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to a
                  <type>vsip_dcorr2d_attr_<replaceable>f</replaceable></type>
                  structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 2D correlation object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dcorrelate2d">
      <title>vsip_<replaceable>d</replaceable>correlate2d_<replaceable>f</replaceable></title>

      <para>Compute a two-dimensional correlation of two matrices.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Computes the (cross-) correlation of a reference matrix R
            with a data matrix X, producing the output matrix Y. This
            implementation requires that M 2 P, and N 2 Q (reference size is
            less than or equal to the data size).</para>

            <para>Let <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>R</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>r</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation>, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mi>X</m:mi>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>(</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i</m:mi>
                      </m:msub>

                      <m:mo>)</m:mo>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:msup>
                      <m:mi mathvariant="normal">ℝ</m:mi>

                      <m:mrow>
                        <m:mi>P</m:mi>

                        <m:mo>×</m:mo>

                        <m:mi>Q</m:mi>
                      </m:mrow>
                    </m:msup>
                  </m:mrow>
                </m:math>
              </inlineequation> denote the reference and data matrices.</para>

            <para>Full: Size <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>
                </m:math>
              </inlineequation> by <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:mi>Q</m:mi>

                            <m:mo>+</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>u</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mi>M</m:mi>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>

                                <m:mo>)</m:mo>

                                <m:mo>,</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>v</m:mi>

                                    <m:mo>+</m:mo>

                                    <m:mi>j</m:mi>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>

                            <m:mn>*</m:mn>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for j = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mrow>
                      <m:mi>P</m:mi>

                      <m:mo>+</m:mo>

                      <m:mi>M</m:mi>
                    </m:mrow>

                    <m:mo>-</m:mo>

                    <m:mn>2</m:mn>

                    <m:mtext>, for j = 0, ... , Q + N - 2</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>i</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mn>1</m:mn>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mi>M</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>M</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mi>P</m:mi>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>P</m:mi>

                                                <m:mo>+</m:mo>

                                                <m:mi>M</m:mi>
                                              </m:mrow>

                                              <m:mo>-</m:mo>

                                              <m:mn>1</m:mn>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>i</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>P</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>P</m:mi>

                                          <m:mo>+</m:mo>

                                          <m:mi>M</m:mi>
                                        </m:mrow>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>j</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mn>1</m:mn>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>N</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mi>Q</m:mi>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>Q</m:mi>

                                                <m:mo>+</m:mo>

                                                <m:mi>N</m:mi>
                                              </m:mrow>

                                              <m:mo>-</m:mo>

                                              <m:mn>1</m:mn>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>j</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>Q</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>Q</m:mi>

                                          <m:mo>+</m:mo>

                                          <m:mi>N</m:mi>
                                        </m:mrow>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Same size: Size <inlineequation>
                <m:math display="inline">
                  <m:mi>P by Q</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:mo>〈</m:mo>

                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>u</m:mi>

                                <m:mo>+</m:mo>

                                <m:mi>i</m:mi>
                              </m:mrow>

                              <m:mo>-</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac bevelled="true">
                                  <m:mi>M</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>,</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mi>v</m:mi>

                                  <m:mo>+</m:mo>

                                  <m:mi>j</m:mi>
                                </m:mrow>

                                <m:mo>-</m:mo>

                                <m:mrow>
                                  <m:mo>⌊</m:mo>

                                  <m:mfrac bevelled="true">
                                    <m:mi>N</m:mi>

                                    <m:mi>2</m:mi>
                                  </m:mfrac>

                                  <m:mo>⌋</m:mo>
                                </m:mrow>
                              </m:mrow>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>

                          <m:mo>〉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mi>P</m:mi>

                    <m:mo>-</m:mo>

                    <m:mn>1</m:mn>
                  </m:mrow>

                  <m:mo>,</m:mo>

                  <m:mtext>for j = 0, ..., Q - 1</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>i</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mrow>
                                              <m:mo>⌈</m:mo>

                                              <m:mfrac bevelled="true">
                                                <m:mi>M</m:mi>

                                                <m:mi>2</m:mi>
                                              </m:mfrac>

                                              <m:mo>⌉</m:mo>
                                            </m:mrow>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>M</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>M</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>M</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>P - ⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>M</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>P</m:mi>

                                                <m:mo>-</m:mo>

                                                <m:mi>1</m:mi>
                                              </m:mrow>

                                              <m:mo>+</m:mo>

                                              <m:mrow>
                                                <m:mo>⌈</m:mo>

                                                <m:mfrac bevelled="true">
                                                  <m:mi>M</m:mi>

                                                  <m:mi>2</m:mi>
                                                </m:mfrac>

                                                <m:mo>⌉</m:mo>
                                              </m:mrow>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>i</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>P</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>i</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>P</m:mi>

                                          <m:mo>+</m:mo>

                                          <m:mi>M</m:mi>
                                        </m:mrow>

                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mo>*</m:mo>

                              <m:mo>{</m:mo>

                              <m:mtable columnalign="left">
                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mi>j</m:mi>

                                            <m:mo>+</m:mo>

                                            <m:mrow>
                                              <m:mo>⌈</m:mo>

                                              <m:mfrac bevelled="true">
                                                <m:mi>N</m:mi>

                                                <m:mi>2</m:mi>
                                              </m:mfrac>

                                              <m:mo>⌉</m:mo>
                                            </m:mrow>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mn>0</m:mn>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mi>N</m:mi>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mo>⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mo>Q - ⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>

                                <m:mtr>
                                  <m:mtd>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>1</m:mn>

                                        <m:mo>/</m:mo>

                                        <m:mrow>
                                          <m:mo>(</m:mo>

                                          <m:mrow>
                                            <m:mrow>
                                              <m:mrow>
                                                <m:mi>Q</m:mi>

                                                <m:mo>-</m:mo>

                                                <m:mi>1</m:mi>
                                              </m:mrow>

                                              <m:mo>+</m:mo>

                                              <m:mrow>
                                                <m:mo>⌈</m:mo>

                                                <m:mfrac bevelled="true">
                                                  <m:mi>N</m:mi>

                                                  <m:mi>2</m:mi>
                                                </m:mfrac>

                                                <m:mo>⌉</m:mo>
                                              </m:mrow>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mi>j</m:mi>
                                          </m:mrow>

                                          <m:mo>)</m:mo>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>

                                  <m:mtd>
                                    <m:mtext>for</m:mtext>

                                    <m:mrow>
                                      <m:mrow>
                                        <m:mo>Q - ⌈</m:mo>

                                        <m:mfrac bevelled="true">
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌉</m:mo>
                                      </m:mrow>

                                      <m:mo>≤</m:mo>

                                      <m:mi>j</m:mi>

                                      <m:mo>&lt;</m:mo>

                                      <m:mrow>
                                        <m:mrow>
                                          <m:mi>Q</m:mi>
                                        </m:mrow>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:mtd>
                                </m:mtr>
                              </m:mtable>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Minimum (non-zero-padded): Size P - M + 1 by Q - N +
            1</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>y</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>u</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>v</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>r</m:mi>

                          <m:mi>u,v</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:mrow>
                          <m:msubsup>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mrow>
                                <m:mi>u</m:mi>

                                <m:mo>+</m:mo>
                              </m:mrow>

                              <m:mi>i, v + j</m:mi>
                            </m:mrow>

                            <m:mi>*</m:mi>
                          </m:msubsup>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for i = 0, ...,</m:mtext>

                  <m:mi>P</m:mi>

                  <m:mo>-</m:mo>

                  <m:mi>M, for j = 0, ..., Q - N</m:mi>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:msub>
                        <m:mover>
                          <m:mi>y</m:mi>

                          <m:mo form="postfix">^</m:mo>
                        </m:mover>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>/</m:mo>

                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>⁢</m:mo>

                          <m:mi>N</m:mi>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for</m:mtext>

                  <m:mrow>
                    <m:mn>0</m:mn>

                    <m:mo>≤</m:mo>

                    <m:mi>i</m:mi>

                    <m:mo>&lt;</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mi>P</m:mi>

                        <m:mo>-</m:mo>

                        <m:mi>M</m:mi>
                      </m:mrow>

                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>; for</m:mtext>

                  <m:mrow>
                    <m:mn>0</m:mn>

                    <m:mo>≤</m:mo>

                    <m:mi>j</m:mi>

                    <m:mo>&lt;</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mi>Q</m:mi>

                        <m:mo>-</m:mo>

                        <m:mi>N</m:mi>
                      </m:mrow>

                      <m:mo>-</m:mo>

                      <m:mn>1</m:mn>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>〈</m:mo>

                      <m:msub>
                        <m:mi>x</m:mi>

                        <m:mi>i,j</m:mi>
                      </m:msub>

                      <m:mo>〉</m:mo>
                    </m:mrow>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>i,j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>0</m:mi>

                              <m:mo>≤</m:mo>

                              <m:mi>i</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>P</m:mi>

                              <m:mtext>and</m:mtext>

                              <m:mrow>
                                <m:mn>0</m:mn>

                                <m:mo>≤</m:mo>

                                <m:mi>j</m:mi>

                                <m:mo>&lt;</m:mo>

                                <m:mi>Q</m:mi>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>0</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mtext>otherwise</m:mtext>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>The values <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mover>
                      <m:mi>y</m:mi>

                      <m:mo form="postfix">^</m:mo>
                    </m:mover>

                    <m:mi>i,j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are the biased correlation estimates while
            <inlineequation>
                <m:math display="inline">
                  <m:msub>
                    <m:mi>y</m:mi>

                    <m:mi>i,j</m:mi>
                  </m:msub>
                </m:math>
              </inlineequation> are unbiased estimates. (The unbiased
            estimates are scaled by the number of terms in the summation for
            each lag where <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>〈</m:mo>

                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>i,j</m:mi>
                    </m:msub>

                    <m:mo>〉</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> is not defined to be zero.)</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <para>Real vectors</para>

            <synopsis>void vsip_correlate2d_f(const vsip_corr2d_f *corr2d, vsip_bias bias,
                        const vsip_mview_f *R, 
                        const vsip_mview_f *X, const vsip_mview_f *Y);</synopsis>

            <para>Complex vectors</para>

            <synopsis>void vsip_ccorrelate2d_f(const vsip_ccorr2d_f *corr2d, vsip_bias bias,
                         const vsip_cmview_f *R, 
                         const vsip_cmview_f *X, const vsip_cmview_f *Y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>corr2d</term>

                <listitem>
                  <para>Correlation object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>bias</term>

                <listitem>
                  <para>Biased or unbiased correlation estimate</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>R</term>

                <listitem>
                  <para>View of real (complex) reference data matrix of size M
                  by N</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>X</term>

                <listitem>
                  <para>View of real (complex) input data matrix of size P by
                  Q</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>Y</term>

                <listitem>
                  <para>View of real (complex) lag matrix of size</para>

                  <itemizedlist>
                    <listitem>
                      <para>Full: P+ M - 1 by Q+ N - 1</para>
                    </listitem>

                    <listitem>
                      <para>Same Size:P by Q</para>
                    </listitem>

                    <listitem>
                      <para>Minimum: P- M + 1 by Q- N + 1</para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The reference R, data X, and lag output Y must all have the
            same memory major ordering. The matrix views must be unit-stride
            in the major direction.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The 2D correlation object must be valid.</para>
              </listitem>

              <listitem>
                <para>bias must be a valid member of the vsip_bias
                enumeration.</para>
              </listitem>

              <listitem>
                <para>The R reference input matrix view must be of size M by N
                (conformant with the 2D correlation object).</para>
              </listitem>

              <listitem>
                <para>The X data input matrix view must be of size P by Q
                (conformant with the 2D correlation object).</para>
              </listitem>

              <listitem>
                <para>The Y output matrix view must be of size</para>

                <itemizedlist>
                  <listitem>
                    <para>Full: P+ M - 1 by Q+ N - 1</para>
                  </listitem>

                  <listitem>
                    <para>Same Size:P by Q</para>
                  </listitem>

                  <listitem>
                    <para>Minimum: P- M + 1 by Q- N + 1 (conformant with the
                    2D correlation object).</para>
                  </listitem>
                </itemizedlist>
              </listitem>

              <listitem>
                <para>The output Y cannot overlap either the reference R or
                the data X.</para>
              </listitem>

              <listitem>
                <para>The inputs R, and X, and the output Y, must have the
                same memory major order (i.e. if row stride &lt; column stride
                for R, this must also hold for X, and Y).</para>
              </listitem>

              <listitem>
                <para>The input and output matrix views must be all be
                unit-stride in the major direction.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Window Functions</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry><function>vsip_vcreate_blackman_f</function></entry>

            <entry>Create Blackman Window</entry>
          </row>

          <row>
            <entry><function>vsip_vcreate_cheby_f</function></entry>

            <entry>Create Chebyshev Window</entry>
          </row>

          <row>
            <entry><function>vsip_vcreate_hanning_f</function></entry>

            <entry>Create Hanning Window</entry>
          </row>

          <row>
            <entry><function>vsip_vcreate_kaiser_f</function></entry>

            <entry>Create Kaiser Window</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="vcreate_blackman">
      <title>vsip_vcreate_blackman_<replaceable>f</replaceable></title>

      <para>Create a vector with Blackman window weights.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a vector initialized with a Blackman window of
            length N,</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>wind</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mrow>
                          <m:mn>0.42</m:mn>

                          <m:mo>*</m:mo>

                          <m:mn>0.5</m:mn>
                        </m:mrow>

                        <m:mo>*</m:mo>

                        <m:mrow>
                          <m:mi>cos</m:mi>

                          <m:mo>⁡</m:mo>

                          <m:mfenced>
                            <m:mfrac>
                              <m:mrow>
                                <m:mrow>
                                  <m:mn>2</m:mn>

                                  <m:mo>⁢</m:mo>

                                  <m:mi>π</m:mi>
                                </m:mrow>

                                <m:mo>⁢</m:mo>

                                <m:mi>k</m:mi>
                              </m:mrow>

                              <m:mrow>
                                <m:mi>N</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:mfrac>
                          </m:mfenced>
                        </m:mrow>
                      </m:mrow>

                      <m:mo>+</m:mo>

                      <m:mrow>
                        <m:mn>0.08</m:mn>

                        <m:mo>*</m:mo>

                        <m:mrow>
                          <m:mi>cos</m:mi>

                          <m:mo>⁡</m:mo>

                          <m:mfenced>
                            <m:mfrac>
                              <m:mrow>
                                <m:mrow>
                                  <m:mn>4</m:mn>

                                  <m:mo>⁢</m:mo>

                                  <m:mi>π</m:mi>
                                </m:mrow>

                                <m:mo>⁢</m:mo>

                                <m:mi>k</m:mi>
                              </m:mrow>

                              <m:mrow>
                                <m:mi>N</m:mi>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:mfrac>
                          </m:mfenced>
                        </m:mrow>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, for k = 0, ..., N-1</para>

            <para>and returns a pointer to a real vector view object, or null
            if the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_vview_f *vsip_vcreate_blackman_f(vsip_length N, vsip_memory_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of window vector</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Memory type hints (Typically VSIP_MEM_CONST)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to the vector view object, or null on
            failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>N &gt; 1</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the vsip_memory_hint
                enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <programlisting>#define N 256
...
vsip_vview_sp blackman = vsip_vcreate_blackman_sp(N,
VSIP_MEM_CONST);
vsip_vview_sp x = vsip_vcreate(N, VSIP_MEM_NONE);
/* window the data in x */
vsip_vmul_sp(x,blackman,x);
vsip_valldestroy_sp(blackman); vsip_valldestroy_sp(x);
</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="vcreate_cheby">
      <title>vsip_vcreate_cheby_<replaceable>f</replaceable></title>

      <para>Create a vector with Dolph-Chebyshev window weights.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a real vector initialized with a Dolph-Chebyshev
            window of length N,</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>δ</m:mi>

                            <m:mi>P</m:mi>
                          </m:msub>

                          <m:mo>=</m:mo>

                          <m:msup>
                            <m:mn>10</m:mn>

                            <m:mrow>
                              <m:mrow>
                                <m:mo>-</m:mo>

                                <m:mi>ripple</m:mi>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mn>20</m:mn>
                            </m:mrow>
                          </m:msup>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>τ</m:mi>

                            <m:mi>P</m:mi>
                          </m:msub>

                          <m:mo>=</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>(</m:mo>

                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>+</m:mo>

                                <m:msub>
                                  <m:mi>δ</m:mi>

                                  <m:mi>P</m:mi>
                                </m:msub>
                              </m:mrow>

                              <m:mo>)</m:mo>
                            </m:mrow>

                            <m:mo>/</m:mo>

                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>δ</m:mi>

                            <m:mi>f</m:mi>
                          </m:msub>

                          <m:mo>=</m:mo>

                          <m:mrow>
                            <m:mfrac>
                              <m:mi>1</m:mi>

                              <m:mi>π</m:mi>
                            </m:mfrac>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:msup>
                                <m:mi>cos</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:msup>

                              <m:mo>⁡</m:mo>

                              <m:mrow>
                                <m:mo>[</m:mo>

                                <m:msup>
                                  <m:mrow>
                                    <m:mi>cosh</m:mi>

                                    <m:mo>⁡</m:mo>

                                    <m:mfenced>
                                      <m:mrow>
                                        <m:msup>
                                          <m:mi>cosh</m:mi>

                                          <m:mrow>
                                            <m:mo>-</m:mo>

                                            <m:mn>1</m:mn>
                                          </m:mrow>
                                        </m:msup>

                                        <m:mo>⁡</m:mo>

                                        <m:msub>
                                          <m:mi>τ</m:mi>

                                          <m:mi>P</m:mi>
                                        </m:msub>
                                      </m:mrow>

                                      <m:mo>/</m:mo>

                                      <m:mrow>
                                        <m:mo>(</m:mo>

                                        <m:mrow>
                                          <m:mi>N</m:mi>

                                          <m:mo>-</m:mo>

                                          <m:mn>1</m:mn>
                                        </m:mrow>

                                        <m:mo>)</m:mo>
                                      </m:mrow>
                                    </m:mfenced>
                                  </m:mrow>

                                  <m:mi>-1</m:mi>
                                </m:msup>

                                <m:mo>]</m:mo>
                              </m:mrow>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>src</m:mi>

                            <m:mi>0</m:mi>
                          </m:msub>

                          <m:mo>=</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>(</m:mo>

                              <m:mrow>
                                <m:mn>3</m:mn>

                                <m:mo>-</m:mo>

                                <m:mrow>
                                  <m:mi>cos</m:mi>

                                  <m:mo>⁡</m:mo>

                                  <m:mfenced>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>2</m:mn>

                                        <m:mo>⁢</m:mo>

                                        <m:mi>π</m:mi>
                                      </m:mrow>

                                      <m:mo>⁢</m:mo>

                                      <m:msub>
                                        <m:mi>δ</m:mi>

                                        <m:mi>f</m:mi>
                                      </m:msub>
                                    </m:mrow>
                                  </m:mfenced>
                                </m:mrow>
                              </m:mrow>

                              <m:mo>)</m:mo>
                            </m:mrow>

                            <m:mo>/</m:mo>

                            <m:mrow>
                              <m:mo>(</m:mo>

                              <m:mrow>
                                <m:mn>1</m:mn>

                                <m:mo>+</m:mo>

                                <m:mrow>
                                  <m:mi>cos</m:mi>

                                  <m:mo>⁡</m:mo>

                                  <m:mfenced>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mn>2</m:mn>

                                        <m:mo>⁢</m:mo>

                                        <m:mi>π</m:mi>
                                      </m:mrow>

                                      <m:mo>⁢</m:mo>

                                      <m:msub>
                                        <m:mi>δ</m:mi>

                                        <m:mi>f</m:mi>
                                      </m:msub>
                                    </m:mrow>
                                  </m:mfenced>
                                </m:mrow>
                              </m:mrow>

                              <m:mo>)</m:mo>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mi>k</m:mi>
                          </m:msub>

                          <m:mo>=</m:mo>

                          <m:mrow>
                            <m:mfrac>
                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mn>0</m:mn>
                                </m:msub>

                                <m:mo>+</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>

                              <m:mn>2</m:mn>
                            </m:mfrac>

                            <m:mo>*</m:mo>

                            <m:mrow>
                              <m:mi>cos</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mrow>
                                      <m:mn>2</m:mn>

                                      <m:mo>⁢</m:mo>

                                      <m:mi>π</m:mi>
                                    </m:mrow>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>k</m:mi>
                                  </m:mrow>

                                  <m:mo>/</m:mo>

                                  <m:mi>N</m:mi>
                                </m:mrow>
                              </m:mfenced>
                            </m:mrow>

                            <m:mo>+</m:mo>

                            <m:mfrac>
                              <m:mrow>
                                <m:msub>
                                  <m:mi>x</m:mi>

                                  <m:mn>0</m:mn>
                                </m:msub>

                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>

                              <m:mi>2</m:mi>
                            </m:mfrac>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>N is an odd integer:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>w</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>
                    </m:mrow>

                    <m:mtable>
                      <m:mtr>
                        <m:mtd>
                          <m:mrow>
                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>cosh</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mfrac>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mn>2</m:mn>
                                  </m:mfrac>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>cosh</m:mi>

                                      <m:mrow>
                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:msup>

                                    <m:mo>⁡</m:mo>

                                    <m:msub>
                                      <m:mi>x</m:mi>

                                      <m:mi>k</m:mi>
                                    </m:msub>
                                  </m:mrow>
                                </m:mrow>
                              </m:mfenced>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>|</m:mo>

                              <m:msub>
                                <m:mi>x</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>|</m:mo>
                            </m:mrow>

                            <m:mo>&gt;</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>

                          <m:mtext>,</m:mtext>

                          <m:mrow>
                            <m:mn>0</m:mn>

                            <m:mo>≤</m:mo>

                            <m:mi>k</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>
                        </m:mtd>
                      </m:mtr>

                      <m:mtr>
                        <m:mtd>
                          <m:mrow>
                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>cos</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mfrac>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mn>2</m:mn>
                                  </m:mfrac>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>cos</m:mi>

                                      <m:mrow>
                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:msup>

                                    <m:mo>⁡</m:mo>

                                    <m:msub>
                                      <m:mi>x</m:mi>

                                      <m:mi>k</m:mi>
                                    </m:msub>
                                  </m:mrow>
                                </m:mrow>
                              </m:mfenced>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>|</m:mo>

                              <m:msub>
                                <m:mi>x</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>|</m:mo>
                            </m:mrow>

                            <m:mo>≤</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>

                          <m:mtext>,</m:mtext>

                          <m:mrow>
                            <m:mn>0</m:mn>

                            <m:mo>≤</m:mo>

                            <m:mi>k</m:mi>

                            <m:mo>&lt;</m:mo>

                            <m:mi>N</m:mi>
                          </m:mrow>
                        </m:mtd>
                      </m:mtr>
                    </m:mtable>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>N is an even integer:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>w</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>
                    </m:mrow>

                    <m:mtable columnalign="left">
                      <m:mtr>
                        <m:mtd>
                          <m:mrow>
                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>cosh</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mfrac>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mn>2</m:mn>
                                  </m:mfrac>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>cosh</m:mi>

                                      <m:mrow>
                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:msup>

                                    <m:mo>⁡</m:mo>

                                    <m:msub>
                                      <m:mi>x</m:mi>

                                      <m:mi>k</m:mi>
                                    </m:msub>
                                  </m:mrow>
                                </m:mrow>
                              </m:mfenced>

                              <m:msup>
                                <m:mi>e</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>j</m:mi>

                                        <m:mo>⁢</m:mo>

                                        <m:mi>π</m:mi>
                                      </m:mrow>

                                      <m:mo>⁢</m:mo>

                                      <m:mi>k</m:mi>
                                    </m:mrow>

                                    <m:mo>/</m:mo>

                                    <m:mi>N</m:mi>
                                  </m:mrow>
                                </m:mrow>
                              </m:msup>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>|</m:mo>

                              <m:msub>
                                <m:mi>x</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>|</m:mo>
                            </m:mrow>

                            <m:mo>&gt;</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>

                          <m:mtext>,</m:mtext>

                          <m:mrow>
                            <m:mn>0</m:mn>

                            <m:mo>≤</m:mo>

                            <m:mi>k</m:mi>

                            <m:mo>≤</m:mo>

                            <m:mrow>
                              <m:mo>⌊</m:mo>

                              <m:mfrac>
                                <m:mi>N</m:mi>

                                <m:mi>2</m:mi>
                              </m:mfrac>

                              <m:mo>⌋</m:mo>
                            </m:mrow>
                          </m:mrow>
                        </m:mtd>
                      </m:mtr>

                      <m:mtr>
                        <m:mtd>
                          <m:mrow>
                            <m:mo>-</m:mo>

                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>cosh</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mfrac>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mn>2</m:mn>
                                  </m:mfrac>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>cosh</m:mi>

                                      <m:mrow>
                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:msup>

                                    <m:mo>⁡</m:mo>

                                    <m:msub>
                                      <m:mi>x</m:mi>

                                      <m:mi>k</m:mi>
                                    </m:msub>
                                  </m:mrow>
                                </m:mrow>
                              </m:mfenced>

                              <m:msup>
                                <m:mi>e</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>j</m:mi>

                                        <m:mo>⁢</m:mo>

                                        <m:mi>π</m:mi>
                                      </m:mrow>

                                      <m:mo>⁢</m:mo>

                                      <m:mi>k</m:mi>
                                    </m:mrow>

                                    <m:mo>/</m:mo>

                                    <m:mi>N</m:mi>
                                  </m:mrow>
                                </m:mrow>
                              </m:msup>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>|</m:mo>

                              <m:msub>
                                <m:mi>x</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>|</m:mo>
                            </m:mrow>

                            <m:mo>&gt;</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>

                          <m:mtext>,</m:mtext>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>⌊</m:mo>

                              <m:mfrac>
                                <m:mi>N</m:mi>

                                <m:mi>2</m:mi>
                              </m:mfrac>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>&lt;</m:mo>

                            <m:mi>k</m:mi>

                            <m:mo>≤</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mtd>
                      </m:mtr>

                      <m:mtr>
                        <m:mtd>
                          <m:mrow>
                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>cos</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mfrac>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mn>2</m:mn>
                                  </m:mfrac>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>cos</m:mi>

                                      <m:mrow>
                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:msup>

                                    <m:mo>⁡</m:mo>

                                    <m:msub>
                                      <m:mi>x</m:mi>

                                      <m:mi>k</m:mi>
                                    </m:msub>
                                  </m:mrow>
                                </m:mrow>
                              </m:mfenced>

                              <m:msup>
                                <m:mi>e</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>j</m:mi>

                                        <m:mo>⁢</m:mo>

                                        <m:mi>π</m:mi>
                                      </m:mrow>

                                      <m:mo>⁢</m:mo>

                                      <m:mi>k</m:mi>
                                    </m:mrow>

                                    <m:mo>/</m:mo>

                                    <m:mi>N</m:mi>
                                  </m:mrow>
                                </m:mrow>
                              </m:msup>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>|</m:mo>

                              <m:msub>
                                <m:mi>x</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>|</m:mo>
                            </m:mrow>

                            <m:mo>≤</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>

                          <m:mtext>,</m:mtext>

                          <m:mrow>
                            <m:mn>0</m:mn>

                            <m:mo>≤</m:mo>

                            <m:mi>k</m:mi>

                            <m:mo>≤</m:mo>

                            <m:mrow>
                              <m:mo>⌊</m:mo>

                              <m:mfrac>
                                <m:mi>N</m:mi>

                                <m:mi>2</m:mi>
                              </m:mfrac>

                              <m:mo>⌋</m:mo>
                            </m:mrow>
                          </m:mrow>
                        </m:mtd>
                      </m:mtr>

                      <m:mtr>
                        <m:mtd>
                          <m:mrow>
                            <m:mo>-</m:mo>

                            <m:msub>
                              <m:mi>δ</m:mi>

                              <m:mi>P</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:mrow>
                              <m:mi>cos</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:mfrac>
                                    <m:mrow>
                                      <m:mi>N</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mn>2</m:mn>
                                  </m:mfrac>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:msup>
                                      <m:mi>cos</m:mi>

                                      <m:mrow>
                                        <m:mo>-</m:mo>

                                        <m:mn>1</m:mn>
                                      </m:mrow>
                                    </m:msup>

                                    <m:mo>⁡</m:mo>

                                    <m:msub>
                                      <m:mi>x</m:mi>

                                      <m:mi>k</m:mi>
                                    </m:msub>
                                  </m:mrow>
                                </m:mrow>
                              </m:mfenced>

                              <m:msup>
                                <m:mi>e</m:mi>

                                <m:mrow>
                                  <m:mo>-</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mrow>
                                        <m:mi>j</m:mi>

                                        <m:mo>⁢</m:mo>

                                        <m:mi>π</m:mi>
                                      </m:mrow>

                                      <m:mo>⁢</m:mo>

                                      <m:mi>k</m:mi>
                                    </m:mrow>

                                    <m:mo>/</m:mo>

                                    <m:mi>N</m:mi>
                                  </m:mrow>
                                </m:mrow>
                              </m:msup>
                            </m:mrow>
                          </m:mrow>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>|</m:mo>

                              <m:msub>
                                <m:mi>x</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>|</m:mo>
                            </m:mrow>

                            <m:mo>≤</m:mo>

                            <m:mn>1</m:mn>
                          </m:mrow>

                          <m:mtext>,</m:mtext>

                          <m:mrow>
                            <m:mrow>
                              <m:mo>⌊</m:mo>

                              <m:mfrac>
                                <m:mi>N</m:mi>

                                <m:mi>2</m:mi>
                              </m:mfrac>

                              <m:mo>⌋</m:mo>
                            </m:mrow>

                            <m:mo>&lt;</m:mo>

                            <m:mi>k</m:mi>

                            <m:mo>≤</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mrow>
                        </m:mtd>
                      </m:mtr>
                    </m:mtable>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>w</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>k</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>W</m:mi>

                          <m:mi>K</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:msup>
                          <m:mi>e</m:mi>

                          <m:mrow>
                            <m:mo>-</m:mo>

                            <m:mfrac>
                              <m:mrow>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>j</m:mi>

                                      <m:mo>⁢</m:mo>

                                      <m:mn>2</m:mn>
                                    </m:mrow>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>π</m:mi>
                                  </m:mrow>

                                  <m:mo>⁢</m:mo>

                                  <m:mi>k</m:mi>
                                </m:mrow>

                                <m:mo>⁢</m:mo>

                                <m:mi>n</m:mi>
                              </m:mrow>

                              <m:mi>N</m:mi>
                            </m:mfrac>
                          </m:mrow>
                        </m:msup>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>(FFT of</m:mtext>

                  <m:msub>
                    <m:mi>W</m:mi>

                    <m:mi>k</m:mi>
                  </m:msub>

                  <m:mtext>)</m:mtext>
                </m:math>
              </inlineequation></para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>wind</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mi>Re</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:msub>
                                    <m:mover>
                                      <m:mi>w</m:mi>

                                      <m:mo form="postfix">^</m:mo>
                                    </m:mover>

                                    <m:mrow>
                                      <m:mi>k</m:mi>

                                      <m:mo>+</m:mo>

                                      <m:mrow>
                                        <m:mo>⌊</m:mo>

                                        <m:mfrac>
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌋</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:msub>

                                  <m:mo>/</m:mo>

                                  <m:msub>
                                    <m:mover>
                                      <m:mi>w</m:mi>

                                      <m:mo form="postfix">^</m:mo>
                                    </m:mover>

                                    <m:mn>0</m:mn>
                                  </m:msub>
                                </m:mrow>
                              </m:mfenced>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mn>0</m:mn>

                              <m:mo>≤</m:mo>

                              <m:mi>k</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac>
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mi>Re</m:mi>

                              <m:mo>⁡</m:mo>

                              <m:mfenced>
                                <m:mrow>
                                  <m:msub>
                                    <m:mover>
                                      <m:mi>w</m:mi>

                                      <m:mo form="postfix">^</m:mo>
                                    </m:mover>

                                    <m:mrow>
                                      <m:mi>k</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mrow>
                                        <m:mo>⌊</m:mo>

                                        <m:mfrac>
                                          <m:mi>N</m:mi>

                                          <m:mi>2</m:mi>
                                        </m:mfrac>

                                        <m:mo>⌋</m:mo>
                                      </m:mrow>
                                    </m:mrow>
                                  </m:msub>

                                  <m:mo>/</m:mo>

                                  <m:msub>
                                    <m:mover>
                                      <m:mi>w</m:mi>

                                      <m:mo form="postfix">^</m:mo>
                                    </m:mover>

                                    <m:mn>0</m:mn>
                                  </m:msub>
                                </m:mrow>
                              </m:mfenced>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mfrac>
                                  <m:mi>N</m:mi>

                                  <m:mi>2</m:mi>
                                </m:mfrac>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>≤</m:mo>

                              <m:mi>k</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mi>N</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>

                    <m:mtext>(Frequency swap of</m:mtext>

                    <m:msub>
                      <m:mi>w</m:mi>

                      <m:mi>n</m:mi>
                    </m:msub>

                    <m:mtext>)</m:mtext>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>This function returns a pointer to a real vector view
            object, or null if the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_vview_f *vsip_vcreate_cheby_f(vsip_length N, vsip_scalar_f ripple,
                                   vsip_memory_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of window vector</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ripple</term>

                <listitem>
                  <para>Window ripple in db (side-lobes are ripple db below
                  the main-lobe)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Memory type hints (Typically VSIP_MEM_CONST)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to the vector view object, or null on
            failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>N must be greater than zero.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_memory_hint</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <programlisting>#define N 256
#define RIPPLE 60.0 /* dB */
...
vsip_vview_sp cheby = vsip_vcreate_cheby_sp(N, RIPPLE, VSIP_MEM_CONST);
vsip_vview_sp x = vsip_vcreate_sp(N, VSIP_MEM_NONE);
...
/* window the data in x */
vsip_vmul_sp(x,cheby,x);
...
vsip_valldestroy_sp(cheby); vsip_valldestroy_sp(x);</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para>References for the Dolph-Chebyshev window are in the
            introduction to this clause.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="vcreate_hanning">
      <title>vsip_vcreate_hanning_<replaceable>f</replaceable></title>

      <para>Create a vector with Hanning window weights.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a vector initialized with a Hanning window of length
            N,</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>wind</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mfrac>
                        <m:mi>1</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⁢</m:mo>

                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>-</m:mo>

                          <m:mrow>
                            <m:mi>cos</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mfenced>
                              <m:mfrac>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mn>2</m:mn>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>π</m:mi>
                                  </m:mrow>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>k</m:mi>

                                      <m:mo>+</m:mo>

                                      <m:mn>1</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>
                                </m:mrow>

                                <m:mrow>
                                  <m:mi>N</m:mi>

                                  <m:mo>+</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:mfrac>
                            </m:mfenced>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, for k = 0, ..., N-1</para>

            <para>and returns a pointer to a real vector view object, or null
            if the create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_vview_f *vsip_vcreate_hanning_f(vsip_length N, vsip_memory_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Window length</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Memory type hints (Typically VSIP_MEM_CONST)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to the vector view object, or null on
            failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>N must be greater than zero.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the vsip_memory_hint
                enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>There are two different widely used definitions of the
            Hanning window. The other being:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>wind</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mfrac>
                        <m:mi>1</m:mi>

                        <m:mi>2</m:mi>
                      </m:mfrac>

                      <m:mo>⁢</m:mo>

                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>-</m:mo>

                          <m:mrow>
                            <m:mi>cos</m:mi>

                            <m:mo>⁡</m:mo>

                            <m:mfenced>
                              <m:mfrac>
                                <m:mrow>
                                  <m:mrow>
                                    <m:mn>2</m:mn>

                                    <m:mo>⁢</m:mo>

                                    <m:mi>π</m:mi>
                                  </m:mrow>

                                  <m:mo>⁢</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mi>k</m:mi>
                                    </m:mrow>
                                  </m:mrow>
                                </m:mrow>

                                <m:mrow>
                                  <m:mi>N</m:mi>

                                  <m:mo>-</m:mo>

                                  <m:mn>1</m:mn>
                                </m:mrow>
                              </m:mfrac>
                            </m:mfenced>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, for k = 0, ..., N-1</para>

            <para>This form has a weight of zero for both end points of the
            window; we use the form that does not have zero end points.</para>

            <para>If you want the window to be periodic of length N, you must
            generate a Hanning window of length N –1, copy it to a vector view
            of length N, and set the last point to 0.0.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <programlisting>#define N 256
...
vsip_vview_sp hanning = vsip_vcreate_hanning_sp(N, VSIP_MEM_CONST);
vsip_vview_sp x = vsip_vcreate(N, VSIP_MEM_NONE);
...
/* window the data in x */
vsip_vmul_sp(x,hanning,x);
...
vsip_valldestroy_sp(hanning); vsip_valldestroy_sp(x);</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="vcreate_kaiser">
      <title>vsip_vcreate_kaiser_<replaceable>f</replaceable></title>

      <para>Create a vector with Kaiser window weights.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a vector initialized with a Kaiser window of length
            N,</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>wind</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:mrow>
                            <m:msub>
                              <m:mi>I</m:mi>

                              <m:mn>0</m:mn>
                            </m:msub>

                            <m:mo>⁡</m:mo>

                            <m:mfenced close="]" open="[">
                              <m:mrow>
                                <m:mi>β</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:msqrt>
                                  <m:mrow>
                                    <m:mn>1</m:mn>

                                    <m:mo>-</m:mo>

                                    <m:msup>
                                      <m:mrow>
                                        <m:mo>(</m:mo>

                                        <m:mfrac>
                                          <m:mrow>
                                            <m:mrow>
                                              <m:mn>2</m:mn>

                                              <m:mo>⁢</m:mo>

                                              <m:mi>k</m:mi>
                                            </m:mrow>

                                            <m:mo>-</m:mo>

                                            <m:mrow>
                                              <m:mo>(</m:mo>

                                              <m:mrow>
                                                <m:mi>N</m:mi>

                                                <m:mo>-</m:mo>

                                                <m:mn>1</m:mn>
                                              </m:mrow>

                                              <m:mo>)</m:mo>
                                            </m:mrow>
                                          </m:mrow>

                                          <m:mrow>
                                            <m:mi>N</m:mi>

                                            <m:mo>-</m:mo>

                                            <m:mn>1</m:mn>
                                          </m:mrow>
                                        </m:mfrac>

                                        <m:mo>)</m:mo>
                                      </m:mrow>

                                      <m:mn>2</m:mn>
                                    </m:msup>
                                  </m:mrow>
                                </m:msqrt>
                              </m:mrow>
                            </m:mfenced>
                          </m:mrow>
                        </m:mrow>
                      </m:mrow>

                      <m:mrow>
                        <m:msub>
                          <m:mi>I</m:mi>

                          <m:mn>0</m:mn>
                        </m:msub>

                        <m:mo>⁡</m:mo>

                        <m:mfenced close="]" open="[">
                          <m:mi>β</m:mi>
                        </m:mfenced>
                      </m:mrow>
                    </m:mfrac>
                  </m:mrow>
                </m:math>
              </inlineequation>, for k = 0, ..., N-1</para>

            <para>where</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:msub>
                        <m:mi>I</m:mi>

                        <m:mn>0</m:mn>
                      </m:msub>

                      <m:mo>⁡</m:mo>

                      <m:mfenced close="]" open="[">
                        <m:mi>x</m:mi>
                      </m:mfenced>
                    </m:mrow>

                    <m:mo>=</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>p</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mi mathvariant="normal">∞</m:mi>
                      </m:munderover>

                      <m:msup>
                        <m:mrow>
                          <m:mo>(</m:mo>

                          <m:mfrac>
                            <m:msup>
                              <m:mi>x</m:mi>

                              <m:mi>p</m:mi>
                            </m:msup>

                            <m:mrow>
                              <m:msup>
                                <m:mn>2</m:mn>

                                <m:mi>p</m:mi>
                              </m:msup>

                              <m:mo>⁢</m:mo>

                              <m:mi>p</m:mi>

                              <m:mo>!</m:mo>
                            </m:mrow>
                          </m:mfrac>

                          <m:mo>)</m:mo>
                        </m:mrow>

                        <m:mn>2</m:mn>
                      </m:msup>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>This function returns a pointer to a real vector view
            object, or null if the create fails. Increasing # widens the
            main-lobe (transition width) and reduces the side-lobes.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_vview_f *vsip_vcreate_kaiser_f(vsip_length N, vsip_scalar_f beta,
                                    vsip_memory_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of window vector</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>beta</term>

                <listitem>
                  <para>Real scalar, transition width parameter</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Memory type hints (Typically VSIP_MEM_CONST)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to the vector view object, or null on
            failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>N must be greater than zero.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the vsip_memory_hint
                enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <programlisting>#define N 256
#define BETA 0.4
...
vsip_vview_sp kaiser = vsip_vcreate_kaiser_sp(N, BETA, VSIP_MEM_CONST);
vsip_vview_sp x = vsip_vcreate_sp(N, VSIP_MEM_NONE);
...
/* window the data in x */
vsip_vmul_sp(x,kaiser,x);
...
vsip_valldestroy_sp(kaiser); vsip_valldestroy_sp(x);</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Filter Functions</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry><function>vsip_dfir_create_f</function></entry>

            <entry>Create Decimated FIR Filter</entry>
          </row>

          <row>
            <entry><function>vsip_dfir_destroy_f</function></entry>

            <entry>Destroy FIR Filter Object</entry>
          </row>

          <row>
            <entry><function>vsip_dfirflt_f</function></entry>

            <entry>Decimated FIR Filter</entry>
          </row>

          <row>
            <entry><function>vsip_dfir_getattr_f</function></entry>

            <entry>FIR Get Attributes</entry>
          </row>

          <row>
            <entry><function>vsip_dfir_reset_f</function></entry>

            <entry>Reset FIR Filter Object to Initial State</entry>
          </row>

          <row>
            <entry><function>vsip_diir_create_f</function></entry>

            <entry>Create Cascaded IIR Filter</entry>
          </row>

          <row>
            <entry><function>vsip_diir_destroy_f</function></entry>

            <entry>Destroy IIR Filter Object</entry>
          </row>

          <row>
            <entry><function>vsip_diirflt_f</function></entry>

            <entry>Cascaded IIR Filter</entry>
          </row>

          <row>
            <entry><function>vsip_diir_getattr_f</function></entry>

            <entry>Get IIR Attributes</entry>
          </row>

          <row>
            <entry><function>vsip_diir_reset_f</function></entry>

            <entry>Reset IIR Filter Object to Initial State</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="dfir_create">
      <title>vsip_<replaceable>d</replaceable>fir_create_<replaceable>f</replaceable></title>

      <para>Create a decimated FIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a decimated FIR filter object and returns a pointer
            to the object. The user specifies the kernel (filter coefficients
            and filter order), the integral output decimation factor, D, and
            the length of input segments (vectors) that will be filtered. The
            user also provides portable information on how to optimize the
            filter:</para>

            <orderedlist>
              <listitem>
                <para>the number of segments to be filtered (e.g. 1, 16,
                etc.),</para>
              </listitem>

              <listitem>
                <para>hints on what to optimize, and</para>
              </listitem>

              <listitem>
                <para>if the filter will save state information for continuous
                filtering.</para>
              </listitem>
            </orderedlist>

            <para>If the create fails, null is returned.</para>

            <para>If requested the FIR filter object also encapsulates the
            filter’s state information. The state is initialized to zero. The
            filter state allows long (semi-infinite) data streams to be
            processed in segments by successive calls to
            <function>vsip_dfirflt_f</function>.</para>

            <para>Given a filter kernel of order M with coefficients
            h<footnote>
                <para>There are M+1 coefficients for an M order filter.</para>
              </footnote>, the segment length is N, and the decimation factor
            is D. The decimated output y, is of length <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>⌈</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mi>p</m:mi>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>
                    </m:mrow>

                    <m:mo>⌉</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation>.</para>

            <para>The following is an example of how a FIR may be done. The
            actual method used is vendor dependent and must only supply the
            same functionality.</para>

            <para>A FIR filter object is used to compute:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>y</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:munderover>
                        <m:mo>∑</m:mo>

                        <m:mrow>
                          <m:mi>i</m:mi>

                          <m:mo>=</m:mo>

                          <m:mn>0</m:mn>
                        </m:mrow>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>-</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:munderover>

                      <m:mrow>
                        <m:msub>
                          <m:mi>h</m:mi>

                          <m:mi>i</m:mi>
                        </m:msub>

                        <m:mo>⁢</m:mo>

                        <m:msub>
                          <m:mover>
                            <m:mi>x</m:mi>

                            <m:mo form="postfix">^</m:mo>
                          </m:mover>

                          <m:mrow>
                            <m:mrow>
                              <m:mi>p</m:mi>

                              <m:mo>+</m:mo>

                              <m:mrow>
                                <m:mi>k</m:mi>

                                <m:mo>⁢</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>
                            </m:mrow>

                            <m:mo>-</m:mo>

                            <m:mi>i</m:mi>
                          </m:mrow>
                        </m:msub>
                      </m:mrow>
                    </m:mrow>
                  </m:mrow>

                  <m:mtext>, for k = 0, ...,</m:mtext>

                  <m:mrow>
                    <m:mo>⌈</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>-</m:mo>

                          <m:mi>p</m:mi>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mi>D</m:mi>
                    </m:mrow>

                    <m:mo>⌉</m:mo>
                  </m:mrow>

                  <m:mo>-</m:mo>

                  <m:mn>1</m:mn>
                </m:math>
              </inlineequation></para>

            <para>Where:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mover>
                        <m:mi>x</m:mi>

                        <m:mo form="postfix">^</m:mo>
                      </m:mover>

                      <m:mi>j</m:mi>
                    </m:msub>

                    <m:mo>≡</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>{</m:mo>
                      </m:mrow>

                      <m:mtable>
                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>x</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>j</m:mi>

                              <m:mo>≥</m:mo>

                              <m:mi>0</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:msub>
                              <m:mi>s</m:mi>

                              <m:mi>j</m:mi>
                            </m:msub>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>j</m:mi>

                              <m:mo>&lt;</m:mo>

                              <m:mn>0</m:mn>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>Final conditions, s and p, are private internal state
            information.</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable>
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>s</m:mi>

                            <m:mi>j</m:mi>
                          </m:msub>

                          <m:mo>←</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>+</m:mo>

                              <m:mi>j</m:mi>
                            </m:mrow>
                          </m:msub>
                        </m:mrow>

                        <m:mtext>, for j = -1, -2, ..., -M</m:mtext>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:mi>p</m:mi>

                          <m:mo>←</m:mo>

                          <m:mrow>
                            <m:mrow>
                              <m:mi>D</m:mi>

                              <m:mo>-</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>

                            <m:mo>-</m:mo>

                            <m:mrow>
                              <m:mo>[</m:mo>

                              <m:mrow>
                                <m:mo>(</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mi>N</m:mi>

                                    <m:mo>-</m:mo>

                                    <m:mn>1</m:mn>
                                  </m:mrow>

                                  <m:mo>-</m:mo>

                                  <m:mi>p</m:mi>
                                </m:mrow>

                                <m:mo>)</m:mo>

                                <m:mo>mod</m:mo>

                                <m:mi>D</m:mi>
                              </m:mrow>

                              <m:mo>]</m:mo>
                            </m:mrow>
                          </m:mrow>
                        </m:mrow>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>When the FIR filter object is created, s and p are
            initialized to zeros. If the save state option is not selected,
            then s and p will remain initialized to zero.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_fir_f *vsip_fir_create_f(const vsip_vview_f *kernel, vsip_symmetry symm,
                              vsip_length N, vsip_length D,
                              vsip_obj_state state,
                              vsip_length ntimes, vsip_alg_hint hint);
vsip_rcfir_f *vsip_rcfir_create_f(const vsip_vview_f *kernel, vsip_symmetry symm,
                                  vsip_length N, vsip_length D,
                                  vsip_obj_state state,
                                  vsip_length ntimes, vsip_alg_hint hint);
vsip_cfir_f *vsip_cfir_create_f(const vsip_cvview_f *kernel, vsip_symmetry symm,
                                vsip_length N, vsip_length D,
                                vsip_obj_state state, 
                                vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>kernel</term>

                <listitem>
                  <para>Pointer to vector view object of non-redundant FIR
                  filter coefficients,</para>

                  <itemizedlist>
                    <listitem>
                      <para>non-symmetric: length M+1</para>
                    </listitem>

                    <listitem>
                      <para>(conjugate) symmetric: length <inlineequation>
                          <m:math display="inline">
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌈</m:mo>

                                <m:mrow>
                                  <m:mi>(M</m:mi>

                                  <m:mo>+</m:mo>

                                  <m:mn>1)</m:mn>
                                </m:mrow>
                              </m:mrow>

                              <m:mo>/</m:mo>

                              <m:mn>2</m:mn>
                            </m:mrow>

                            <m:mo>⌉</m:mo>
                          </m:math>
                        </inlineequation></para>
                    </listitem>
                  </itemizedlist>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>symm</term>

                <listitem>
                  <para>Kernel symmetry, including length symmetry {even,
                  odd}</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of input data segment</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>D</term>

                <listitem>
                  <para>Decimation factor</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>state</term>

                <listitem>
                  <para>Object state history requirement. If the object is
                  going to be used to filter more than one vector set to
                  <constant>VSIP_STATE_SAVE</constant>. If the object is going
                  to be used for single call filtering set state to
                  <constant>VSIP_STATE_NO_SAVE</constant>.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate of how many segments will be filtered. A
                  value of zero is treated as semi-infinite (a lot of
                  times).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine algorithm approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to an FIR filter object, or null if the
            create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>The decimation factor must be less than or equal to the
            filter length.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>kernel must be a pointer to a valid vector view
                object.</para>
              </listitem>

              <listitem>
                <para>symm must be a valid member of the
                <type>vsip_symmetry</type> enumeration.</para>
              </listitem>

              <listitem>
                <para><inlineequation>
                    <m:math display="inline">
                      <m:mrow>
                        <m:mi>N</m:mi>

                        <m:mo>≥</m:mo>

                        <m:mi>M</m:mi>
                      </m:mrow>
                    </m:math>
                  </inlineequation> (see kernel above).</para>
              </listitem>

              <listitem>
                <para><inlineequation>
                    <m:math display="inline">
                      <m:mrow>
                        <m:mn>1</m:mn>

                        <m:mo>≤</m:mo>

                        <m:mi>D</m:mi>

                        <m:mo>≤</m:mo>

                        <m:mi>M</m:mi>
                      </m:mrow>
                    </m:math>
                  </inlineequation>.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>state must be a valid member of the vsip_obj_state
                enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>For non-lowpass filters, D = 1 should be specified.</para>

            <para>It is important that the kernel vector be only as long as
            defined under Arguments; i.e., the symmetric values of the filter
            between the kernel’s center and its last value are not to be
            included in the kernel.</para>

            <para>It is safe to destroy the kernel after creating the FIR
            filter object. [Note to implementors: the FIR object is required
            to encapsulate the information in the kernel, but is not required
            to encapsulate the data values of the kernel.]</para>

            <para>The parameter ntimes in conjunction with the hint may be
            used (at the implementor’s discretion) to pre-compute or optimize
            the FIR filter based on this information. This may include, but is
            not limited to, converting the kernel to the frequency domain for
            fast convolution. Ideally the implementation uses a-priori time
            and space information with ntimes to optimize the FIR filter
            object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints are:</para>

            <orderedlist>
              <listitem>
                <para>Minimize total filtering execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the filtering total memory requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </orderedlist>

            <para>Only one hint may be specified.</para>

            <para>[Notes to Implementors: If minimum execution time is the
            goal, both direct and frequency domain fast convolution should be
            examined to determine the fastest method and the ideal FFT size
            for fast convolution. Decimation can be implemented with frequency
            domain fast convolution by using the equivalent poly-phase filter
            form. The direct time domain method uses minimal space.]</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfirflt_<replaceable>f</replaceable></function>,
            and
            <function>vsip_dfir_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfir_destroy">
      <title>vsip_<replaceable>d</replaceable>fir_destroy_<replaceable>f</replaceable></title>

      <para>Destroy a FIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys a FIR filter object freeing the associated memory.
            Returns non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>int vsip_fir_destroy_f(vsip_fir_f *filt);
int vsip_rcfir_destroy_f(vsip_rcfir_f *filt);
int vsip_cfir_destroy_f(vsip_cfir_f *filt);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to a FIR filter object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The FIR filter object must be valid. An argument of null
                is not an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>

            <para>[Implementors Note: a FIR filter object may also reference
            shared information such as a private FFT object. The shared object
            must maintain sufficient information to determine when it is
            possible to delete this shared information.]</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfirflt">
      <title>vsip_<replaceable>d</replaceable>firflt_<replaceable>f</replaceable></title>

      <para>FIR filter an input sequence and decimate the output.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Applies a FIR filter, specified by the FIR filter object to
            an input segment x, and computes a decimated output segment y.
            Initial and final filter state is encapsulated in the FIR filter
            object. Long data streams can be processed in segments by
            successive calls to <function>vsip_dfirflt_f</function>.</para>

            <informaltable>
              <tgroup cols="3">
                <thead>
                  <row>
                    <entry align="center">Case</entry>

                    <entry align="center">Number of Output Samples</entry>

                    <entry align="center">Length of y</entry>
                  </row>
                </thead>

                <tbody>
                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mi>N mod D = 0</m:mi>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>/</m:mo>

                            <m:mi>D</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mi>N</m:mi>

                            <m:mo>/</m:mo>

                            <m:mi>D</m:mi>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>

                  <row>
                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mi>N mod D = 0</m:mi>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mo>⌊</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>
                            </m:mrow>

                            <m:mo>⌋</m:mo>
                          </m:mrow>

                          <m:mtext>or</m:mtext>

                          <m:mrow>
                            <m:mo>⌈</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>
                            </m:mrow>

                            <m:mo>⌉</m:mo>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>

                    <entry><inlineequation>
                        <m:math display="inline">
                          <m:mrow>
                            <m:mo>⌈</m:mo>

                            <m:mrow>
                              <m:mi>N</m:mi>

                              <m:mo>/</m:mo>

                              <m:mi>D</m:mi>
                            </m:mrow>

                            <m:mo>⌉</m:mo>
                          </m:mrow>
                        </m:math>
                      </inlineequation></entry>
                  </row>
                </tbody>
              </tgroup>
            </informaltable>

            <para>The return value is the number of output samples computed.
            When <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mrow>
                      <m:mo>⌊</m:mo>

                      <m:mrow>
                        <m:mi>N</m:mi>

                        <m:mo>/</m:mo>

                        <m:mi>D</m:mi>
                      </m:mrow>

                      <m:mo>⌋</m:mo>
                    </m:mrow>

                    <m:mo>≠</m:mo>

                    <m:mrow>
                      <m:mo>⌈</m:mo>

                      <m:mrow>
                        <m:mi>N</m:mi>

                        <m:mo>/</m:mo>

                        <m:mi>D</m:mi>
                      </m:mrow>

                      <m:mo>⌉</m:mo>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation>, the output vector y will not be fully
            populated for every invocation.</para>

            <para>N and D are determined by the creation of the FIR filter
            object.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>int vsip_firflt_f(vsip_fir_f *filt, 
                  const vsip_vview_f *x, const vsip_vview_f *y);
int vsip_rcfirflt_f(vsip_rcfir_f *filt, 
                    const vsip_cvview_f *x, const vsip_cvview_f *y);
int vsip_cfirflt_f(vsip_cfir_f *filt,
                   const vsip_cvview_f *x, const vsip_cvview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to FIR filter object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Pointer to input sequence (vector view object)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>Pointer to output sequence (vector view object)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>The return value is the number of output samples
            computed.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Filtering can not be performed in place.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The FIR filter object must be valid.</para>
              </listitem>

              <listitem>
                <para>The x input vector view must be of length N (conformant
                with the FIR filter object).</para>
              </listitem>

              <listitem>
                <para>The y output vector view must be of length
                <inlineequation>
                    <m:math display="inline">
                      <m:mrow>
                        <m:mo>⌈</m:mo>

                        <m:mrow>
                          <m:mi>N</m:mi>

                          <m:mo>/</m:mo>

                          <m:mi>D</m:mi>
                        </m:mrow>

                        <m:mo>⌉</m:mo>
                      </m:mrow>
                    </m:math>
                  </inlineequation> (conformant with the FIR filter
                object).</para>
              </listitem>

              <listitem>
                <para>The input x, and the output y, must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The filter object is not “const” since it is modified with
            the updated state.</para>

            <para>Note that <function>vsip_rcfirflt_f</function> implies a
            real filter applied to a complex vector.</para>

            <para>[Note to Implementors: The final conditions, s and p, are
            abstractions and need not explicitly exist. Implementations are
            only required to correctly handle the filter state to support
            segment based filtering.]</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para>Codelet to continuously filter data in segments of 1000
            samples. Data comes from external source via a “ping-pong”
            buffer.</para>

            <programlisting>#include &lt;vsip.h&gt;

#define FOREVER 0
#define N 1000      /* Segment is 1000 samples */
#define N2 (N/2)
#define M 17        /* Filter order is 16 */
#define M2 ((M+1)/2)
extern const volatile vsip_scalar_f *buf_ping, *buf_pong;
float usr_kernel[M2] = {-0.0440,-0.0359,0.0507,0.0304,
                        -0.0364,-0.0965,0.0529,0.3092,0.4536};

/* Low pass half band filter kernel coefficients (symmetric, order 16):
 * -0.0440,-0.0359,0.0507,0.0304,-0.0364,-0.0965,0.0529,0.3092,
 * 0.4536,0.3092,0.0529,-0.0965,-0.0364,0.0304,0.0507,-0.0359,-0.0440 */
int pingpong = 0;
vsip_block_f* buf_blk = vsip_blockbind_f(buf_ping, N, VSIP_MEM_NONE);
vsip_vview_f* flt_in = vsip_vbind_f(buf_blk,0U,1,(vsip_length)N);
vsip_block_f *kblk = vsip_blockbind_f(usr_kernel, M2, VSIP_MEM_RDONLY);
vsip_vview_f *kernel = vsip_vbind_f(kblk,0U,1,(vsip_length)M2);
vsip_vview_f *flt_out = vsip_vcreate_f((vsip_length)N2, VSIP_MEM_NONE);
vsip_fir_f *lowpass;
vsip_blockadmit_f(kblk,VSIP_TRUE);
/* Create lowpass filter: segment length N, decimate by 2
 * filter is linear phase (symmetric) with odd number of coefficients */
lowpass = vsip_fir_create_f(kernel,VSIP_SYM_EVEN_LEN_ODD,N,2, FOREVER,VSIP_ALG_TIME);
while{1) 
{
  /* Wait until data ready in buf_ping (buf_pong) */
  wait_until_data_ready();
  pingpong = !pingpong;
  /* Release buf_pong (buf_ping) */
  vsip_blockrelease_f(buf_blk,VSIP_FALSE);
  /* Start DMA of next data frame into buf_pong (buf_ping) */
  /* Rebind and admit buf_ping (buf_pong) */
  dma_write((vsip_blockrebind_f(buf_blk, (pingpong ? buf_ping : buf_pong)));
  vsip_blockadmit_f(buf_blk, VSIP_TRUE);
  /* Continuously filter and decimate in segments */
  n = vsip_firflt_f(lowpass, buf, flt_out);
  /* Do some more processing with the decimated filter output */
  ...
}</programlisting>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_dfirflt_f</function>, and
            <function>vsip_dfir_destroy_f</function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfir_getattr">
      <title>vsip_<replaceable>d</replaceable>fir_getattr_<replaceable>f</replaceable></title>

      <para>Return the attributes of an FIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attribute values of a FIR filter object in
            structure passed by reference. The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>filter kernel length, M +1</para>
              </listitem>

              <listitem>
                <para>kernel symmetry,</para>
              </listitem>

              <listitem>
                <para>required length of an input segment (vector
                view),</para>
              </listitem>

              <listitem>
                <para>required length of an output segment (vector view),
                <inlineequation>
                    <m:math display="inline">
                      <m:mrow>
                        <m:mrow>
                          <m:mo>⌈</m:mo>

                          <m:mrow>
                            <m:mi>in_len</m:mi>

                            <m:mo>/</m:mo>

                            <m:mi>D</m:mi>
                          </m:mrow>

                          <m:mo>⌉</m:mo>
                        </m:mrow>
                      </m:mrow>
                    </m:math>
                  </inlineequation></para>
              </listitem>

              <listitem>
                <para>output decimation factor,</para>
              </listitem>

              <listitem>
                <para>save state object.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef struct 
{
  vsip_scalar_vi kernel_len;
  vsip_symmetry symm;
  vsip_scalar_vi in_len;
  vsip_scalar_vi out_len;
  vsip_length decimation;
  vsip_obj_state state;
} vsip_fir_attr_f;
typedef struct 
{
  vsip_scalar_vi kernel_len;
  vsip_symmetry symm;
  vsip_scalar_vi in_len;
  vsip_scalar_vi out_len;
  vsip_length decimation;
  vsip_obj_state state;
} vsip_rcfir_attr_f;
typedef struct 
{
  vsip_scalar_vi kernel_len;
  vsip_symmetry symm;
  vsip_scalar_vi in_len;
  vsip_scalar_vi out_len;
  vsip_length decimation;
  vsip_obj_state state;
} vsip_cfir_attr_f;

void vsip_fir_getattr_f(const vsip_fir_f *filt, vsip_fir_attr_f *attr);
void vsip_rcfir_getattr_f(const vsip_rcfir_f *filt, vsip_rcfir_attr_f *attr);
void vsip_cfir_getattr_f(const vsip_cfir_f *filt, vsip_cfir_attr_f *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to a FIR filter object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to a
                  <function>vsip_<replaceable>d</replaceable>fir_attr_<replaceable>f</replaceable></function>
                  structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The filter object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The filter coefficient values are not accessible
            attributes.</para>

            <para>For a symmetric kernel, the filter kernel length, M + 1, is
            not the length of the vector view, <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mo>⌈</m:mo>

                    <m:mrow>
                      <m:mrow>
                        <m:mo>(</m:mo>

                        <m:mrow>
                          <m:mi>M</m:mi>

                          <m:mo>+</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>

                        <m:mo>)</m:mo>
                      </m:mrow>

                      <m:mo>/</m:mo>

                      <m:mn>2</m:mn>
                    </m:mrow>

                    <m:mo>⌉</m:mo>
                  </m:mrow>
                </m:math>
              </inlineequation> .</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fir_create_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="dfir_reset">
      <title>vsip_<replaceable>d</replaceable>fir_reset_<replaceable>f</replaceable></title>

      <para>Reset the state of a decimated FIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Resets the internal state of a previously created FIR filter
            object to the same state it would have immediately after
            creation.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_fir_reset_f(vsip_fir_f *filt);
void vsip_rcfir_reset_f(vsip_rcfir_f *filt);
void vsip_cfir_reset_f(vsip_cfir_f *filt);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to the FIR filter object to be reset</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The filter object must be valid.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>fir_create_<replaceable>f</replaceable></function>,
            <function>vsip_<replaceable>d</replaceable>firflt_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="diir_create">
      <title>vsip_<replaceable>d</replaceable>iir_create_<replaceable>f</replaceable></title>

      <para>Create a cascaded IIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Creates a cascaded 2nd order section IIR filter object, of
            order <inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:mn>2</m:mn>

                    <m:mo>⁢</m:mo>

                    <m:mi>M</m:mi>
                  </m:mrow>
                </m:math>
              </inlineequation>, and return a pointer to the object. The
            filter transfer function is:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:munderover>
                      <m:mo>∏</m:mo>

                      <m:mrow>
                        <m:mi>k</m:mi>

                        <m:mo>=</m:mo>

                        <m:mn>0</m:mn>
                      </m:mrow>

                      <m:mrow>
                        <m:mi>M</m:mi>

                        <m:mo>-</m:mo>

                        <m:mn>1</m:mn>
                      </m:mrow>
                    </m:munderover>

                    <m:mfrac>
                      <m:mrow>
                        <m:mrow>
                          <m:msub>
                            <m:mi>b</m:mi>

                            <m:mi>k,0</m:mi>
                          </m:msub>

                          <m:mo>+</m:mo>

                          <m:mrow>
                            <m:msub>
                              <m:mi>b</m:mi>

                              <m:mi>k,1</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:msup>
                              <m:mi>z</m:mi>

                              <m:mrow>
                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:msup>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:msub>
                            <m:mi>b</m:mi>

                            <m:mi>k,2</m:mi>
                          </m:msub>

                          <m:mo>⁢</m:mo>

                          <m:msup>
                            <m:mi>z</m:mi>

                            <m:mrow>
                              <m:mo>-</m:mo>

                              <m:mn>2</m:mn>
                            </m:mrow>
                          </m:msup>
                        </m:mrow>
                      </m:mrow>

                      <m:mrow>
                        <m:mrow>
                          <m:mn>1</m:mn>

                          <m:mo>+</m:mo>

                          <m:mrow>
                            <m:msub>
                              <m:mi>a</m:mi>

                              <m:mi>k,0</m:mi>
                            </m:msub>

                            <m:mo>⁢</m:mo>

                            <m:msup>
                              <m:mi>z</m:mi>

                              <m:mrow>
                                <m:mo>-</m:mo>

                                <m:mn>1</m:mn>
                              </m:mrow>
                            </m:msup>
                          </m:mrow>
                        </m:mrow>

                        <m:mo>+</m:mo>

                        <m:mrow>
                          <m:msub>
                            <m:mi>a</m:mi>

                            <m:mi>k,1</m:mi>
                          </m:msub>

                          <m:mo>⁢</m:mo>

                          <m:msup>
                            <m:mi>z</m:mi>

                            <m:mrow>
                              <m:mo>-</m:mo>

                              <m:mn>2</m:mn>
                            </m:mrow>
                          </m:msup>
                        </m:mrow>
                      </m:mrow>
                    </m:mfrac>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>For an order 2,M filter, the numerator coefficients, B, are
            passed as an M by 3 matrix view object, and the denominator
            coefficients, A, are passed as an M by 2 matrix view object.
            Second order sections are applied in matrix row order.</para>

            <para>The IIR filter object also encapsulates the filter’s state
            information if the save state input object is set to
            <constant>VSIP_STATE_SAVE</constant>. The state is initialized to
            zero. The filter state allows long (semi- infinite) data streams
            to be processed in segments by successive calls to
            <function>vsip_diirflt_f</function>. If it is desired that the
            filter not save state information then the state object is set to
            <constant>VSIP_STATE_NO_SAVE</constant>.</para>

            <para>If the create fails, null is returned, otherwise a pointer
            to the IIR filter object is returned.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>vsip_iir_f *vsip_iir_create_f(const vsip_mview_f *B, const vsip_mview_f *A,
                              vsip_length N, vsip_obj_state state,
                              vsip_length ntimes, vsip_alg_hint hint);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>B</term>

                <listitem>
                  <para>Pointer to a matrix view object of IIR filter
                  numerator coefficients, M by 3</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>A</term>

                <listitem>
                  <para>Pointer to a matrix view object of IIR filter
                  denominator coefficients, M by 2</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>N</term>

                <listitem>
                  <para>Length of data segment</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>state</term>

                <listitem>
                  <para>Object state history requirement. If the object is
                  going to be used to filter more than one vector set to
                  <constant>VSIP_STATE_SAVE</constant>. If the object is going
                  to be used for single call filtering, set state to
                  <constant>VSIP_STATE_NO_SAVE</constant>.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>ntimes</term>

                <listitem>
                  <para>Estimate of how many segments will be filtered. A
                  value of zero is treated as semi-infinite (a lot of
                  times).</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hint</term>

                <listitem>
                  <para>Hint to help determine algorithm approach.</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns a pointer to an IIR filter object, or null if the
            create fails.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All objects must be valid.</para>
              </listitem>

              <listitem>
                <para>B matrix of size M by 3.</para>
              </listitem>

              <listitem>
                <para>A matrix of size M by 2.</para>
              </listitem>

              <listitem>
                <para>N must be greater than or equal to 2,M.</para>
              </listitem>

              <listitem>
                <para>hint must be a valid member of the
                <type>vsip_alg_hint</type> enumeration.</para>
              </listitem>

              <listitem>
                <para>state must be a valid member of the
                <type>vsip_obj_state</type> enumeration.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>It is safe to destroy the filter coefficient matrices after
            creating the IIR filter object. [Note to implementors: the IIR
            object is required to encapsulate the information in the filter
            coefficient matrices, but is not required to encapsulate the data
            values of the filter coefficient matrices.]</para>

            <para>The parameter ntimes in conjunction with the hint is used
            (at the implementor’s discretion) to pre-compute or optimize the
            IIR filter based on this information. Ideally the implementation
            uses a-priori time and space information with ntimes to optimize
            the IIR filter object to meet the user’s hint.</para>

            <para>Hints are just that. Implementations are free to ignore them
            and it is up to the implementor to determine the precise effect of
            the hints. However, the spirit of the hints are:</para>

            <orderedlist>
              <listitem>
                <para>Minimize total filtering execution time.</para>
              </listitem>

              <listitem>
                <para>Minimize the filtering total memory requirements.</para>
              </listitem>

              <listitem>
                <para>Maximize numeric accuracy/stability (minimize numeric
                noise).</para>
              </listitem>
            </orderedlist>

            <para>Only one hint may be specified.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_diirflt_<replaceable>f</replaceable></function>,
            and
            <function>vsip_diir_destroy_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="diir_destroy">
      <title>vsip_<replaceable>d</replaceable>iir_destroy_<replaceable>f</replaceable></title>

      <para>Destroy a IIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Destroys a IIR filter object freeing the associated memory.
            Returns non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>int vsip_iir_destroy_f(vsip_fir_f *filt);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to a FIR filter object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>Returns zero on success and non-zero on failure.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The filter object must be valid. An argument of null is
                not an error.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>An argument of null is not an error.</para>

            <para>Note to Implementors: an IIR filter object may also
            reference shared information/object(s). The shared object(s) must
            maintain sufficient information to determine when it is possible
            to delete this shared information.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_diir_create_f</function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="diirflt">
      <title>vsip_<replaceable>d</replaceable>iirflt_<replaceable>f</replaceable></title>

      <para>IIR filter an input sequence.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Applies a cascaded 2nd order section IIR filter object, of
            order 2,M, specified by the IIR filter object to an input segment
            x, and compute an output segment y. Initial and final filter state
            is encapsulated in the IIR filter object if VSIP_STATE_SAVE was
            selected when the filter object was created so that long data
            streams can be processed in segments by successive calls to
            vsip_diirflt_f. If VSIP_STATE_NO_SAVE was selected when the filter
            object was created, then each call will filter the input into the
            output without state information from any previous call.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_iirflt_f(vsip_iir_f *filt, const vsip_vview_f *x, const vsip_vview_f *y);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to IIR filter object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Pointer to input sequence (vector view object)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>y</term>

                <listitem>
                  <para>Pointer to output sequence (vector view object)</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para>Filtering cannot be performed in place.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All the objects must be valid.</para>
              </listitem>

              <listitem>
                <para>The x input, and y output vectors must be of length
                N.</para>
              </listitem>

              <listitem>
                <para>The input x, and the output y, must not overlap.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The filter object is not “const” since it may be modified
            with the updated state.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_diir_create_f</function>, and
            <function>vsip_diir_destroy_f</function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="diir_getattr">
      <title>vsip_<replaceable>d</replaceable>iir_getattr_<replaceable>f</replaceable></title>

      <para>Returns the attributes of an IIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Returns the attribute values of a IIR filter object in
            structure passed by reference. The attributes are:</para>

            <itemizedlist>
              <listitem>
                <para>filter order, number of 2nd order sections,</para>
              </listitem>

              <listitem>
                <para>required length of an input/output segment (vector
                view),</para>
              </listitem>

              <listitem>
                <para>save state object.</para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef struct 
{
  vsip_length n2nd;
  vsip_scalar_vi seg_len;
  vsip_obj_state state;
} vsip_iir_attr_f;

void vsip_iir_getattr_f(const vsip_iir_f *filt, vsip_iir_attr_f *attr);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to a IIR filter object</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>attr</term>

                <listitem>
                  <para>Pointer to a
                  <function>vsip_<replaceable>d</replaceable>iir_attr_<replaceable>f</replaceable></function>
                  structure</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The filter object must be valid.</para>
              </listitem>

              <listitem>
                <para>The output attribute pointer must be valid –
                non-null.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The filter coefficient values are not accessible
            attributes.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_diir_create_f</function>,
            <function>vsip_diir_destroy_f</function>, and
            <function>vsip_diir_reset_f</function>.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="diir_reset">
      <title>vsip_<replaceable>d</replaceable>iir_reset_<replaceable>f</replaceable></title>

      <para>Reset the state of an IIR filter object.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Resets the internal state of a previously created IIR filter
            object to the same state it would have immediately after
            creation.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_iir_reset_f(vsip_iir_f *filt);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>filt</term>

                <listitem>
                  <para>Pointer to the IIR filter object to be reset</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The filter object must be valid.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para><function>vsip_<replaceable>d</replaceable>iir_create_<replaceable>f</replaceable></function>,
            <function>vsip_<replaceable>d</replaceable>iirflt_<replaceable>f</replaceable></function></para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>

  <section>
    <title>Miscellaneous Signal Processing Functions</title>

    <informaltable>
      <tgroup cols="2">
        <tbody>
          <row>
            <entry><function>vsip_shisto_p</function></entry>

            <entry>Histogram</entry>
          </row>

          <row>
            <entry><function>vsip_dsfreqswap_f</function></entry>

            <entry>Frequency Swap</entry>
          </row>
        </tbody>
      </tgroup>
    </informaltable>

    <section xml:id="shisto">
      <title>vsip_<replaceable>s</replaceable>histo_<replaceable>p</replaceable></title>

      <para>Compute the histogram of a vector (matrix).</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>To form a histogram of a vector (matrix). The length of the
            output vector is P. The first element of the output vector (index
            0) and the last element of the output vector (index P-1) are used
            to accumulate values of the input vector outside the range of
            interest. The bin size is therefore determined using (P-2)(number
            of bins to collect values less than than src_max and greater than
            or equal to src_min). The output vector is initialized to zero if
            the VSIP_HIST_RESET option is selected, or the histogram is
            accumulated on top of the current data in the output vector if the
            VSIP_HIST_ACCUM option is selected:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>c</m:mi>

                            <m:msub>
                              <m:mi>j</m:mi>

                              <m:mi>k</m:mi>
                            </m:msub>
                          </m:msub>

                          <m:mo>←</m:mo>

                          <m:msub>
                            <m:mi>c</m:mi>

                            <m:msub>
                              <m:mi>j</m:mi>

                              <m:mi>k</m:mi>
                            </m:msub>
                          </m:msub>

                          <m:mo>+</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mtext>for k = 0, 1, ..., N-1</m:mtext>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>c</m:mi>

                            <m:msub>
                              <m:mi>j</m:mi>

                              <m:mi>k,l</m:mi>
                            </m:msub>
                          </m:msub>

                          <m:mo>←</m:mo>

                          <m:msub>
                            <m:mi>c</m:mi>

                            <m:msub>
                              <m:mi>j</m:mi>

                              <m:mi>k,l</m:mi>
                            </m:msub>
                          </m:msub>

                          <m:mo>+</m:mo>

                          <m:mn>1</m:mn>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mtext>for k = 0, 1, ..., M-1, for l = 0, 1, ...,
                        N-1</m:mtext>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>

            <para>where</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>j</m:mi>

                      <m:mi>k</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mtable columnalign="left">
                        <m:mtr>
                          <m:mtd>
                            <m:mn>0</m:mn>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:msub>
                                <m:mi>src</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>&lt;</m:mo>

                              <m:mi>src_min</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>P-1</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:msub>
                                <m:mi>src</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>≥</m:mo>

                              <m:mi>src_max</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>P</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>2</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>

                                  <m:mo>⁢</m:mo>

                                  <m:mfrac>
                                    <m:mrow>
                                      <m:msub>
                                        <m:mi>src</m:mi>

                                        <m:mi>k</m:mi>
                                      </m:msub>

                                      <m:mo>-</m:mo>

                                      <m:mi>src_min</m:mi>
                                    </m:mrow>

                                    <m:mrow>
                                      <m:mi>src_max</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mi>src_min</m:mi>
                                    </m:mrow>
                                  </m:mfrac>
                                </m:mrow>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>src_min</m:mi>

                              <m:mo>≤</m:mo>

                              <m:msub>
                                <m:mi>src</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>&lt;</m:mo>

                              <m:mi>src_max</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>

            <para>or</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mrow>
                    <m:msub>
                      <m:mi>j</m:mi>

                      <m:mi>k,l</m:mi>
                    </m:msub>

                    <m:mo>←</m:mo>

                    <m:mrow>
                      <m:mo>{</m:mo>

                      <m:mtable columnalign="left">
                        <m:mtr>
                          <m:mtd>
                            <m:mn>0</m:mn>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:msub>
                                <m:mi>src</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>&lt;</m:mo>

                              <m:mi>src_min</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mi>P-1</m:mi>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:msub>
                                <m:mi>src</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>≥</m:mo>

                              <m:mi>src_max</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>

                        <m:mtr>
                          <m:mtd>
                            <m:mrow>
                              <m:mrow>
                                <m:mo>⌊</m:mo>

                                <m:mrow>
                                  <m:mrow>
                                    <m:mo>(</m:mo>

                                    <m:mrow>
                                      <m:mi>P</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mn>2</m:mn>
                                    </m:mrow>

                                    <m:mo>)</m:mo>
                                  </m:mrow>

                                  <m:mo>⁢</m:mo>

                                  <m:mfrac>
                                    <m:mrow>
                                      <m:msub>
                                        <m:mi>src</m:mi>

                                        <m:mi>k</m:mi>
                                      </m:msub>

                                      <m:mo>-</m:mo>

                                      <m:mi>src_min</m:mi>
                                    </m:mrow>

                                    <m:mrow>
                                      <m:mi>src_max</m:mi>

                                      <m:mo>-</m:mo>

                                      <m:mi>src_min</m:mi>
                                    </m:mrow>
                                  </m:mfrac>
                                </m:mrow>

                                <m:mo>⌋</m:mo>
                              </m:mrow>

                              <m:mo>+</m:mo>

                              <m:mn>1</m:mn>
                            </m:mrow>
                          </m:mtd>

                          <m:mtd>
                            <m:mrow>
                              <m:mi>src_min</m:mi>

                              <m:mo>≤</m:mo>

                              <m:msub>
                                <m:mi>src</m:mi>

                                <m:mi>k</m:mi>
                              </m:msub>

                              <m:mo>&lt;</m:mo>

                              <m:mi>src_max</m:mi>
                            </m:mrow>
                          </m:mtd>
                        </m:mtr>
                      </m:mtable>
                    </m:mrow>
                  </m:mrow>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>typedef enum{ VSIP_HIST_RESET = 1, VSIP_HIST_ACCUM = 2 } vsip_hist_opt;

void vsip_vhisto_f(const vsip_vview_f *src,
                   vsip_scalar_f min_bin, vsip_scalar_f max_bin,
                   vsip_hist_opt opt, const vsip_vview_f *hist);

void vsip_vhisto_i(const vsip_vview_i *src,
                   vsip_scalar_i min_bin, vsip_scalar_i max_bin,
                   vsip_hist_opt opt, const vsip_vview_i *hist);
void vsip_mhisto_f(const vsip_mview_f *src,
                   vsip_scalar_f min_bin, vsip_scalar_f max_bin,
                   vsip_hist_opt opt, const vsip_vview_f *hist);
void vsip_mhisto_i(const vsip_mview_i *src,
                   vsip_scalar_i min_bin, vsip_scalar_i max_bin,
                   vsip_hist_opt opt, const vsip_vview_i *hist);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>src</term>

                <listitem>
                  <para>View of source vector (matrix)</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>min_bin</term>

                <listitem>
                  <para>Threshold for minimum bin</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>max_bin</term>

                <listitem>
                  <para>Threshold for maximum bin</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>opt</term>

                <listitem>
                  <para>Enumerated type to determine if the output histogram
                  is first initialized to zero, or is accumulated on top of
                  previous data.</para>
                </listitem>
              </varlistentry>

              <varlistentry>
                <term>hist</term>

                <listitem>
                  <para>View of histogram vector, of length P</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>All view objects must be valid.</para>
              </listitem>

              <listitem>
                <para>min_bin &lt; max_bin.</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para>The first and last bins collect all the values less than
            min_val, and greater or equal to max_val, respectively. If these
            outlier values are not desired, create and bind a view of length
            P, and create a derived view (using the
            <function>vsip_vsubview_f</function> function) of the first view
            starting at index 1 and of length P-2. Collect the histogram into
            the larger view. Just the histogram values without the outliers
            are available in the derived view.</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>

    <section xml:id="sfreqswap">
      <title>vsip_<replaceable>ds</replaceable>freqswap_<replaceable>f</replaceable></title>

      <para>Swaps halves of a vector, or quadrants of a matrix, to remap zero
      frequencies from the origin to the middle.</para>

      <variablelist>
        <varlistentry>
          <term>Functionality</term>

          <listitem>
            <para>Swap:</para>

            <para><inlineequation>
                <m:math display="inline">
                  <m:mtable columnalign="left">
                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mi>i</m:mi>
                          </m:msub>

                          <m:mo>←</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mo>(</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mo>⌊</m:mo>

                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>/</m:mo>

                                        <m:mn>2</m:mn>
                                      </m:mrow>

                                      <m:mo>⌋</m:mo>
                                    </m:mrow>

                                    <m:mo>+</m:mo>

                                    <m:mi>i</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>mod</m:mo>

                                <m:mi>N</m:mi>
                              </m:mrow>

                              <m:mo>)</m:mo>
                            </m:mrow>
                          </m:msub>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mtext>for j = 0, 1, ..., N-1</m:mtext>
                      </m:mtd>
                    </m:mtr>

                    <m:mtr>
                      <m:mtd>
                        <m:mrow>
                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mi>i,j</m:mi>
                          </m:msub>

                          <m:mo>←</m:mo>

                          <m:msub>
                            <m:mi>x</m:mi>

                            <m:mrow>
                              <m:mo>(</m:mo>

                              <m:mrow>
                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mo>⌊</m:mo>

                                      <m:mrow>
                                        <m:mi>M</m:mi>

                                        <m:mo>/</m:mo>

                                        <m:mn>2</m:mn>
                                      </m:mrow>

                                      <m:mo>⌋</m:mo>
                                    </m:mrow>

                                    <m:mo>+</m:mo>

                                    <m:mi>i</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>mod</m:mo>

                                <m:mi>M</m:mi>
                              </m:mrow>

                              <m:mtext>,</m:mtext>

                              <m:mrow>
                                <m:mrow>
                                  <m:mo>(</m:mo>

                                  <m:mrow>
                                    <m:mrow>
                                      <m:mo>⌊</m:mo>

                                      <m:mrow>
                                        <m:mi>N</m:mi>

                                        <m:mo>/</m:mo>

                                        <m:mn>2</m:mn>
                                      </m:mrow>

                                      <m:mo>⌋</m:mo>
                                    </m:mrow>

                                    <m:mo>+</m:mo>

                                    <m:mi>j</m:mi>
                                  </m:mrow>

                                  <m:mo>)</m:mo>
                                </m:mrow>

                                <m:mo>mod</m:mo>

                                <m:mi>N</m:mi>
                              </m:mrow>

                              <m:mo>)</m:mo>
                            </m:mrow>
                          </m:msub>
                        </m:mrow>
                      </m:mtd>

                      <m:mtd>
                        <m:mtext>for i = 0, 1, ..., M-1,</m:mtext>

                        <m:mtext>for j = 0, 1, ..., N-1</m:mtext>
                      </m:mtd>
                    </m:mtr>
                  </m:mtable>
                </m:math>
              </inlineequation></para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Prototypes</term>

          <listitem>
            <synopsis>void vsip_vfreqswap_f(const vsip_vview_f *x);
void vsip_cvfreqswap_f(const vsip_cvview_f *x);
void vsip_mfreqswap_f(const vsip_mview_f *x);
void vsip_cmfreqswap_f(const vsip_cmview_f *x);</synopsis>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Arguments</term>

          <listitem>
            <variablelist>
              <varlistentry>
                <term>x</term>

                <listitem>
                  <para>Pointer to an input/output vector (matrix) view
                  object</para>
                </listitem>
              </varlistentry>
            </variablelist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Return value</term>

          <listitem>
            <para>None</para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Restrictions</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Errors</term>

          <listitem>
            <para>The arguments must conform to the following:</para>

            <orderedlist>
              <listitem>
                <para>The input/output object must be valid</para>
              </listitem>
            </orderedlist>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Notes/References</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>Examples</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term>See Also</term>

          <listitem>
            <para/>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>
</chapter>
